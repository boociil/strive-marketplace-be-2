// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
// }

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  // provider = "mysql"
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  id               Int         @id @default(autoincrement())
  email            String      @unique
  password         String
  firstName        String
  lastName         String
  gender           Int         @default(0)
  role             Int         @default(1)
  telp             String      @default("")
  buka_toko        Int         @default(0)
  nama_toko        String      @default("")
  klasifikasi_toko Int         @default(0)
  alamat           Alamat[]    @relation(name: "AlamatUser")
  rating_toko      Float       @default(0)
  product          Product[]
  transaksi        Transaksi[]
  review           Review[]
  cart             Cart[]
  time_pengajuan   DateTime?
  time_terima      DateTime?
  status_pengajuan Int         @default(0)
  acc_by           Int?
  path_file        String      @default("")
  tanggal_lahir    DateTime?
}

model Product {
  id        Int         @id @default(autoincrement())
  userId    Int
  user      Users       @relation(fields: [userId], references: [id]) // foreign Key
  nama      String
  desc      String
  path      String
  transaksi Transaksi[]
  review    Review[]
  cart      Cart[]
  variasi   Variasi[]
}

model Variasi {
  id        Int     @id @default(autoincrement())
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  nama      String
  harga     Int
  path      String
  stok      Int     @default(0)
  cart      Cart[]
}

model Transaksi {
  id        Int     @id @default(autoincrement())
  userId    Int
  user      Users   @relation(fields: [userId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  status    Int
}

model Review {
  id        Int       @id @default(autoincrement())
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])
  productId Int
  product   Product   @relation(fields: [productId], references: [id])
  review    String
  rating    Float
  time      DateTime?
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      Users    @relation(fields: [userId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  variasiId Int
  variasi   Variasi  @relation(fields: [variasiId], references: [id])
  quantity  Int
  time      DateTime
}

model Alamat {
  id         Int    @id @default(autoincrement())
  userId     Int
  users      Users  @relation(name: "AlamatUser", fields: [userId], references: [id])
  provinsi   String
  kabupaten  String
  kecamatan  String
  desa       String
  kode_pos   String
  detail     String @default("")
  catatan    String @default("")
  is_toko    Int    @default(0) // 0 = alamat biasa, 1 = alamat toko
  is_default Int    @default(0) // 0 = bukan alamat default, 1 = alamat default
}
