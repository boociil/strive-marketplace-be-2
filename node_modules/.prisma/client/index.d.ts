
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Users
 * 
 */
export type Users = $Result.DefaultSelection<Prisma.$UsersPayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model Variasi
 * 
 */
export type Variasi = $Result.DefaultSelection<Prisma.$VariasiPayload>
/**
 * Model Transaksi
 * 
 */
export type Transaksi = $Result.DefaultSelection<Prisma.$TransaksiPayload>
/**
 * Model Review
 * 
 */
export type Review = $Result.DefaultSelection<Prisma.$ReviewPayload>
/**
 * Model Cart
 * 
 */
export type Cart = $Result.DefaultSelection<Prisma.$CartPayload>
/**
 * Model Alamat
 * 
 */
export type Alamat = $Result.DefaultSelection<Prisma.$AlamatPayload>
/**
 * Model Provinsi
 * 
 */
export type Provinsi = $Result.DefaultSelection<Prisma.$ProvinsiPayload>
/**
 * Model Kabupaten
 * 
 */
export type Kabupaten = $Result.DefaultSelection<Prisma.$KabupatenPayload>
/**
 * Model Kecamatan
 * 
 */
export type Kecamatan = $Result.DefaultSelection<Prisma.$KecamatanPayload>
/**
 * Model Desa
 * 
 */
export type Desa = $Result.DefaultSelection<Prisma.$DesaPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.users.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.users.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.users`: Exposes CRUD operations for the **Users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.UsersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.variasi`: Exposes CRUD operations for the **Variasi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Variasis
    * const variasis = await prisma.variasi.findMany()
    * ```
    */
  get variasi(): Prisma.VariasiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transaksi`: Exposes CRUD operations for the **Transaksi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transaksis
    * const transaksis = await prisma.transaksi.findMany()
    * ```
    */
  get transaksi(): Prisma.TransaksiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.review`: Exposes CRUD operations for the **Review** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.review.findMany()
    * ```
    */
  get review(): Prisma.ReviewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cart`: Exposes CRUD operations for the **Cart** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Carts
    * const carts = await prisma.cart.findMany()
    * ```
    */
  get cart(): Prisma.CartDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.alamat`: Exposes CRUD operations for the **Alamat** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alamats
    * const alamats = await prisma.alamat.findMany()
    * ```
    */
  get alamat(): Prisma.AlamatDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.provinsi`: Exposes CRUD operations for the **Provinsi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Provinsis
    * const provinsis = await prisma.provinsi.findMany()
    * ```
    */
  get provinsi(): Prisma.ProvinsiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.kabupaten`: Exposes CRUD operations for the **Kabupaten** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kabupatens
    * const kabupatens = await prisma.kabupaten.findMany()
    * ```
    */
  get kabupaten(): Prisma.KabupatenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.kecamatan`: Exposes CRUD operations for the **Kecamatan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kecamatans
    * const kecamatans = await prisma.kecamatan.findMany()
    * ```
    */
  get kecamatan(): Prisma.KecamatanDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.desa`: Exposes CRUD operations for the **Desa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Desas
    * const desas = await prisma.desa.findMany()
    * ```
    */
  get desa(): Prisma.DesaDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.11.1
   * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Users: 'Users',
    Product: 'Product',
    Variasi: 'Variasi',
    Transaksi: 'Transaksi',
    Review: 'Review',
    Cart: 'Cart',
    Alamat: 'Alamat',
    Provinsi: 'Provinsi',
    Kabupaten: 'Kabupaten',
    Kecamatan: 'Kecamatan',
    Desa: 'Desa'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "users" | "product" | "variasi" | "transaksi" | "review" | "cart" | "alamat" | "provinsi" | "kabupaten" | "kecamatan" | "desa"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Users: {
        payload: Prisma.$UsersPayload<ExtArgs>
        fields: Prisma.UsersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findFirst: {
            args: Prisma.UsersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findMany: {
            args: Prisma.UsersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          create: {
            args: Prisma.UsersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          createMany: {
            args: Prisma.UsersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          delete: {
            args: Prisma.UsersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          update: {
            args: Prisma.UsersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          deleteMany: {
            args: Prisma.UsersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          upsert: {
            args: Prisma.UsersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.UsersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      Variasi: {
        payload: Prisma.$VariasiPayload<ExtArgs>
        fields: Prisma.VariasiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VariasiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariasiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VariasiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariasiPayload>
          }
          findFirst: {
            args: Prisma.VariasiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariasiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VariasiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariasiPayload>
          }
          findMany: {
            args: Prisma.VariasiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariasiPayload>[]
          }
          create: {
            args: Prisma.VariasiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariasiPayload>
          }
          createMany: {
            args: Prisma.VariasiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VariasiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariasiPayload>[]
          }
          delete: {
            args: Prisma.VariasiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariasiPayload>
          }
          update: {
            args: Prisma.VariasiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariasiPayload>
          }
          deleteMany: {
            args: Prisma.VariasiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VariasiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VariasiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariasiPayload>[]
          }
          upsert: {
            args: Prisma.VariasiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariasiPayload>
          }
          aggregate: {
            args: Prisma.VariasiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVariasi>
          }
          groupBy: {
            args: Prisma.VariasiGroupByArgs<ExtArgs>
            result: $Utils.Optional<VariasiGroupByOutputType>[]
          }
          count: {
            args: Prisma.VariasiCountArgs<ExtArgs>
            result: $Utils.Optional<VariasiCountAggregateOutputType> | number
          }
        }
      }
      Transaksi: {
        payload: Prisma.$TransaksiPayload<ExtArgs>
        fields: Prisma.TransaksiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransaksiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaksiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransaksiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaksiPayload>
          }
          findFirst: {
            args: Prisma.TransaksiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaksiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransaksiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaksiPayload>
          }
          findMany: {
            args: Prisma.TransaksiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaksiPayload>[]
          }
          create: {
            args: Prisma.TransaksiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaksiPayload>
          }
          createMany: {
            args: Prisma.TransaksiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransaksiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaksiPayload>[]
          }
          delete: {
            args: Prisma.TransaksiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaksiPayload>
          }
          update: {
            args: Prisma.TransaksiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaksiPayload>
          }
          deleteMany: {
            args: Prisma.TransaksiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransaksiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TransaksiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaksiPayload>[]
          }
          upsert: {
            args: Prisma.TransaksiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaksiPayload>
          }
          aggregate: {
            args: Prisma.TransaksiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransaksi>
          }
          groupBy: {
            args: Prisma.TransaksiGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransaksiGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransaksiCountArgs<ExtArgs>
            result: $Utils.Optional<TransaksiCountAggregateOutputType> | number
          }
        }
      }
      Review: {
        payload: Prisma.$ReviewPayload<ExtArgs>
        fields: Prisma.ReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findFirst: {
            args: Prisma.ReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findMany: {
            args: Prisma.ReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          create: {
            args: Prisma.ReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          createMany: {
            args: Prisma.ReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReviewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          delete: {
            args: Prisma.ReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          update: {
            args: Prisma.ReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          deleteMany: {
            args: Prisma.ReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReviewUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          upsert: {
            args: Prisma.ReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          aggregate: {
            args: Prisma.ReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReview>
          }
          groupBy: {
            args: Prisma.ReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReviewCountArgs<ExtArgs>
            result: $Utils.Optional<ReviewCountAggregateOutputType> | number
          }
        }
      }
      Cart: {
        payload: Prisma.$CartPayload<ExtArgs>
        fields: Prisma.CartFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CartFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CartFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartPayload>
          }
          findFirst: {
            args: Prisma.CartFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CartFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartPayload>
          }
          findMany: {
            args: Prisma.CartFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartPayload>[]
          }
          create: {
            args: Prisma.CartCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartPayload>
          }
          createMany: {
            args: Prisma.CartCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CartCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartPayload>[]
          }
          delete: {
            args: Prisma.CartDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartPayload>
          }
          update: {
            args: Prisma.CartUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartPayload>
          }
          deleteMany: {
            args: Prisma.CartDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CartUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CartUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartPayload>[]
          }
          upsert: {
            args: Prisma.CartUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartPayload>
          }
          aggregate: {
            args: Prisma.CartAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCart>
          }
          groupBy: {
            args: Prisma.CartGroupByArgs<ExtArgs>
            result: $Utils.Optional<CartGroupByOutputType>[]
          }
          count: {
            args: Prisma.CartCountArgs<ExtArgs>
            result: $Utils.Optional<CartCountAggregateOutputType> | number
          }
        }
      }
      Alamat: {
        payload: Prisma.$AlamatPayload<ExtArgs>
        fields: Prisma.AlamatFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AlamatFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AlamatFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>
          }
          findFirst: {
            args: Prisma.AlamatFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AlamatFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>
          }
          findMany: {
            args: Prisma.AlamatFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>[]
          }
          create: {
            args: Prisma.AlamatCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>
          }
          createMany: {
            args: Prisma.AlamatCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AlamatCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>[]
          }
          delete: {
            args: Prisma.AlamatDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>
          }
          update: {
            args: Prisma.AlamatUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>
          }
          deleteMany: {
            args: Prisma.AlamatDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AlamatUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AlamatUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>[]
          }
          upsert: {
            args: Prisma.AlamatUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>
          }
          aggregate: {
            args: Prisma.AlamatAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAlamat>
          }
          groupBy: {
            args: Prisma.AlamatGroupByArgs<ExtArgs>
            result: $Utils.Optional<AlamatGroupByOutputType>[]
          }
          count: {
            args: Prisma.AlamatCountArgs<ExtArgs>
            result: $Utils.Optional<AlamatCountAggregateOutputType> | number
          }
        }
      }
      Provinsi: {
        payload: Prisma.$ProvinsiPayload<ExtArgs>
        fields: Prisma.ProvinsiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProvinsiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProvinsiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>
          }
          findFirst: {
            args: Prisma.ProvinsiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProvinsiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>
          }
          findMany: {
            args: Prisma.ProvinsiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>[]
          }
          create: {
            args: Prisma.ProvinsiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>
          }
          createMany: {
            args: Prisma.ProvinsiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProvinsiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>[]
          }
          delete: {
            args: Prisma.ProvinsiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>
          }
          update: {
            args: Prisma.ProvinsiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>
          }
          deleteMany: {
            args: Prisma.ProvinsiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProvinsiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProvinsiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>[]
          }
          upsert: {
            args: Prisma.ProvinsiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>
          }
          aggregate: {
            args: Prisma.ProvinsiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProvinsi>
          }
          groupBy: {
            args: Prisma.ProvinsiGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProvinsiGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProvinsiCountArgs<ExtArgs>
            result: $Utils.Optional<ProvinsiCountAggregateOutputType> | number
          }
        }
      }
      Kabupaten: {
        payload: Prisma.$KabupatenPayload<ExtArgs>
        fields: Prisma.KabupatenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.KabupatenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.KabupatenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>
          }
          findFirst: {
            args: Prisma.KabupatenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.KabupatenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>
          }
          findMany: {
            args: Prisma.KabupatenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>[]
          }
          create: {
            args: Prisma.KabupatenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>
          }
          createMany: {
            args: Prisma.KabupatenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.KabupatenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>[]
          }
          delete: {
            args: Prisma.KabupatenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>
          }
          update: {
            args: Prisma.KabupatenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>
          }
          deleteMany: {
            args: Prisma.KabupatenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.KabupatenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.KabupatenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>[]
          }
          upsert: {
            args: Prisma.KabupatenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>
          }
          aggregate: {
            args: Prisma.KabupatenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKabupaten>
          }
          groupBy: {
            args: Prisma.KabupatenGroupByArgs<ExtArgs>
            result: $Utils.Optional<KabupatenGroupByOutputType>[]
          }
          count: {
            args: Prisma.KabupatenCountArgs<ExtArgs>
            result: $Utils.Optional<KabupatenCountAggregateOutputType> | number
          }
        }
      }
      Kecamatan: {
        payload: Prisma.$KecamatanPayload<ExtArgs>
        fields: Prisma.KecamatanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.KecamatanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.KecamatanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>
          }
          findFirst: {
            args: Prisma.KecamatanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.KecamatanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>
          }
          findMany: {
            args: Prisma.KecamatanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>[]
          }
          create: {
            args: Prisma.KecamatanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>
          }
          createMany: {
            args: Prisma.KecamatanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.KecamatanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>[]
          }
          delete: {
            args: Prisma.KecamatanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>
          }
          update: {
            args: Prisma.KecamatanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>
          }
          deleteMany: {
            args: Prisma.KecamatanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.KecamatanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.KecamatanUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>[]
          }
          upsert: {
            args: Prisma.KecamatanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>
          }
          aggregate: {
            args: Prisma.KecamatanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKecamatan>
          }
          groupBy: {
            args: Prisma.KecamatanGroupByArgs<ExtArgs>
            result: $Utils.Optional<KecamatanGroupByOutputType>[]
          }
          count: {
            args: Prisma.KecamatanCountArgs<ExtArgs>
            result: $Utils.Optional<KecamatanCountAggregateOutputType> | number
          }
        }
      }
      Desa: {
        payload: Prisma.$DesaPayload<ExtArgs>
        fields: Prisma.DesaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DesaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DesaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>
          }
          findFirst: {
            args: Prisma.DesaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DesaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>
          }
          findMany: {
            args: Prisma.DesaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>[]
          }
          create: {
            args: Prisma.DesaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>
          }
          createMany: {
            args: Prisma.DesaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DesaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>[]
          }
          delete: {
            args: Prisma.DesaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>
          }
          update: {
            args: Prisma.DesaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>
          }
          deleteMany: {
            args: Prisma.DesaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DesaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DesaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>[]
          }
          upsert: {
            args: Prisma.DesaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>
          }
          aggregate: {
            args: Prisma.DesaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDesa>
          }
          groupBy: {
            args: Prisma.DesaGroupByArgs<ExtArgs>
            result: $Utils.Optional<DesaGroupByOutputType>[]
          }
          count: {
            args: Prisma.DesaCountArgs<ExtArgs>
            result: $Utils.Optional<DesaCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    users?: UsersOmit
    product?: ProductOmit
    variasi?: VariasiOmit
    transaksi?: TransaksiOmit
    review?: ReviewOmit
    cart?: CartOmit
    alamat?: AlamatOmit
    provinsi?: ProvinsiOmit
    kabupaten?: KabupatenOmit
    kecamatan?: KecamatanOmit
    desa?: DesaOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    alamat: number
    product: number
    transaksi: number
    review: number
    cart: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    alamat?: boolean | UsersCountOutputTypeCountAlamatArgs
    product?: boolean | UsersCountOutputTypeCountProductArgs
    transaksi?: boolean | UsersCountOutputTypeCountTransaksiArgs
    review?: boolean | UsersCountOutputTypeCountReviewArgs
    cart?: boolean | UsersCountOutputTypeCountCartArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountAlamatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlamatWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountTransaksiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaksiWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountCartArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CartWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    transaksi: number
    review: number
    cart: number
    variasi: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaksi?: boolean | ProductCountOutputTypeCountTransaksiArgs
    review?: boolean | ProductCountOutputTypeCountReviewArgs
    cart?: boolean | ProductCountOutputTypeCountCartArgs
    variasi?: boolean | ProductCountOutputTypeCountVariasiArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountTransaksiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaksiWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountCartArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CartWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountVariasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VariasiWhereInput
  }


  /**
   * Count Type VariasiCountOutputType
   */

  export type VariasiCountOutputType = {
    cart: number
  }

  export type VariasiCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cart?: boolean | VariasiCountOutputTypeCountCartArgs
  }

  // Custom InputTypes
  /**
   * VariasiCountOutputType without action
   */
  export type VariasiCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariasiCountOutputType
     */
    select?: VariasiCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VariasiCountOutputType without action
   */
  export type VariasiCountOutputTypeCountCartArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CartWhereInput
  }


  /**
   * Count Type ProvinsiCountOutputType
   */

  export type ProvinsiCountOutputType = {
    kabupaten: number
    alamat: number
  }

  export type ProvinsiCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kabupaten?: boolean | ProvinsiCountOutputTypeCountKabupatenArgs
    alamat?: boolean | ProvinsiCountOutputTypeCountAlamatArgs
  }

  // Custom InputTypes
  /**
   * ProvinsiCountOutputType without action
   */
  export type ProvinsiCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProvinsiCountOutputType
     */
    select?: ProvinsiCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProvinsiCountOutputType without action
   */
  export type ProvinsiCountOutputTypeCountKabupatenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KabupatenWhereInput
  }

  /**
   * ProvinsiCountOutputType without action
   */
  export type ProvinsiCountOutputTypeCountAlamatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlamatWhereInput
  }


  /**
   * Count Type KabupatenCountOutputType
   */

  export type KabupatenCountOutputType = {
    kecamatan: number
    alamat: number
  }

  export type KabupatenCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kecamatan?: boolean | KabupatenCountOutputTypeCountKecamatanArgs
    alamat?: boolean | KabupatenCountOutputTypeCountAlamatArgs
  }

  // Custom InputTypes
  /**
   * KabupatenCountOutputType without action
   */
  export type KabupatenCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KabupatenCountOutputType
     */
    select?: KabupatenCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * KabupatenCountOutputType without action
   */
  export type KabupatenCountOutputTypeCountKecamatanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KecamatanWhereInput
  }

  /**
   * KabupatenCountOutputType without action
   */
  export type KabupatenCountOutputTypeCountAlamatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlamatWhereInput
  }


  /**
   * Count Type KecamatanCountOutputType
   */

  export type KecamatanCountOutputType = {
    desa: number
    alamat: number
  }

  export type KecamatanCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    desa?: boolean | KecamatanCountOutputTypeCountDesaArgs
    alamat?: boolean | KecamatanCountOutputTypeCountAlamatArgs
  }

  // Custom InputTypes
  /**
   * KecamatanCountOutputType without action
   */
  export type KecamatanCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KecamatanCountOutputType
     */
    select?: KecamatanCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * KecamatanCountOutputType without action
   */
  export type KecamatanCountOutputTypeCountDesaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DesaWhereInput
  }

  /**
   * KecamatanCountOutputType without action
   */
  export type KecamatanCountOutputTypeCountAlamatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlamatWhereInput
  }


  /**
   * Count Type DesaCountOutputType
   */

  export type DesaCountOutputType = {
    alamat: number
  }

  export type DesaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    alamat?: boolean | DesaCountOutputTypeCountAlamatArgs
  }

  // Custom InputTypes
  /**
   * DesaCountOutputType without action
   */
  export type DesaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesaCountOutputType
     */
    select?: DesaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DesaCountOutputType without action
   */
  export type DesaCountOutputTypeCountAlamatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlamatWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
    gender: number | null
    role: number | null
    buka_toko: number | null
    klasifikasi_toko: number | null
    rating_toko: number | null
    status_pengajuan: number | null
    acc_by: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
    gender: number | null
    role: number | null
    buka_toko: number | null
    klasifikasi_toko: number | null
    rating_toko: number | null
    status_pengajuan: number | null
    acc_by: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    gender: number | null
    role: number | null
    telp: string | null
    buka_toko: number | null
    nama_toko: string | null
    klasifikasi_toko: number | null
    rating_toko: number | null
    time_pengajuan: Date | null
    time_terima: Date | null
    status_pengajuan: number | null
    acc_by: number | null
    path_file: string | null
    tanggal_lahir: Date | null
    ktp_path: string | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    gender: number | null
    role: number | null
    telp: string | null
    buka_toko: number | null
    nama_toko: string | null
    klasifikasi_toko: number | null
    rating_toko: number | null
    time_pengajuan: Date | null
    time_terima: Date | null
    status_pengajuan: number | null
    acc_by: number | null
    path_file: string | null
    tanggal_lahir: Date | null
    ktp_path: string | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    email: number
    password: number
    firstName: number
    lastName: number
    gender: number
    role: number
    telp: number
    buka_toko: number
    nama_toko: number
    klasifikasi_toko: number
    rating_toko: number
    time_pengajuan: number
    time_terima: number
    status_pengajuan: number
    acc_by: number
    path_file: number
    tanggal_lahir: number
    ktp_path: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
    gender?: true
    role?: true
    buka_toko?: true
    klasifikasi_toko?: true
    rating_toko?: true
    status_pengajuan?: true
    acc_by?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
    gender?: true
    role?: true
    buka_toko?: true
    klasifikasi_toko?: true
    rating_toko?: true
    status_pengajuan?: true
    acc_by?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    gender?: true
    role?: true
    telp?: true
    buka_toko?: true
    nama_toko?: true
    klasifikasi_toko?: true
    rating_toko?: true
    time_pengajuan?: true
    time_terima?: true
    status_pengajuan?: true
    acc_by?: true
    path_file?: true
    tanggal_lahir?: true
    ktp_path?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    gender?: true
    role?: true
    telp?: true
    buka_toko?: true
    nama_toko?: true
    klasifikasi_toko?: true
    rating_toko?: true
    time_pengajuan?: true
    time_terima?: true
    status_pengajuan?: true
    acc_by?: true
    path_file?: true
    tanggal_lahir?: true
    ktp_path?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    gender?: true
    role?: true
    telp?: true
    buka_toko?: true
    nama_toko?: true
    klasifikasi_toko?: true
    rating_toko?: true
    time_pengajuan?: true
    time_terima?: true
    status_pengajuan?: true
    acc_by?: true
    path_file?: true
    tanggal_lahir?: true
    ktp_path?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to aggregate.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsersWhereInput
    orderBy?: UsersOrderByWithAggregationInput | UsersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: UsersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: number
    email: string
    password: string
    firstName: string
    lastName: string
    gender: number
    role: number
    telp: string
    buka_toko: number
    nama_toko: string
    klasifikasi_toko: number
    rating_toko: number
    time_pengajuan: Date | null
    time_terima: Date | null
    status_pengajuan: number
    acc_by: number | null
    path_file: string
    tanggal_lahir: Date | null
    ktp_path: string | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type UsersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    gender?: boolean
    role?: boolean
    telp?: boolean
    buka_toko?: boolean
    nama_toko?: boolean
    klasifikasi_toko?: boolean
    rating_toko?: boolean
    time_pengajuan?: boolean
    time_terima?: boolean
    status_pengajuan?: boolean
    acc_by?: boolean
    path_file?: boolean
    tanggal_lahir?: boolean
    ktp_path?: boolean
    alamat?: boolean | Users$alamatArgs<ExtArgs>
    product?: boolean | Users$productArgs<ExtArgs>
    transaksi?: boolean | Users$transaksiArgs<ExtArgs>
    review?: boolean | Users$reviewArgs<ExtArgs>
    cart?: boolean | Users$cartArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type UsersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    gender?: boolean
    role?: boolean
    telp?: boolean
    buka_toko?: boolean
    nama_toko?: boolean
    klasifikasi_toko?: boolean
    rating_toko?: boolean
    time_pengajuan?: boolean
    time_terima?: boolean
    status_pengajuan?: boolean
    acc_by?: boolean
    path_file?: boolean
    tanggal_lahir?: boolean
    ktp_path?: boolean
  }, ExtArgs["result"]["users"]>

  export type UsersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    gender?: boolean
    role?: boolean
    telp?: boolean
    buka_toko?: boolean
    nama_toko?: boolean
    klasifikasi_toko?: boolean
    rating_toko?: boolean
    time_pengajuan?: boolean
    time_terima?: boolean
    status_pengajuan?: boolean
    acc_by?: boolean
    path_file?: boolean
    tanggal_lahir?: boolean
    ktp_path?: boolean
  }, ExtArgs["result"]["users"]>

  export type UsersSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    gender?: boolean
    role?: boolean
    telp?: boolean
    buka_toko?: boolean
    nama_toko?: boolean
    klasifikasi_toko?: boolean
    rating_toko?: boolean
    time_pengajuan?: boolean
    time_terima?: boolean
    status_pengajuan?: boolean
    acc_by?: boolean
    path_file?: boolean
    tanggal_lahir?: boolean
    ktp_path?: boolean
  }

  export type UsersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "password" | "firstName" | "lastName" | "gender" | "role" | "telp" | "buka_toko" | "nama_toko" | "klasifikasi_toko" | "rating_toko" | "time_pengajuan" | "time_terima" | "status_pengajuan" | "acc_by" | "path_file" | "tanggal_lahir" | "ktp_path", ExtArgs["result"]["users"]>
  export type UsersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    alamat?: boolean | Users$alamatArgs<ExtArgs>
    product?: boolean | Users$productArgs<ExtArgs>
    transaksi?: boolean | Users$transaksiArgs<ExtArgs>
    review?: boolean | Users$reviewArgs<ExtArgs>
    cart?: boolean | Users$cartArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UsersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Users"
    objects: {
      alamat: Prisma.$AlamatPayload<ExtArgs>[]
      product: Prisma.$ProductPayload<ExtArgs>[]
      transaksi: Prisma.$TransaksiPayload<ExtArgs>[]
      review: Prisma.$ReviewPayload<ExtArgs>[]
      cart: Prisma.$CartPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      password: string
      firstName: string
      lastName: string
      gender: number
      role: number
      telp: string
      buka_toko: number
      nama_toko: string
      klasifikasi_toko: number
      rating_toko: number
      time_pengajuan: Date | null
      time_terima: Date | null
      status_pengajuan: number
      acc_by: number | null
      path_file: string
      tanggal_lahir: Date | null
      ktp_path: string | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type UsersGetPayload<S extends boolean | null | undefined | UsersDefaultArgs> = $Result.GetResult<Prisma.$UsersPayload, S>

  type UsersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface UsersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Users'], meta: { name: 'Users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {UsersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsersFindUniqueArgs>(args: SelectSubset<T, UsersFindUniqueArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsersFindUniqueOrThrowArgs>(args: SelectSubset<T, UsersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsersFindFirstArgs>(args?: SelectSubset<T, UsersFindFirstArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsersFindFirstOrThrowArgs>(args?: SelectSubset<T, UsersFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsersFindManyArgs>(args?: SelectSubset<T, UsersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {UsersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends UsersCreateArgs>(args: SelectSubset<T, UsersCreateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UsersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsersCreateManyArgs>(args?: SelectSubset<T, UsersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UsersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsersCreateManyAndReturnArgs>(args?: SelectSubset<T, UsersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {UsersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends UsersDeleteArgs>(args: SelectSubset<T, UsersDeleteArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {UsersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsersUpdateArgs>(args: SelectSubset<T, UsersUpdateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UsersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsersDeleteManyArgs>(args?: SelectSubset<T, UsersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsersUpdateManyArgs>(args: SelectSubset<T, UsersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UsersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsersUpdateManyAndReturnArgs>(args: SelectSubset<T, UsersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {UsersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends UsersUpsertArgs>(args: SelectSubset<T, UsersUpsertArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UsersCountArgs>(
      args?: Subset<T, UsersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Users model
   */
  readonly fields: UsersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    alamat<T extends Users$alamatArgs<ExtArgs> = {}>(args?: Subset<T, Users$alamatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    product<T extends Users$productArgs<ExtArgs> = {}>(args?: Subset<T, Users$productArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transaksi<T extends Users$transaksiArgs<ExtArgs> = {}>(args?: Subset<T, Users$transaksiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaksiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    review<T extends Users$reviewArgs<ExtArgs> = {}>(args?: Subset<T, Users$reviewArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cart<T extends Users$cartArgs<ExtArgs> = {}>(args?: Subset<T, Users$cartArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Users model
   */
  interface UsersFieldRefs {
    readonly id: FieldRef<"Users", 'Int'>
    readonly email: FieldRef<"Users", 'String'>
    readonly password: FieldRef<"Users", 'String'>
    readonly firstName: FieldRef<"Users", 'String'>
    readonly lastName: FieldRef<"Users", 'String'>
    readonly gender: FieldRef<"Users", 'Int'>
    readonly role: FieldRef<"Users", 'Int'>
    readonly telp: FieldRef<"Users", 'String'>
    readonly buka_toko: FieldRef<"Users", 'Int'>
    readonly nama_toko: FieldRef<"Users", 'String'>
    readonly klasifikasi_toko: FieldRef<"Users", 'Int'>
    readonly rating_toko: FieldRef<"Users", 'Float'>
    readonly time_pengajuan: FieldRef<"Users", 'DateTime'>
    readonly time_terima: FieldRef<"Users", 'DateTime'>
    readonly status_pengajuan: FieldRef<"Users", 'Int'>
    readonly acc_by: FieldRef<"Users", 'Int'>
    readonly path_file: FieldRef<"Users", 'String'>
    readonly tanggal_lahir: FieldRef<"Users", 'DateTime'>
    readonly ktp_path: FieldRef<"Users", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Users findUnique
   */
  export type UsersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findUniqueOrThrow
   */
  export type UsersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findFirst
   */
  export type UsersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findFirstOrThrow
   */
  export type UsersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findMany
   */
  export type UsersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users create
   */
  export type UsersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to create a Users.
     */
    data: XOR<UsersCreateInput, UsersUncheckedCreateInput>
  }

  /**
   * Users createMany
   */
  export type UsersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users createManyAndReturn
   */
  export type UsersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users update
   */
  export type UsersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to update a Users.
     */
    data: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
    /**
     * Choose, which Users to update.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users updateMany
   */
  export type UsersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * Users updateManyAndReturn
   */
  export type UsersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * Users upsert
   */
  export type UsersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The filter to search for the Users to update in case it exists.
     */
    where: UsersWhereUniqueInput
    /**
     * In case the Users found by the `where` argument doesn't exist, create a new Users with this data.
     */
    create: XOR<UsersCreateInput, UsersUncheckedCreateInput>
    /**
     * In case the Users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
  }

  /**
   * Users delete
   */
  export type UsersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter which Users to delete.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users deleteMany
   */
  export type UsersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UsersWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * Users.alamat
   */
  export type Users$alamatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    where?: AlamatWhereInput
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    cursor?: AlamatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlamatScalarFieldEnum | AlamatScalarFieldEnum[]
  }

  /**
   * Users.product
   */
  export type Users$productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Users.transaksi
   */
  export type Users$transaksiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiInclude<ExtArgs> | null
    where?: TransaksiWhereInput
    orderBy?: TransaksiOrderByWithRelationInput | TransaksiOrderByWithRelationInput[]
    cursor?: TransaksiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * Users.review
   */
  export type Users$reviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Users.cart
   */
  export type Users$cartArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartInclude<ExtArgs> | null
    where?: CartWhereInput
    orderBy?: CartOrderByWithRelationInput | CartOrderByWithRelationInput[]
    cursor?: CartWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CartScalarFieldEnum | CartScalarFieldEnum[]
  }

  /**
   * Users without action
   */
  export type UsersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type ProductSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type ProductMinAggregateOutputType = {
    id: number | null
    userId: number | null
    nama: string | null
    desc: string | null
    path: string | null
  }

  export type ProductMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    nama: string | null
    desc: string | null
    path: string | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    userId: number
    nama: number
    desc: number
    path: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type ProductSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    userId?: true
    nama?: true
    desc?: true
    path?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    userId?: true
    nama?: true
    desc?: true
    path?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    userId?: true
    nama?: true
    desc?: true
    path?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: number
    userId: number
    nama: string
    desc: string
    path: string
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    nama?: boolean
    desc?: boolean
    path?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
    transaksi?: boolean | Product$transaksiArgs<ExtArgs>
    review?: boolean | Product$reviewArgs<ExtArgs>
    cart?: boolean | Product$cartArgs<ExtArgs>
    variasi?: boolean | Product$variasiArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    nama?: boolean
    desc?: boolean
    path?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    nama?: boolean
    desc?: boolean
    path?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    id?: boolean
    userId?: boolean
    nama?: boolean
    desc?: boolean
    path?: boolean
  }

  export type ProductOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "nama" | "desc" | "path", ExtArgs["result"]["product"]>
  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
    transaksi?: boolean | Product$transaksiArgs<ExtArgs>
    review?: boolean | Product$reviewArgs<ExtArgs>
    cart?: boolean | Product$cartArgs<ExtArgs>
    variasi?: boolean | Product$variasiArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type ProductIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      user: Prisma.$UsersPayload<ExtArgs>
      transaksi: Prisma.$TransaksiPayload<ExtArgs>[]
      review: Prisma.$ReviewPayload<ExtArgs>[]
      cart: Prisma.$CartPayload<ExtArgs>[]
      variasi: Prisma.$VariasiPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      nama: string
      desc: string
      path: string
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productWithIdOnly = await prisma.product.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {ProductUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productWithIdOnly = await prisma.product.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    transaksi<T extends Product$transaksiArgs<ExtArgs> = {}>(args?: Subset<T, Product$transaksiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaksiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    review<T extends Product$reviewArgs<ExtArgs> = {}>(args?: Subset<T, Product$reviewArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cart<T extends Product$cartArgs<ExtArgs> = {}>(args?: Subset<T, Product$cartArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    variasi<T extends Product$variasiArgs<ExtArgs> = {}>(args?: Subset<T, Product$variasiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariasiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'Int'>
    readonly userId: FieldRef<"Product", 'Int'>
    readonly nama: FieldRef<"Product", 'String'>
    readonly desc: FieldRef<"Product", 'String'>
    readonly path: FieldRef<"Product", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
  }

  /**
   * Product updateManyAndReturn
   */
  export type ProductUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to delete.
     */
    limit?: number
  }

  /**
   * Product.transaksi
   */
  export type Product$transaksiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiInclude<ExtArgs> | null
    where?: TransaksiWhereInput
    orderBy?: TransaksiOrderByWithRelationInput | TransaksiOrderByWithRelationInput[]
    cursor?: TransaksiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * Product.review
   */
  export type Product$reviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Product.cart
   */
  export type Product$cartArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartInclude<ExtArgs> | null
    where?: CartWhereInput
    orderBy?: CartOrderByWithRelationInput | CartOrderByWithRelationInput[]
    cursor?: CartWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CartScalarFieldEnum | CartScalarFieldEnum[]
  }

  /**
   * Product.variasi
   */
  export type Product$variasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variasi
     */
    select?: VariasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variasi
     */
    omit?: VariasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariasiInclude<ExtArgs> | null
    where?: VariasiWhereInput
    orderBy?: VariasiOrderByWithRelationInput | VariasiOrderByWithRelationInput[]
    cursor?: VariasiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VariasiScalarFieldEnum | VariasiScalarFieldEnum[]
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model Variasi
   */

  export type AggregateVariasi = {
    _count: VariasiCountAggregateOutputType | null
    _avg: VariasiAvgAggregateOutputType | null
    _sum: VariasiSumAggregateOutputType | null
    _min: VariasiMinAggregateOutputType | null
    _max: VariasiMaxAggregateOutputType | null
  }

  export type VariasiAvgAggregateOutputType = {
    id: number | null
    productId: number | null
    harga: number | null
    stok: number | null
  }

  export type VariasiSumAggregateOutputType = {
    id: number | null
    productId: number | null
    harga: number | null
    stok: number | null
  }

  export type VariasiMinAggregateOutputType = {
    id: number | null
    productId: number | null
    nama: string | null
    harga: number | null
    path: string | null
    stok: number | null
  }

  export type VariasiMaxAggregateOutputType = {
    id: number | null
    productId: number | null
    nama: string | null
    harga: number | null
    path: string | null
    stok: number | null
  }

  export type VariasiCountAggregateOutputType = {
    id: number
    productId: number
    nama: number
    harga: number
    path: number
    stok: number
    _all: number
  }


  export type VariasiAvgAggregateInputType = {
    id?: true
    productId?: true
    harga?: true
    stok?: true
  }

  export type VariasiSumAggregateInputType = {
    id?: true
    productId?: true
    harga?: true
    stok?: true
  }

  export type VariasiMinAggregateInputType = {
    id?: true
    productId?: true
    nama?: true
    harga?: true
    path?: true
    stok?: true
  }

  export type VariasiMaxAggregateInputType = {
    id?: true
    productId?: true
    nama?: true
    harga?: true
    path?: true
    stok?: true
  }

  export type VariasiCountAggregateInputType = {
    id?: true
    productId?: true
    nama?: true
    harga?: true
    path?: true
    stok?: true
    _all?: true
  }

  export type VariasiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Variasi to aggregate.
     */
    where?: VariasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Variasis to fetch.
     */
    orderBy?: VariasiOrderByWithRelationInput | VariasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VariasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Variasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Variasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Variasis
    **/
    _count?: true | VariasiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VariasiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VariasiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VariasiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VariasiMaxAggregateInputType
  }

  export type GetVariasiAggregateType<T extends VariasiAggregateArgs> = {
        [P in keyof T & keyof AggregateVariasi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVariasi[P]>
      : GetScalarType<T[P], AggregateVariasi[P]>
  }




  export type VariasiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VariasiWhereInput
    orderBy?: VariasiOrderByWithAggregationInput | VariasiOrderByWithAggregationInput[]
    by: VariasiScalarFieldEnum[] | VariasiScalarFieldEnum
    having?: VariasiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VariasiCountAggregateInputType | true
    _avg?: VariasiAvgAggregateInputType
    _sum?: VariasiSumAggregateInputType
    _min?: VariasiMinAggregateInputType
    _max?: VariasiMaxAggregateInputType
  }

  export type VariasiGroupByOutputType = {
    id: number
    productId: number
    nama: string
    harga: number
    path: string
    stok: number
    _count: VariasiCountAggregateOutputType | null
    _avg: VariasiAvgAggregateOutputType | null
    _sum: VariasiSumAggregateOutputType | null
    _min: VariasiMinAggregateOutputType | null
    _max: VariasiMaxAggregateOutputType | null
  }

  type GetVariasiGroupByPayload<T extends VariasiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VariasiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VariasiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VariasiGroupByOutputType[P]>
            : GetScalarType<T[P], VariasiGroupByOutputType[P]>
        }
      >
    >


  export type VariasiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    nama?: boolean
    harga?: boolean
    path?: boolean
    stok?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    cart?: boolean | Variasi$cartArgs<ExtArgs>
    _count?: boolean | VariasiCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["variasi"]>

  export type VariasiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    nama?: boolean
    harga?: boolean
    path?: boolean
    stok?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["variasi"]>

  export type VariasiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    nama?: boolean
    harga?: boolean
    path?: boolean
    stok?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["variasi"]>

  export type VariasiSelectScalar = {
    id?: boolean
    productId?: boolean
    nama?: boolean
    harga?: boolean
    path?: boolean
    stok?: boolean
  }

  export type VariasiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "nama" | "harga" | "path" | "stok", ExtArgs["result"]["variasi"]>
  export type VariasiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    cart?: boolean | Variasi$cartArgs<ExtArgs>
    _count?: boolean | VariasiCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VariasiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type VariasiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $VariasiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Variasi"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      cart: Prisma.$CartPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: number
      nama: string
      harga: number
      path: string
      stok: number
    }, ExtArgs["result"]["variasi"]>
    composites: {}
  }

  type VariasiGetPayload<S extends boolean | null | undefined | VariasiDefaultArgs> = $Result.GetResult<Prisma.$VariasiPayload, S>

  type VariasiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VariasiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VariasiCountAggregateInputType | true
    }

  export interface VariasiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Variasi'], meta: { name: 'Variasi' } }
    /**
     * Find zero or one Variasi that matches the filter.
     * @param {VariasiFindUniqueArgs} args - Arguments to find a Variasi
     * @example
     * // Get one Variasi
     * const variasi = await prisma.variasi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VariasiFindUniqueArgs>(args: SelectSubset<T, VariasiFindUniqueArgs<ExtArgs>>): Prisma__VariasiClient<$Result.GetResult<Prisma.$VariasiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Variasi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VariasiFindUniqueOrThrowArgs} args - Arguments to find a Variasi
     * @example
     * // Get one Variasi
     * const variasi = await prisma.variasi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VariasiFindUniqueOrThrowArgs>(args: SelectSubset<T, VariasiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VariasiClient<$Result.GetResult<Prisma.$VariasiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Variasi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariasiFindFirstArgs} args - Arguments to find a Variasi
     * @example
     * // Get one Variasi
     * const variasi = await prisma.variasi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VariasiFindFirstArgs>(args?: SelectSubset<T, VariasiFindFirstArgs<ExtArgs>>): Prisma__VariasiClient<$Result.GetResult<Prisma.$VariasiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Variasi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariasiFindFirstOrThrowArgs} args - Arguments to find a Variasi
     * @example
     * // Get one Variasi
     * const variasi = await prisma.variasi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VariasiFindFirstOrThrowArgs>(args?: SelectSubset<T, VariasiFindFirstOrThrowArgs<ExtArgs>>): Prisma__VariasiClient<$Result.GetResult<Prisma.$VariasiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Variasis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariasiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Variasis
     * const variasis = await prisma.variasi.findMany()
     * 
     * // Get first 10 Variasis
     * const variasis = await prisma.variasi.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const variasiWithIdOnly = await prisma.variasi.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VariasiFindManyArgs>(args?: SelectSubset<T, VariasiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariasiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Variasi.
     * @param {VariasiCreateArgs} args - Arguments to create a Variasi.
     * @example
     * // Create one Variasi
     * const Variasi = await prisma.variasi.create({
     *   data: {
     *     // ... data to create a Variasi
     *   }
     * })
     * 
     */
    create<T extends VariasiCreateArgs>(args: SelectSubset<T, VariasiCreateArgs<ExtArgs>>): Prisma__VariasiClient<$Result.GetResult<Prisma.$VariasiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Variasis.
     * @param {VariasiCreateManyArgs} args - Arguments to create many Variasis.
     * @example
     * // Create many Variasis
     * const variasi = await prisma.variasi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VariasiCreateManyArgs>(args?: SelectSubset<T, VariasiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Variasis and returns the data saved in the database.
     * @param {VariasiCreateManyAndReturnArgs} args - Arguments to create many Variasis.
     * @example
     * // Create many Variasis
     * const variasi = await prisma.variasi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Variasis and only return the `id`
     * const variasiWithIdOnly = await prisma.variasi.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VariasiCreateManyAndReturnArgs>(args?: SelectSubset<T, VariasiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariasiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Variasi.
     * @param {VariasiDeleteArgs} args - Arguments to delete one Variasi.
     * @example
     * // Delete one Variasi
     * const Variasi = await prisma.variasi.delete({
     *   where: {
     *     // ... filter to delete one Variasi
     *   }
     * })
     * 
     */
    delete<T extends VariasiDeleteArgs>(args: SelectSubset<T, VariasiDeleteArgs<ExtArgs>>): Prisma__VariasiClient<$Result.GetResult<Prisma.$VariasiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Variasi.
     * @param {VariasiUpdateArgs} args - Arguments to update one Variasi.
     * @example
     * // Update one Variasi
     * const variasi = await prisma.variasi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VariasiUpdateArgs>(args: SelectSubset<T, VariasiUpdateArgs<ExtArgs>>): Prisma__VariasiClient<$Result.GetResult<Prisma.$VariasiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Variasis.
     * @param {VariasiDeleteManyArgs} args - Arguments to filter Variasis to delete.
     * @example
     * // Delete a few Variasis
     * const { count } = await prisma.variasi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VariasiDeleteManyArgs>(args?: SelectSubset<T, VariasiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Variasis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariasiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Variasis
     * const variasi = await prisma.variasi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VariasiUpdateManyArgs>(args: SelectSubset<T, VariasiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Variasis and returns the data updated in the database.
     * @param {VariasiUpdateManyAndReturnArgs} args - Arguments to update many Variasis.
     * @example
     * // Update many Variasis
     * const variasi = await prisma.variasi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Variasis and only return the `id`
     * const variasiWithIdOnly = await prisma.variasi.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VariasiUpdateManyAndReturnArgs>(args: SelectSubset<T, VariasiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariasiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Variasi.
     * @param {VariasiUpsertArgs} args - Arguments to update or create a Variasi.
     * @example
     * // Update or create a Variasi
     * const variasi = await prisma.variasi.upsert({
     *   create: {
     *     // ... data to create a Variasi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Variasi we want to update
     *   }
     * })
     */
    upsert<T extends VariasiUpsertArgs>(args: SelectSubset<T, VariasiUpsertArgs<ExtArgs>>): Prisma__VariasiClient<$Result.GetResult<Prisma.$VariasiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Variasis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariasiCountArgs} args - Arguments to filter Variasis to count.
     * @example
     * // Count the number of Variasis
     * const count = await prisma.variasi.count({
     *   where: {
     *     // ... the filter for the Variasis we want to count
     *   }
     * })
    **/
    count<T extends VariasiCountArgs>(
      args?: Subset<T, VariasiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VariasiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Variasi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariasiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VariasiAggregateArgs>(args: Subset<T, VariasiAggregateArgs>): Prisma.PrismaPromise<GetVariasiAggregateType<T>>

    /**
     * Group by Variasi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariasiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VariasiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VariasiGroupByArgs['orderBy'] }
        : { orderBy?: VariasiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VariasiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVariasiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Variasi model
   */
  readonly fields: VariasiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Variasi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VariasiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cart<T extends Variasi$cartArgs<ExtArgs> = {}>(args?: Subset<T, Variasi$cartArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Variasi model
   */
  interface VariasiFieldRefs {
    readonly id: FieldRef<"Variasi", 'Int'>
    readonly productId: FieldRef<"Variasi", 'Int'>
    readonly nama: FieldRef<"Variasi", 'String'>
    readonly harga: FieldRef<"Variasi", 'Int'>
    readonly path: FieldRef<"Variasi", 'String'>
    readonly stok: FieldRef<"Variasi", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Variasi findUnique
   */
  export type VariasiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variasi
     */
    select?: VariasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variasi
     */
    omit?: VariasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariasiInclude<ExtArgs> | null
    /**
     * Filter, which Variasi to fetch.
     */
    where: VariasiWhereUniqueInput
  }

  /**
   * Variasi findUniqueOrThrow
   */
  export type VariasiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variasi
     */
    select?: VariasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variasi
     */
    omit?: VariasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariasiInclude<ExtArgs> | null
    /**
     * Filter, which Variasi to fetch.
     */
    where: VariasiWhereUniqueInput
  }

  /**
   * Variasi findFirst
   */
  export type VariasiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variasi
     */
    select?: VariasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variasi
     */
    omit?: VariasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariasiInclude<ExtArgs> | null
    /**
     * Filter, which Variasi to fetch.
     */
    where?: VariasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Variasis to fetch.
     */
    orderBy?: VariasiOrderByWithRelationInput | VariasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Variasis.
     */
    cursor?: VariasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Variasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Variasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Variasis.
     */
    distinct?: VariasiScalarFieldEnum | VariasiScalarFieldEnum[]
  }

  /**
   * Variasi findFirstOrThrow
   */
  export type VariasiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variasi
     */
    select?: VariasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variasi
     */
    omit?: VariasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariasiInclude<ExtArgs> | null
    /**
     * Filter, which Variasi to fetch.
     */
    where?: VariasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Variasis to fetch.
     */
    orderBy?: VariasiOrderByWithRelationInput | VariasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Variasis.
     */
    cursor?: VariasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Variasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Variasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Variasis.
     */
    distinct?: VariasiScalarFieldEnum | VariasiScalarFieldEnum[]
  }

  /**
   * Variasi findMany
   */
  export type VariasiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variasi
     */
    select?: VariasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variasi
     */
    omit?: VariasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariasiInclude<ExtArgs> | null
    /**
     * Filter, which Variasis to fetch.
     */
    where?: VariasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Variasis to fetch.
     */
    orderBy?: VariasiOrderByWithRelationInput | VariasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Variasis.
     */
    cursor?: VariasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Variasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Variasis.
     */
    skip?: number
    distinct?: VariasiScalarFieldEnum | VariasiScalarFieldEnum[]
  }

  /**
   * Variasi create
   */
  export type VariasiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variasi
     */
    select?: VariasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variasi
     */
    omit?: VariasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariasiInclude<ExtArgs> | null
    /**
     * The data needed to create a Variasi.
     */
    data: XOR<VariasiCreateInput, VariasiUncheckedCreateInput>
  }

  /**
   * Variasi createMany
   */
  export type VariasiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Variasis.
     */
    data: VariasiCreateManyInput | VariasiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Variasi createManyAndReturn
   */
  export type VariasiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variasi
     */
    select?: VariasiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Variasi
     */
    omit?: VariasiOmit<ExtArgs> | null
    /**
     * The data used to create many Variasis.
     */
    data: VariasiCreateManyInput | VariasiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariasiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Variasi update
   */
  export type VariasiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variasi
     */
    select?: VariasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variasi
     */
    omit?: VariasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariasiInclude<ExtArgs> | null
    /**
     * The data needed to update a Variasi.
     */
    data: XOR<VariasiUpdateInput, VariasiUncheckedUpdateInput>
    /**
     * Choose, which Variasi to update.
     */
    where: VariasiWhereUniqueInput
  }

  /**
   * Variasi updateMany
   */
  export type VariasiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Variasis.
     */
    data: XOR<VariasiUpdateManyMutationInput, VariasiUncheckedUpdateManyInput>
    /**
     * Filter which Variasis to update
     */
    where?: VariasiWhereInput
    /**
     * Limit how many Variasis to update.
     */
    limit?: number
  }

  /**
   * Variasi updateManyAndReturn
   */
  export type VariasiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variasi
     */
    select?: VariasiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Variasi
     */
    omit?: VariasiOmit<ExtArgs> | null
    /**
     * The data used to update Variasis.
     */
    data: XOR<VariasiUpdateManyMutationInput, VariasiUncheckedUpdateManyInput>
    /**
     * Filter which Variasis to update
     */
    where?: VariasiWhereInput
    /**
     * Limit how many Variasis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariasiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Variasi upsert
   */
  export type VariasiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variasi
     */
    select?: VariasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variasi
     */
    omit?: VariasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariasiInclude<ExtArgs> | null
    /**
     * The filter to search for the Variasi to update in case it exists.
     */
    where: VariasiWhereUniqueInput
    /**
     * In case the Variasi found by the `where` argument doesn't exist, create a new Variasi with this data.
     */
    create: XOR<VariasiCreateInput, VariasiUncheckedCreateInput>
    /**
     * In case the Variasi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VariasiUpdateInput, VariasiUncheckedUpdateInput>
  }

  /**
   * Variasi delete
   */
  export type VariasiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variasi
     */
    select?: VariasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variasi
     */
    omit?: VariasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariasiInclude<ExtArgs> | null
    /**
     * Filter which Variasi to delete.
     */
    where: VariasiWhereUniqueInput
  }

  /**
   * Variasi deleteMany
   */
  export type VariasiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Variasis to delete
     */
    where?: VariasiWhereInput
    /**
     * Limit how many Variasis to delete.
     */
    limit?: number
  }

  /**
   * Variasi.cart
   */
  export type Variasi$cartArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartInclude<ExtArgs> | null
    where?: CartWhereInput
    orderBy?: CartOrderByWithRelationInput | CartOrderByWithRelationInput[]
    cursor?: CartWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CartScalarFieldEnum | CartScalarFieldEnum[]
  }

  /**
   * Variasi without action
   */
  export type VariasiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variasi
     */
    select?: VariasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variasi
     */
    omit?: VariasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariasiInclude<ExtArgs> | null
  }


  /**
   * Model Transaksi
   */

  export type AggregateTransaksi = {
    _count: TransaksiCountAggregateOutputType | null
    _avg: TransaksiAvgAggregateOutputType | null
    _sum: TransaksiSumAggregateOutputType | null
    _min: TransaksiMinAggregateOutputType | null
    _max: TransaksiMaxAggregateOutputType | null
  }

  export type TransaksiAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    productId: number | null
    status: number | null
  }

  export type TransaksiSumAggregateOutputType = {
    id: number | null
    userId: number | null
    productId: number | null
    status: number | null
  }

  export type TransaksiMinAggregateOutputType = {
    id: number | null
    userId: number | null
    productId: number | null
    status: number | null
  }

  export type TransaksiMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    productId: number | null
    status: number | null
  }

  export type TransaksiCountAggregateOutputType = {
    id: number
    userId: number
    productId: number
    status: number
    _all: number
  }


  export type TransaksiAvgAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    status?: true
  }

  export type TransaksiSumAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    status?: true
  }

  export type TransaksiMinAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    status?: true
  }

  export type TransaksiMaxAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    status?: true
  }

  export type TransaksiCountAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    status?: true
    _all?: true
  }

  export type TransaksiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transaksi to aggregate.
     */
    where?: TransaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaksis to fetch.
     */
    orderBy?: TransaksiOrderByWithRelationInput | TransaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaksis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Transaksis
    **/
    _count?: true | TransaksiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransaksiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransaksiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransaksiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransaksiMaxAggregateInputType
  }

  export type GetTransaksiAggregateType<T extends TransaksiAggregateArgs> = {
        [P in keyof T & keyof AggregateTransaksi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransaksi[P]>
      : GetScalarType<T[P], AggregateTransaksi[P]>
  }




  export type TransaksiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaksiWhereInput
    orderBy?: TransaksiOrderByWithAggregationInput | TransaksiOrderByWithAggregationInput[]
    by: TransaksiScalarFieldEnum[] | TransaksiScalarFieldEnum
    having?: TransaksiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransaksiCountAggregateInputType | true
    _avg?: TransaksiAvgAggregateInputType
    _sum?: TransaksiSumAggregateInputType
    _min?: TransaksiMinAggregateInputType
    _max?: TransaksiMaxAggregateInputType
  }

  export type TransaksiGroupByOutputType = {
    id: number
    userId: number
    productId: number
    status: number
    _count: TransaksiCountAggregateOutputType | null
    _avg: TransaksiAvgAggregateOutputType | null
    _sum: TransaksiSumAggregateOutputType | null
    _min: TransaksiMinAggregateOutputType | null
    _max: TransaksiMaxAggregateOutputType | null
  }

  type GetTransaksiGroupByPayload<T extends TransaksiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransaksiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransaksiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransaksiGroupByOutputType[P]>
            : GetScalarType<T[P], TransaksiGroupByOutputType[P]>
        }
      >
    >


  export type TransaksiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    status?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaksi"]>

  export type TransaksiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    status?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaksi"]>

  export type TransaksiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    status?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaksi"]>

  export type TransaksiSelectScalar = {
    id?: boolean
    userId?: boolean
    productId?: boolean
    status?: boolean
  }

  export type TransaksiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "productId" | "status", ExtArgs["result"]["transaksi"]>
  export type TransaksiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type TransaksiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type TransaksiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $TransaksiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Transaksi"
    objects: {
      user: Prisma.$UsersPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      productId: number
      status: number
    }, ExtArgs["result"]["transaksi"]>
    composites: {}
  }

  type TransaksiGetPayload<S extends boolean | null | undefined | TransaksiDefaultArgs> = $Result.GetResult<Prisma.$TransaksiPayload, S>

  type TransaksiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransaksiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransaksiCountAggregateInputType | true
    }

  export interface TransaksiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Transaksi'], meta: { name: 'Transaksi' } }
    /**
     * Find zero or one Transaksi that matches the filter.
     * @param {TransaksiFindUniqueArgs} args - Arguments to find a Transaksi
     * @example
     * // Get one Transaksi
     * const transaksi = await prisma.transaksi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransaksiFindUniqueArgs>(args: SelectSubset<T, TransaksiFindUniqueArgs<ExtArgs>>): Prisma__TransaksiClient<$Result.GetResult<Prisma.$TransaksiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transaksi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransaksiFindUniqueOrThrowArgs} args - Arguments to find a Transaksi
     * @example
     * // Get one Transaksi
     * const transaksi = await prisma.transaksi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransaksiFindUniqueOrThrowArgs>(args: SelectSubset<T, TransaksiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransaksiClient<$Result.GetResult<Prisma.$TransaksiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaksi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaksiFindFirstArgs} args - Arguments to find a Transaksi
     * @example
     * // Get one Transaksi
     * const transaksi = await prisma.transaksi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransaksiFindFirstArgs>(args?: SelectSubset<T, TransaksiFindFirstArgs<ExtArgs>>): Prisma__TransaksiClient<$Result.GetResult<Prisma.$TransaksiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaksi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaksiFindFirstOrThrowArgs} args - Arguments to find a Transaksi
     * @example
     * // Get one Transaksi
     * const transaksi = await prisma.transaksi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransaksiFindFirstOrThrowArgs>(args?: SelectSubset<T, TransaksiFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransaksiClient<$Result.GetResult<Prisma.$TransaksiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transaksis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaksiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transaksis
     * const transaksis = await prisma.transaksi.findMany()
     * 
     * // Get first 10 Transaksis
     * const transaksis = await prisma.transaksi.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transaksiWithIdOnly = await prisma.transaksi.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransaksiFindManyArgs>(args?: SelectSubset<T, TransaksiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaksiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transaksi.
     * @param {TransaksiCreateArgs} args - Arguments to create a Transaksi.
     * @example
     * // Create one Transaksi
     * const Transaksi = await prisma.transaksi.create({
     *   data: {
     *     // ... data to create a Transaksi
     *   }
     * })
     * 
     */
    create<T extends TransaksiCreateArgs>(args: SelectSubset<T, TransaksiCreateArgs<ExtArgs>>): Prisma__TransaksiClient<$Result.GetResult<Prisma.$TransaksiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transaksis.
     * @param {TransaksiCreateManyArgs} args - Arguments to create many Transaksis.
     * @example
     * // Create many Transaksis
     * const transaksi = await prisma.transaksi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransaksiCreateManyArgs>(args?: SelectSubset<T, TransaksiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transaksis and returns the data saved in the database.
     * @param {TransaksiCreateManyAndReturnArgs} args - Arguments to create many Transaksis.
     * @example
     * // Create many Transaksis
     * const transaksi = await prisma.transaksi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transaksis and only return the `id`
     * const transaksiWithIdOnly = await prisma.transaksi.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransaksiCreateManyAndReturnArgs>(args?: SelectSubset<T, TransaksiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaksiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transaksi.
     * @param {TransaksiDeleteArgs} args - Arguments to delete one Transaksi.
     * @example
     * // Delete one Transaksi
     * const Transaksi = await prisma.transaksi.delete({
     *   where: {
     *     // ... filter to delete one Transaksi
     *   }
     * })
     * 
     */
    delete<T extends TransaksiDeleteArgs>(args: SelectSubset<T, TransaksiDeleteArgs<ExtArgs>>): Prisma__TransaksiClient<$Result.GetResult<Prisma.$TransaksiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transaksi.
     * @param {TransaksiUpdateArgs} args - Arguments to update one Transaksi.
     * @example
     * // Update one Transaksi
     * const transaksi = await prisma.transaksi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransaksiUpdateArgs>(args: SelectSubset<T, TransaksiUpdateArgs<ExtArgs>>): Prisma__TransaksiClient<$Result.GetResult<Prisma.$TransaksiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transaksis.
     * @param {TransaksiDeleteManyArgs} args - Arguments to filter Transaksis to delete.
     * @example
     * // Delete a few Transaksis
     * const { count } = await prisma.transaksi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransaksiDeleteManyArgs>(args?: SelectSubset<T, TransaksiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaksis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaksiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transaksis
     * const transaksi = await prisma.transaksi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransaksiUpdateManyArgs>(args: SelectSubset<T, TransaksiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaksis and returns the data updated in the database.
     * @param {TransaksiUpdateManyAndReturnArgs} args - Arguments to update many Transaksis.
     * @example
     * // Update many Transaksis
     * const transaksi = await prisma.transaksi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transaksis and only return the `id`
     * const transaksiWithIdOnly = await prisma.transaksi.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TransaksiUpdateManyAndReturnArgs>(args: SelectSubset<T, TransaksiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaksiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transaksi.
     * @param {TransaksiUpsertArgs} args - Arguments to update or create a Transaksi.
     * @example
     * // Update or create a Transaksi
     * const transaksi = await prisma.transaksi.upsert({
     *   create: {
     *     // ... data to create a Transaksi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transaksi we want to update
     *   }
     * })
     */
    upsert<T extends TransaksiUpsertArgs>(args: SelectSubset<T, TransaksiUpsertArgs<ExtArgs>>): Prisma__TransaksiClient<$Result.GetResult<Prisma.$TransaksiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transaksis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaksiCountArgs} args - Arguments to filter Transaksis to count.
     * @example
     * // Count the number of Transaksis
     * const count = await prisma.transaksi.count({
     *   where: {
     *     // ... the filter for the Transaksis we want to count
     *   }
     * })
    **/
    count<T extends TransaksiCountArgs>(
      args?: Subset<T, TransaksiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransaksiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transaksi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaksiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransaksiAggregateArgs>(args: Subset<T, TransaksiAggregateArgs>): Prisma.PrismaPromise<GetTransaksiAggregateType<T>>

    /**
     * Group by Transaksi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaksiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransaksiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransaksiGroupByArgs['orderBy'] }
        : { orderBy?: TransaksiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransaksiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransaksiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Transaksi model
   */
  readonly fields: TransaksiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Transaksi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransaksiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Transaksi model
   */
  interface TransaksiFieldRefs {
    readonly id: FieldRef<"Transaksi", 'Int'>
    readonly userId: FieldRef<"Transaksi", 'Int'>
    readonly productId: FieldRef<"Transaksi", 'Int'>
    readonly status: FieldRef<"Transaksi", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Transaksi findUnique
   */
  export type TransaksiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiInclude<ExtArgs> | null
    /**
     * Filter, which Transaksi to fetch.
     */
    where: TransaksiWhereUniqueInput
  }

  /**
   * Transaksi findUniqueOrThrow
   */
  export type TransaksiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiInclude<ExtArgs> | null
    /**
     * Filter, which Transaksi to fetch.
     */
    where: TransaksiWhereUniqueInput
  }

  /**
   * Transaksi findFirst
   */
  export type TransaksiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiInclude<ExtArgs> | null
    /**
     * Filter, which Transaksi to fetch.
     */
    where?: TransaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaksis to fetch.
     */
    orderBy?: TransaksiOrderByWithRelationInput | TransaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transaksis.
     */
    cursor?: TransaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaksis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transaksis.
     */
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * Transaksi findFirstOrThrow
   */
  export type TransaksiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiInclude<ExtArgs> | null
    /**
     * Filter, which Transaksi to fetch.
     */
    where?: TransaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaksis to fetch.
     */
    orderBy?: TransaksiOrderByWithRelationInput | TransaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transaksis.
     */
    cursor?: TransaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaksis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transaksis.
     */
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * Transaksi findMany
   */
  export type TransaksiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiInclude<ExtArgs> | null
    /**
     * Filter, which Transaksis to fetch.
     */
    where?: TransaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaksis to fetch.
     */
    orderBy?: TransaksiOrderByWithRelationInput | TransaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Transaksis.
     */
    cursor?: TransaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaksis.
     */
    skip?: number
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * Transaksi create
   */
  export type TransaksiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiInclude<ExtArgs> | null
    /**
     * The data needed to create a Transaksi.
     */
    data: XOR<TransaksiCreateInput, TransaksiUncheckedCreateInput>
  }

  /**
   * Transaksi createMany
   */
  export type TransaksiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Transaksis.
     */
    data: TransaksiCreateManyInput | TransaksiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Transaksi createManyAndReturn
   */
  export type TransaksiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * The data used to create many Transaksis.
     */
    data: TransaksiCreateManyInput | TransaksiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transaksi update
   */
  export type TransaksiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiInclude<ExtArgs> | null
    /**
     * The data needed to update a Transaksi.
     */
    data: XOR<TransaksiUpdateInput, TransaksiUncheckedUpdateInput>
    /**
     * Choose, which Transaksi to update.
     */
    where: TransaksiWhereUniqueInput
  }

  /**
   * Transaksi updateMany
   */
  export type TransaksiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Transaksis.
     */
    data: XOR<TransaksiUpdateManyMutationInput, TransaksiUncheckedUpdateManyInput>
    /**
     * Filter which Transaksis to update
     */
    where?: TransaksiWhereInput
    /**
     * Limit how many Transaksis to update.
     */
    limit?: number
  }

  /**
   * Transaksi updateManyAndReturn
   */
  export type TransaksiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * The data used to update Transaksis.
     */
    data: XOR<TransaksiUpdateManyMutationInput, TransaksiUncheckedUpdateManyInput>
    /**
     * Filter which Transaksis to update
     */
    where?: TransaksiWhereInput
    /**
     * Limit how many Transaksis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transaksi upsert
   */
  export type TransaksiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiInclude<ExtArgs> | null
    /**
     * The filter to search for the Transaksi to update in case it exists.
     */
    where: TransaksiWhereUniqueInput
    /**
     * In case the Transaksi found by the `where` argument doesn't exist, create a new Transaksi with this data.
     */
    create: XOR<TransaksiCreateInput, TransaksiUncheckedCreateInput>
    /**
     * In case the Transaksi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransaksiUpdateInput, TransaksiUncheckedUpdateInput>
  }

  /**
   * Transaksi delete
   */
  export type TransaksiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiInclude<ExtArgs> | null
    /**
     * Filter which Transaksi to delete.
     */
    where: TransaksiWhereUniqueInput
  }

  /**
   * Transaksi deleteMany
   */
  export type TransaksiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transaksis to delete
     */
    where?: TransaksiWhereInput
    /**
     * Limit how many Transaksis to delete.
     */
    limit?: number
  }

  /**
   * Transaksi without action
   */
  export type TransaksiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaksi
     */
    select?: TransaksiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaksi
     */
    omit?: TransaksiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaksiInclude<ExtArgs> | null
  }


  /**
   * Model Review
   */

  export type AggregateReview = {
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  export type ReviewAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    productId: number | null
    rating: number | null
  }

  export type ReviewSumAggregateOutputType = {
    id: number | null
    userId: number | null
    productId: number | null
    rating: number | null
  }

  export type ReviewMinAggregateOutputType = {
    id: number | null
    userId: number | null
    productId: number | null
    review: string | null
    rating: number | null
    time: Date | null
  }

  export type ReviewMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    productId: number | null
    review: string | null
    rating: number | null
    time: Date | null
  }

  export type ReviewCountAggregateOutputType = {
    id: number
    userId: number
    productId: number
    review: number
    rating: number
    time: number
    _all: number
  }


  export type ReviewAvgAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    rating?: true
  }

  export type ReviewSumAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    rating?: true
  }

  export type ReviewMinAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    review?: true
    rating?: true
    time?: true
  }

  export type ReviewMaxAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    review?: true
    rating?: true
    time?: true
  }

  export type ReviewCountAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    review?: true
    rating?: true
    time?: true
    _all?: true
  }

  export type ReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Review to aggregate.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reviews
    **/
    _count?: true | ReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewMaxAggregateInputType
  }

  export type GetReviewAggregateType<T extends ReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReview[P]>
      : GetScalarType<T[P], AggregateReview[P]>
  }




  export type ReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithAggregationInput | ReviewOrderByWithAggregationInput[]
    by: ReviewScalarFieldEnum[] | ReviewScalarFieldEnum
    having?: ReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewCountAggregateInputType | true
    _avg?: ReviewAvgAggregateInputType
    _sum?: ReviewSumAggregateInputType
    _min?: ReviewMinAggregateInputType
    _max?: ReviewMaxAggregateInputType
  }

  export type ReviewGroupByOutputType = {
    id: number
    userId: number
    productId: number
    review: string
    rating: number
    time: Date | null
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  type GetReviewGroupByPayload<T extends ReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewGroupByOutputType[P]>
        }
      >
    >


  export type ReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    review?: boolean
    rating?: boolean
    time?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    review?: boolean
    rating?: boolean
    time?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    review?: boolean
    rating?: boolean
    time?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectScalar = {
    id?: boolean
    userId?: boolean
    productId?: boolean
    review?: boolean
    rating?: boolean
    time?: boolean
  }

  export type ReviewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "productId" | "review" | "rating" | "time", ExtArgs["result"]["review"]>
  export type ReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ReviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ReviewIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Review"
    objects: {
      user: Prisma.$UsersPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      productId: number
      review: string
      rating: number
      time: Date | null
    }, ExtArgs["result"]["review"]>
    composites: {}
  }

  type ReviewGetPayload<S extends boolean | null | undefined | ReviewDefaultArgs> = $Result.GetResult<Prisma.$ReviewPayload, S>

  type ReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReviewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReviewCountAggregateInputType | true
    }

  export interface ReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Review'], meta: { name: 'Review' } }
    /**
     * Find zero or one Review that matches the filter.
     * @param {ReviewFindUniqueArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReviewFindUniqueArgs>(args: SelectSubset<T, ReviewFindUniqueArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Review that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReviewFindUniqueOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, ReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Review that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReviewFindFirstArgs>(args?: SelectSubset<T, ReviewFindFirstArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Review that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, ReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.review.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.review.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reviewWithIdOnly = await prisma.review.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReviewFindManyArgs>(args?: SelectSubset<T, ReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Review.
     * @param {ReviewCreateArgs} args - Arguments to create a Review.
     * @example
     * // Create one Review
     * const Review = await prisma.review.create({
     *   data: {
     *     // ... data to create a Review
     *   }
     * })
     * 
     */
    create<T extends ReviewCreateArgs>(args: SelectSubset<T, ReviewCreateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reviews.
     * @param {ReviewCreateManyArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReviewCreateManyArgs>(args?: SelectSubset<T, ReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reviews and returns the data saved in the database.
     * @param {ReviewCreateManyAndReturnArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reviews and only return the `id`
     * const reviewWithIdOnly = await prisma.review.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReviewCreateManyAndReturnArgs>(args?: SelectSubset<T, ReviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Review.
     * @param {ReviewDeleteArgs} args - Arguments to delete one Review.
     * @example
     * // Delete one Review
     * const Review = await prisma.review.delete({
     *   where: {
     *     // ... filter to delete one Review
     *   }
     * })
     * 
     */
    delete<T extends ReviewDeleteArgs>(args: SelectSubset<T, ReviewDeleteArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Review.
     * @param {ReviewUpdateArgs} args - Arguments to update one Review.
     * @example
     * // Update one Review
     * const review = await prisma.review.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReviewUpdateArgs>(args: SelectSubset<T, ReviewUpdateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reviews.
     * @param {ReviewDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.review.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReviewDeleteManyArgs>(args?: SelectSubset<T, ReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReviewUpdateManyArgs>(args: SelectSubset<T, ReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews and returns the data updated in the database.
     * @param {ReviewUpdateManyAndReturnArgs} args - Arguments to update many Reviews.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reviews and only return the `id`
     * const reviewWithIdOnly = await prisma.review.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReviewUpdateManyAndReturnArgs>(args: SelectSubset<T, ReviewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Review.
     * @param {ReviewUpsertArgs} args - Arguments to update or create a Review.
     * @example
     * // Update or create a Review
     * const review = await prisma.review.upsert({
     *   create: {
     *     // ... data to create a Review
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Review we want to update
     *   }
     * })
     */
    upsert<T extends ReviewUpsertArgs>(args: SelectSubset<T, ReviewUpsertArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.review.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends ReviewCountArgs>(
      args?: Subset<T, ReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewAggregateArgs>(args: Subset<T, ReviewAggregateArgs>): Prisma.PrismaPromise<GetReviewAggregateType<T>>

    /**
     * Group by Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReviewGroupByArgs['orderBy'] }
        : { orderBy?: ReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Review model
   */
  readonly fields: ReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Review.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Review model
   */
  interface ReviewFieldRefs {
    readonly id: FieldRef<"Review", 'Int'>
    readonly userId: FieldRef<"Review", 'Int'>
    readonly productId: FieldRef<"Review", 'Int'>
    readonly review: FieldRef<"Review", 'String'>
    readonly rating: FieldRef<"Review", 'Float'>
    readonly time: FieldRef<"Review", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Review findUnique
   */
  export type ReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findUniqueOrThrow
   */
  export type ReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findFirst
   */
  export type ReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findFirstOrThrow
   */
  export type ReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findMany
   */
  export type ReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Reviews to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review create
   */
  export type ReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a Review.
     */
    data: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
  }

  /**
   * Review createMany
   */
  export type ReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Review createManyAndReturn
   */
  export type ReviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Review update
   */
  export type ReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a Review.
     */
    data: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
    /**
     * Choose, which Review to update.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review updateMany
   */
  export type ReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to update.
     */
    limit?: number
  }

  /**
   * Review updateManyAndReturn
   */
  export type ReviewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Review upsert
   */
  export type ReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the Review to update in case it exists.
     */
    where: ReviewWhereUniqueInput
    /**
     * In case the Review found by the `where` argument doesn't exist, create a new Review with this data.
     */
    create: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
    /**
     * In case the Review was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
  }

  /**
   * Review delete
   */
  export type ReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter which Review to delete.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review deleteMany
   */
  export type ReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reviews to delete
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to delete.
     */
    limit?: number
  }

  /**
   * Review without action
   */
  export type ReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
  }


  /**
   * Model Cart
   */

  export type AggregateCart = {
    _count: CartCountAggregateOutputType | null
    _avg: CartAvgAggregateOutputType | null
    _sum: CartSumAggregateOutputType | null
    _min: CartMinAggregateOutputType | null
    _max: CartMaxAggregateOutputType | null
  }

  export type CartAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    productId: number | null
    variasiId: number | null
    quantity: number | null
  }

  export type CartSumAggregateOutputType = {
    id: number | null
    userId: number | null
    productId: number | null
    variasiId: number | null
    quantity: number | null
  }

  export type CartMinAggregateOutputType = {
    id: number | null
    userId: number | null
    productId: number | null
    variasiId: number | null
    quantity: number | null
    time: Date | null
  }

  export type CartMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    productId: number | null
    variasiId: number | null
    quantity: number | null
    time: Date | null
  }

  export type CartCountAggregateOutputType = {
    id: number
    userId: number
    productId: number
    variasiId: number
    quantity: number
    time: number
    _all: number
  }


  export type CartAvgAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    variasiId?: true
    quantity?: true
  }

  export type CartSumAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    variasiId?: true
    quantity?: true
  }

  export type CartMinAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    variasiId?: true
    quantity?: true
    time?: true
  }

  export type CartMaxAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    variasiId?: true
    quantity?: true
    time?: true
  }

  export type CartCountAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    variasiId?: true
    quantity?: true
    time?: true
    _all?: true
  }

  export type CartAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cart to aggregate.
     */
    where?: CartWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carts to fetch.
     */
    orderBy?: CartOrderByWithRelationInput | CartOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CartWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Carts
    **/
    _count?: true | CartCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CartAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CartSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CartMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CartMaxAggregateInputType
  }

  export type GetCartAggregateType<T extends CartAggregateArgs> = {
        [P in keyof T & keyof AggregateCart]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCart[P]>
      : GetScalarType<T[P], AggregateCart[P]>
  }




  export type CartGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CartWhereInput
    orderBy?: CartOrderByWithAggregationInput | CartOrderByWithAggregationInput[]
    by: CartScalarFieldEnum[] | CartScalarFieldEnum
    having?: CartScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CartCountAggregateInputType | true
    _avg?: CartAvgAggregateInputType
    _sum?: CartSumAggregateInputType
    _min?: CartMinAggregateInputType
    _max?: CartMaxAggregateInputType
  }

  export type CartGroupByOutputType = {
    id: number
    userId: number
    productId: number
    variasiId: number
    quantity: number
    time: Date
    _count: CartCountAggregateOutputType | null
    _avg: CartAvgAggregateOutputType | null
    _sum: CartSumAggregateOutputType | null
    _min: CartMinAggregateOutputType | null
    _max: CartMaxAggregateOutputType | null
  }

  type GetCartGroupByPayload<T extends CartGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CartGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CartGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CartGroupByOutputType[P]>
            : GetScalarType<T[P], CartGroupByOutputType[P]>
        }
      >
    >


  export type CartSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    variasiId?: boolean
    quantity?: boolean
    time?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variasi?: boolean | VariasiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cart"]>

  export type CartSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    variasiId?: boolean
    quantity?: boolean
    time?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variasi?: boolean | VariasiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cart"]>

  export type CartSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    variasiId?: boolean
    quantity?: boolean
    time?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variasi?: boolean | VariasiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cart"]>

  export type CartSelectScalar = {
    id?: boolean
    userId?: boolean
    productId?: boolean
    variasiId?: boolean
    quantity?: boolean
    time?: boolean
  }

  export type CartOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "productId" | "variasiId" | "quantity" | "time", ExtArgs["result"]["cart"]>
  export type CartInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variasi?: boolean | VariasiDefaultArgs<ExtArgs>
  }
  export type CartIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variasi?: boolean | VariasiDefaultArgs<ExtArgs>
  }
  export type CartIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variasi?: boolean | VariasiDefaultArgs<ExtArgs>
  }

  export type $CartPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cart"
    objects: {
      user: Prisma.$UsersPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
      variasi: Prisma.$VariasiPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      productId: number
      variasiId: number
      quantity: number
      time: Date
    }, ExtArgs["result"]["cart"]>
    composites: {}
  }

  type CartGetPayload<S extends boolean | null | undefined | CartDefaultArgs> = $Result.GetResult<Prisma.$CartPayload, S>

  type CartCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CartFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CartCountAggregateInputType | true
    }

  export interface CartDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cart'], meta: { name: 'Cart' } }
    /**
     * Find zero or one Cart that matches the filter.
     * @param {CartFindUniqueArgs} args - Arguments to find a Cart
     * @example
     * // Get one Cart
     * const cart = await prisma.cart.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CartFindUniqueArgs>(args: SelectSubset<T, CartFindUniqueArgs<ExtArgs>>): Prisma__CartClient<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cart that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CartFindUniqueOrThrowArgs} args - Arguments to find a Cart
     * @example
     * // Get one Cart
     * const cart = await prisma.cart.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CartFindUniqueOrThrowArgs>(args: SelectSubset<T, CartFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CartClient<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cart that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartFindFirstArgs} args - Arguments to find a Cart
     * @example
     * // Get one Cart
     * const cart = await prisma.cart.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CartFindFirstArgs>(args?: SelectSubset<T, CartFindFirstArgs<ExtArgs>>): Prisma__CartClient<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cart that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartFindFirstOrThrowArgs} args - Arguments to find a Cart
     * @example
     * // Get one Cart
     * const cart = await prisma.cart.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CartFindFirstOrThrowArgs>(args?: SelectSubset<T, CartFindFirstOrThrowArgs<ExtArgs>>): Prisma__CartClient<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Carts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Carts
     * const carts = await prisma.cart.findMany()
     * 
     * // Get first 10 Carts
     * const carts = await prisma.cart.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cartWithIdOnly = await prisma.cart.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CartFindManyArgs>(args?: SelectSubset<T, CartFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cart.
     * @param {CartCreateArgs} args - Arguments to create a Cart.
     * @example
     * // Create one Cart
     * const Cart = await prisma.cart.create({
     *   data: {
     *     // ... data to create a Cart
     *   }
     * })
     * 
     */
    create<T extends CartCreateArgs>(args: SelectSubset<T, CartCreateArgs<ExtArgs>>): Prisma__CartClient<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Carts.
     * @param {CartCreateManyArgs} args - Arguments to create many Carts.
     * @example
     * // Create many Carts
     * const cart = await prisma.cart.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CartCreateManyArgs>(args?: SelectSubset<T, CartCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Carts and returns the data saved in the database.
     * @param {CartCreateManyAndReturnArgs} args - Arguments to create many Carts.
     * @example
     * // Create many Carts
     * const cart = await prisma.cart.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Carts and only return the `id`
     * const cartWithIdOnly = await prisma.cart.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CartCreateManyAndReturnArgs>(args?: SelectSubset<T, CartCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cart.
     * @param {CartDeleteArgs} args - Arguments to delete one Cart.
     * @example
     * // Delete one Cart
     * const Cart = await prisma.cart.delete({
     *   where: {
     *     // ... filter to delete one Cart
     *   }
     * })
     * 
     */
    delete<T extends CartDeleteArgs>(args: SelectSubset<T, CartDeleteArgs<ExtArgs>>): Prisma__CartClient<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cart.
     * @param {CartUpdateArgs} args - Arguments to update one Cart.
     * @example
     * // Update one Cart
     * const cart = await prisma.cart.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CartUpdateArgs>(args: SelectSubset<T, CartUpdateArgs<ExtArgs>>): Prisma__CartClient<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Carts.
     * @param {CartDeleteManyArgs} args - Arguments to filter Carts to delete.
     * @example
     * // Delete a few Carts
     * const { count } = await prisma.cart.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CartDeleteManyArgs>(args?: SelectSubset<T, CartDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Carts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Carts
     * const cart = await prisma.cart.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CartUpdateManyArgs>(args: SelectSubset<T, CartUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Carts and returns the data updated in the database.
     * @param {CartUpdateManyAndReturnArgs} args - Arguments to update many Carts.
     * @example
     * // Update many Carts
     * const cart = await prisma.cart.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Carts and only return the `id`
     * const cartWithIdOnly = await prisma.cart.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CartUpdateManyAndReturnArgs>(args: SelectSubset<T, CartUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cart.
     * @param {CartUpsertArgs} args - Arguments to update or create a Cart.
     * @example
     * // Update or create a Cart
     * const cart = await prisma.cart.upsert({
     *   create: {
     *     // ... data to create a Cart
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cart we want to update
     *   }
     * })
     */
    upsert<T extends CartUpsertArgs>(args: SelectSubset<T, CartUpsertArgs<ExtArgs>>): Prisma__CartClient<$Result.GetResult<Prisma.$CartPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Carts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartCountArgs} args - Arguments to filter Carts to count.
     * @example
     * // Count the number of Carts
     * const count = await prisma.cart.count({
     *   where: {
     *     // ... the filter for the Carts we want to count
     *   }
     * })
    **/
    count<T extends CartCountArgs>(
      args?: Subset<T, CartCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CartCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cart.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CartAggregateArgs>(args: Subset<T, CartAggregateArgs>): Prisma.PrismaPromise<GetCartAggregateType<T>>

    /**
     * Group by Cart.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CartGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CartGroupByArgs['orderBy'] }
        : { orderBy?: CartGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CartGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCartGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cart model
   */
  readonly fields: CartFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cart.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CartClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variasi<T extends VariasiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VariasiDefaultArgs<ExtArgs>>): Prisma__VariasiClient<$Result.GetResult<Prisma.$VariasiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cart model
   */
  interface CartFieldRefs {
    readonly id: FieldRef<"Cart", 'Int'>
    readonly userId: FieldRef<"Cart", 'Int'>
    readonly productId: FieldRef<"Cart", 'Int'>
    readonly variasiId: FieldRef<"Cart", 'Int'>
    readonly quantity: FieldRef<"Cart", 'Int'>
    readonly time: FieldRef<"Cart", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Cart findUnique
   */
  export type CartFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartInclude<ExtArgs> | null
    /**
     * Filter, which Cart to fetch.
     */
    where: CartWhereUniqueInput
  }

  /**
   * Cart findUniqueOrThrow
   */
  export type CartFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartInclude<ExtArgs> | null
    /**
     * Filter, which Cart to fetch.
     */
    where: CartWhereUniqueInput
  }

  /**
   * Cart findFirst
   */
  export type CartFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartInclude<ExtArgs> | null
    /**
     * Filter, which Cart to fetch.
     */
    where?: CartWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carts to fetch.
     */
    orderBy?: CartOrderByWithRelationInput | CartOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Carts.
     */
    cursor?: CartWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Carts.
     */
    distinct?: CartScalarFieldEnum | CartScalarFieldEnum[]
  }

  /**
   * Cart findFirstOrThrow
   */
  export type CartFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartInclude<ExtArgs> | null
    /**
     * Filter, which Cart to fetch.
     */
    where?: CartWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carts to fetch.
     */
    orderBy?: CartOrderByWithRelationInput | CartOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Carts.
     */
    cursor?: CartWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Carts.
     */
    distinct?: CartScalarFieldEnum | CartScalarFieldEnum[]
  }

  /**
   * Cart findMany
   */
  export type CartFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartInclude<ExtArgs> | null
    /**
     * Filter, which Carts to fetch.
     */
    where?: CartWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carts to fetch.
     */
    orderBy?: CartOrderByWithRelationInput | CartOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Carts.
     */
    cursor?: CartWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carts.
     */
    skip?: number
    distinct?: CartScalarFieldEnum | CartScalarFieldEnum[]
  }

  /**
   * Cart create
   */
  export type CartCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartInclude<ExtArgs> | null
    /**
     * The data needed to create a Cart.
     */
    data: XOR<CartCreateInput, CartUncheckedCreateInput>
  }

  /**
   * Cart createMany
   */
  export type CartCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Carts.
     */
    data: CartCreateManyInput | CartCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cart createManyAndReturn
   */
  export type CartCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * The data used to create many Carts.
     */
    data: CartCreateManyInput | CartCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Cart update
   */
  export type CartUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartInclude<ExtArgs> | null
    /**
     * The data needed to update a Cart.
     */
    data: XOR<CartUpdateInput, CartUncheckedUpdateInput>
    /**
     * Choose, which Cart to update.
     */
    where: CartWhereUniqueInput
  }

  /**
   * Cart updateMany
   */
  export type CartUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Carts.
     */
    data: XOR<CartUpdateManyMutationInput, CartUncheckedUpdateManyInput>
    /**
     * Filter which Carts to update
     */
    where?: CartWhereInput
    /**
     * Limit how many Carts to update.
     */
    limit?: number
  }

  /**
   * Cart updateManyAndReturn
   */
  export type CartUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * The data used to update Carts.
     */
    data: XOR<CartUpdateManyMutationInput, CartUncheckedUpdateManyInput>
    /**
     * Filter which Carts to update
     */
    where?: CartWhereInput
    /**
     * Limit how many Carts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Cart upsert
   */
  export type CartUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartInclude<ExtArgs> | null
    /**
     * The filter to search for the Cart to update in case it exists.
     */
    where: CartWhereUniqueInput
    /**
     * In case the Cart found by the `where` argument doesn't exist, create a new Cart with this data.
     */
    create: XOR<CartCreateInput, CartUncheckedCreateInput>
    /**
     * In case the Cart was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CartUpdateInput, CartUncheckedUpdateInput>
  }

  /**
   * Cart delete
   */
  export type CartDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartInclude<ExtArgs> | null
    /**
     * Filter which Cart to delete.
     */
    where: CartWhereUniqueInput
  }

  /**
   * Cart deleteMany
   */
  export type CartDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Carts to delete
     */
    where?: CartWhereInput
    /**
     * Limit how many Carts to delete.
     */
    limit?: number
  }

  /**
   * Cart without action
   */
  export type CartDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart
     */
    select?: CartSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cart
     */
    omit?: CartOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartInclude<ExtArgs> | null
  }


  /**
   * Model Alamat
   */

  export type AggregateAlamat = {
    _count: AlamatCountAggregateOutputType | null
    _avg: AlamatAvgAggregateOutputType | null
    _sum: AlamatSumAggregateOutputType | null
    _min: AlamatMinAggregateOutputType | null
    _max: AlamatMaxAggregateOutputType | null
  }

  export type AlamatAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    is_toko: number | null
    is_default: number | null
  }

  export type AlamatSumAggregateOutputType = {
    id: number | null
    userId: number | null
    is_toko: number | null
    is_default: number | null
  }

  export type AlamatMinAggregateOutputType = {
    id: number | null
    userId: number | null
    kodeProv: string | null
    kodeKab: string | null
    kodeKec: string | null
    kodeDesa: string | null
    kodePos: string | null
    detail: string | null
    catatan: string | null
    is_toko: number | null
    is_default: number | null
  }

  export type AlamatMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    kodeProv: string | null
    kodeKab: string | null
    kodeKec: string | null
    kodeDesa: string | null
    kodePos: string | null
    detail: string | null
    catatan: string | null
    is_toko: number | null
    is_default: number | null
  }

  export type AlamatCountAggregateOutputType = {
    id: number
    userId: number
    kodeProv: number
    kodeKab: number
    kodeKec: number
    kodeDesa: number
    kodePos: number
    detail: number
    catatan: number
    is_toko: number
    is_default: number
    _all: number
  }


  export type AlamatAvgAggregateInputType = {
    id?: true
    userId?: true
    is_toko?: true
    is_default?: true
  }

  export type AlamatSumAggregateInputType = {
    id?: true
    userId?: true
    is_toko?: true
    is_default?: true
  }

  export type AlamatMinAggregateInputType = {
    id?: true
    userId?: true
    kodeProv?: true
    kodeKab?: true
    kodeKec?: true
    kodeDesa?: true
    kodePos?: true
    detail?: true
    catatan?: true
    is_toko?: true
    is_default?: true
  }

  export type AlamatMaxAggregateInputType = {
    id?: true
    userId?: true
    kodeProv?: true
    kodeKab?: true
    kodeKec?: true
    kodeDesa?: true
    kodePos?: true
    detail?: true
    catatan?: true
    is_toko?: true
    is_default?: true
  }

  export type AlamatCountAggregateInputType = {
    id?: true
    userId?: true
    kodeProv?: true
    kodeKab?: true
    kodeKec?: true
    kodeDesa?: true
    kodePos?: true
    detail?: true
    catatan?: true
    is_toko?: true
    is_default?: true
    _all?: true
  }

  export type AlamatAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Alamat to aggregate.
     */
    where?: AlamatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alamats to fetch.
     */
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AlamatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alamats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alamats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Alamats
    **/
    _count?: true | AlamatCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AlamatAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AlamatSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlamatMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlamatMaxAggregateInputType
  }

  export type GetAlamatAggregateType<T extends AlamatAggregateArgs> = {
        [P in keyof T & keyof AggregateAlamat]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlamat[P]>
      : GetScalarType<T[P], AggregateAlamat[P]>
  }




  export type AlamatGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlamatWhereInput
    orderBy?: AlamatOrderByWithAggregationInput | AlamatOrderByWithAggregationInput[]
    by: AlamatScalarFieldEnum[] | AlamatScalarFieldEnum
    having?: AlamatScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlamatCountAggregateInputType | true
    _avg?: AlamatAvgAggregateInputType
    _sum?: AlamatSumAggregateInputType
    _min?: AlamatMinAggregateInputType
    _max?: AlamatMaxAggregateInputType
  }

  export type AlamatGroupByOutputType = {
    id: number
    userId: number
    kodeProv: string
    kodeKab: string
    kodeKec: string
    kodeDesa: string
    kodePos: string
    detail: string
    catatan: string
    is_toko: number
    is_default: number
    _count: AlamatCountAggregateOutputType | null
    _avg: AlamatAvgAggregateOutputType | null
    _sum: AlamatSumAggregateOutputType | null
    _min: AlamatMinAggregateOutputType | null
    _max: AlamatMaxAggregateOutputType | null
  }

  type GetAlamatGroupByPayload<T extends AlamatGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlamatGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlamatGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlamatGroupByOutputType[P]>
            : GetScalarType<T[P], AlamatGroupByOutputType[P]>
        }
      >
    >


  export type AlamatSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    kodeProv?: boolean
    kodeKab?: boolean
    kodeKec?: boolean
    kodeDesa?: boolean
    kodePos?: boolean
    detail?: boolean
    catatan?: boolean
    is_toko?: boolean
    is_default?: boolean
    users?: boolean | UsersDefaultArgs<ExtArgs>
    provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
    kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
    kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
    desa?: boolean | DesaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alamat"]>

  export type AlamatSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    kodeProv?: boolean
    kodeKab?: boolean
    kodeKec?: boolean
    kodeDesa?: boolean
    kodePos?: boolean
    detail?: boolean
    catatan?: boolean
    is_toko?: boolean
    is_default?: boolean
    users?: boolean | UsersDefaultArgs<ExtArgs>
    provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
    kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
    kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
    desa?: boolean | DesaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alamat"]>

  export type AlamatSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    kodeProv?: boolean
    kodeKab?: boolean
    kodeKec?: boolean
    kodeDesa?: boolean
    kodePos?: boolean
    detail?: boolean
    catatan?: boolean
    is_toko?: boolean
    is_default?: boolean
    users?: boolean | UsersDefaultArgs<ExtArgs>
    provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
    kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
    kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
    desa?: boolean | DesaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alamat"]>

  export type AlamatSelectScalar = {
    id?: boolean
    userId?: boolean
    kodeProv?: boolean
    kodeKab?: boolean
    kodeKec?: boolean
    kodeDesa?: boolean
    kodePos?: boolean
    detail?: boolean
    catatan?: boolean
    is_toko?: boolean
    is_default?: boolean
  }

  export type AlamatOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "kodeProv" | "kodeKab" | "kodeKec" | "kodeDesa" | "kodePos" | "detail" | "catatan" | "is_toko" | "is_default", ExtArgs["result"]["alamat"]>
  export type AlamatInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | UsersDefaultArgs<ExtArgs>
    provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
    kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
    kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
    desa?: boolean | DesaDefaultArgs<ExtArgs>
  }
  export type AlamatIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | UsersDefaultArgs<ExtArgs>
    provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
    kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
    kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
    desa?: boolean | DesaDefaultArgs<ExtArgs>
  }
  export type AlamatIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | UsersDefaultArgs<ExtArgs>
    provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
    kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
    kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
    desa?: boolean | DesaDefaultArgs<ExtArgs>
  }

  export type $AlamatPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Alamat"
    objects: {
      users: Prisma.$UsersPayload<ExtArgs>
      provinsi: Prisma.$ProvinsiPayload<ExtArgs>
      kabupaten: Prisma.$KabupatenPayload<ExtArgs>
      kecamatan: Prisma.$KecamatanPayload<ExtArgs>
      desa: Prisma.$DesaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      kodeProv: string
      kodeKab: string
      kodeKec: string
      kodeDesa: string
      kodePos: string
      detail: string
      catatan: string
      is_toko: number
      is_default: number
    }, ExtArgs["result"]["alamat"]>
    composites: {}
  }

  type AlamatGetPayload<S extends boolean | null | undefined | AlamatDefaultArgs> = $Result.GetResult<Prisma.$AlamatPayload, S>

  type AlamatCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AlamatFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AlamatCountAggregateInputType | true
    }

  export interface AlamatDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Alamat'], meta: { name: 'Alamat' } }
    /**
     * Find zero or one Alamat that matches the filter.
     * @param {AlamatFindUniqueArgs} args - Arguments to find a Alamat
     * @example
     * // Get one Alamat
     * const alamat = await prisma.alamat.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AlamatFindUniqueArgs>(args: SelectSubset<T, AlamatFindUniqueArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Alamat that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AlamatFindUniqueOrThrowArgs} args - Arguments to find a Alamat
     * @example
     * // Get one Alamat
     * const alamat = await prisma.alamat.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AlamatFindUniqueOrThrowArgs>(args: SelectSubset<T, AlamatFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Alamat that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatFindFirstArgs} args - Arguments to find a Alamat
     * @example
     * // Get one Alamat
     * const alamat = await prisma.alamat.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AlamatFindFirstArgs>(args?: SelectSubset<T, AlamatFindFirstArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Alamat that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatFindFirstOrThrowArgs} args - Arguments to find a Alamat
     * @example
     * // Get one Alamat
     * const alamat = await prisma.alamat.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AlamatFindFirstOrThrowArgs>(args?: SelectSubset<T, AlamatFindFirstOrThrowArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Alamats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Alamats
     * const alamats = await prisma.alamat.findMany()
     * 
     * // Get first 10 Alamats
     * const alamats = await prisma.alamat.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alamatWithIdOnly = await prisma.alamat.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AlamatFindManyArgs>(args?: SelectSubset<T, AlamatFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Alamat.
     * @param {AlamatCreateArgs} args - Arguments to create a Alamat.
     * @example
     * // Create one Alamat
     * const Alamat = await prisma.alamat.create({
     *   data: {
     *     // ... data to create a Alamat
     *   }
     * })
     * 
     */
    create<T extends AlamatCreateArgs>(args: SelectSubset<T, AlamatCreateArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Alamats.
     * @param {AlamatCreateManyArgs} args - Arguments to create many Alamats.
     * @example
     * // Create many Alamats
     * const alamat = await prisma.alamat.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AlamatCreateManyArgs>(args?: SelectSubset<T, AlamatCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Alamats and returns the data saved in the database.
     * @param {AlamatCreateManyAndReturnArgs} args - Arguments to create many Alamats.
     * @example
     * // Create many Alamats
     * const alamat = await prisma.alamat.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Alamats and only return the `id`
     * const alamatWithIdOnly = await prisma.alamat.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AlamatCreateManyAndReturnArgs>(args?: SelectSubset<T, AlamatCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Alamat.
     * @param {AlamatDeleteArgs} args - Arguments to delete one Alamat.
     * @example
     * // Delete one Alamat
     * const Alamat = await prisma.alamat.delete({
     *   where: {
     *     // ... filter to delete one Alamat
     *   }
     * })
     * 
     */
    delete<T extends AlamatDeleteArgs>(args: SelectSubset<T, AlamatDeleteArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Alamat.
     * @param {AlamatUpdateArgs} args - Arguments to update one Alamat.
     * @example
     * // Update one Alamat
     * const alamat = await prisma.alamat.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AlamatUpdateArgs>(args: SelectSubset<T, AlamatUpdateArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Alamats.
     * @param {AlamatDeleteManyArgs} args - Arguments to filter Alamats to delete.
     * @example
     * // Delete a few Alamats
     * const { count } = await prisma.alamat.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AlamatDeleteManyArgs>(args?: SelectSubset<T, AlamatDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alamats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Alamats
     * const alamat = await prisma.alamat.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AlamatUpdateManyArgs>(args: SelectSubset<T, AlamatUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alamats and returns the data updated in the database.
     * @param {AlamatUpdateManyAndReturnArgs} args - Arguments to update many Alamats.
     * @example
     * // Update many Alamats
     * const alamat = await prisma.alamat.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Alamats and only return the `id`
     * const alamatWithIdOnly = await prisma.alamat.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AlamatUpdateManyAndReturnArgs>(args: SelectSubset<T, AlamatUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Alamat.
     * @param {AlamatUpsertArgs} args - Arguments to update or create a Alamat.
     * @example
     * // Update or create a Alamat
     * const alamat = await prisma.alamat.upsert({
     *   create: {
     *     // ... data to create a Alamat
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Alamat we want to update
     *   }
     * })
     */
    upsert<T extends AlamatUpsertArgs>(args: SelectSubset<T, AlamatUpsertArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Alamats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatCountArgs} args - Arguments to filter Alamats to count.
     * @example
     * // Count the number of Alamats
     * const count = await prisma.alamat.count({
     *   where: {
     *     // ... the filter for the Alamats we want to count
     *   }
     * })
    **/
    count<T extends AlamatCountArgs>(
      args?: Subset<T, AlamatCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlamatCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Alamat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlamatAggregateArgs>(args: Subset<T, AlamatAggregateArgs>): Prisma.PrismaPromise<GetAlamatAggregateType<T>>

    /**
     * Group by Alamat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AlamatGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AlamatGroupByArgs['orderBy'] }
        : { orderBy?: AlamatGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AlamatGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlamatGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Alamat model
   */
  readonly fields: AlamatFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Alamat.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AlamatClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    provinsi<T extends ProvinsiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProvinsiDefaultArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    kabupaten<T extends KabupatenDefaultArgs<ExtArgs> = {}>(args?: Subset<T, KabupatenDefaultArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    kecamatan<T extends KecamatanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, KecamatanDefaultArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    desa<T extends DesaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DesaDefaultArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Alamat model
   */
  interface AlamatFieldRefs {
    readonly id: FieldRef<"Alamat", 'Int'>
    readonly userId: FieldRef<"Alamat", 'Int'>
    readonly kodeProv: FieldRef<"Alamat", 'String'>
    readonly kodeKab: FieldRef<"Alamat", 'String'>
    readonly kodeKec: FieldRef<"Alamat", 'String'>
    readonly kodeDesa: FieldRef<"Alamat", 'String'>
    readonly kodePos: FieldRef<"Alamat", 'String'>
    readonly detail: FieldRef<"Alamat", 'String'>
    readonly catatan: FieldRef<"Alamat", 'String'>
    readonly is_toko: FieldRef<"Alamat", 'Int'>
    readonly is_default: FieldRef<"Alamat", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Alamat findUnique
   */
  export type AlamatFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * Filter, which Alamat to fetch.
     */
    where: AlamatWhereUniqueInput
  }

  /**
   * Alamat findUniqueOrThrow
   */
  export type AlamatFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * Filter, which Alamat to fetch.
     */
    where: AlamatWhereUniqueInput
  }

  /**
   * Alamat findFirst
   */
  export type AlamatFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * Filter, which Alamat to fetch.
     */
    where?: AlamatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alamats to fetch.
     */
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Alamats.
     */
    cursor?: AlamatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alamats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alamats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Alamats.
     */
    distinct?: AlamatScalarFieldEnum | AlamatScalarFieldEnum[]
  }

  /**
   * Alamat findFirstOrThrow
   */
  export type AlamatFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * Filter, which Alamat to fetch.
     */
    where?: AlamatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alamats to fetch.
     */
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Alamats.
     */
    cursor?: AlamatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alamats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alamats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Alamats.
     */
    distinct?: AlamatScalarFieldEnum | AlamatScalarFieldEnum[]
  }

  /**
   * Alamat findMany
   */
  export type AlamatFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * Filter, which Alamats to fetch.
     */
    where?: AlamatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alamats to fetch.
     */
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Alamats.
     */
    cursor?: AlamatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alamats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alamats.
     */
    skip?: number
    distinct?: AlamatScalarFieldEnum | AlamatScalarFieldEnum[]
  }

  /**
   * Alamat create
   */
  export type AlamatCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * The data needed to create a Alamat.
     */
    data: XOR<AlamatCreateInput, AlamatUncheckedCreateInput>
  }

  /**
   * Alamat createMany
   */
  export type AlamatCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Alamats.
     */
    data: AlamatCreateManyInput | AlamatCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Alamat createManyAndReturn
   */
  export type AlamatCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * The data used to create many Alamats.
     */
    data: AlamatCreateManyInput | AlamatCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Alamat update
   */
  export type AlamatUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * The data needed to update a Alamat.
     */
    data: XOR<AlamatUpdateInput, AlamatUncheckedUpdateInput>
    /**
     * Choose, which Alamat to update.
     */
    where: AlamatWhereUniqueInput
  }

  /**
   * Alamat updateMany
   */
  export type AlamatUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Alamats.
     */
    data: XOR<AlamatUpdateManyMutationInput, AlamatUncheckedUpdateManyInput>
    /**
     * Filter which Alamats to update
     */
    where?: AlamatWhereInput
    /**
     * Limit how many Alamats to update.
     */
    limit?: number
  }

  /**
   * Alamat updateManyAndReturn
   */
  export type AlamatUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * The data used to update Alamats.
     */
    data: XOR<AlamatUpdateManyMutationInput, AlamatUncheckedUpdateManyInput>
    /**
     * Filter which Alamats to update
     */
    where?: AlamatWhereInput
    /**
     * Limit how many Alamats to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Alamat upsert
   */
  export type AlamatUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * The filter to search for the Alamat to update in case it exists.
     */
    where: AlamatWhereUniqueInput
    /**
     * In case the Alamat found by the `where` argument doesn't exist, create a new Alamat with this data.
     */
    create: XOR<AlamatCreateInput, AlamatUncheckedCreateInput>
    /**
     * In case the Alamat was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AlamatUpdateInput, AlamatUncheckedUpdateInput>
  }

  /**
   * Alamat delete
   */
  export type AlamatDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * Filter which Alamat to delete.
     */
    where: AlamatWhereUniqueInput
  }

  /**
   * Alamat deleteMany
   */
  export type AlamatDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Alamats to delete
     */
    where?: AlamatWhereInput
    /**
     * Limit how many Alamats to delete.
     */
    limit?: number
  }

  /**
   * Alamat without action
   */
  export type AlamatDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
  }


  /**
   * Model Provinsi
   */

  export type AggregateProvinsi = {
    _count: ProvinsiCountAggregateOutputType | null
    _min: ProvinsiMinAggregateOutputType | null
    _max: ProvinsiMaxAggregateOutputType | null
  }

  export type ProvinsiMinAggregateOutputType = {
    kode: string | null
    nama: string | null
  }

  export type ProvinsiMaxAggregateOutputType = {
    kode: string | null
    nama: string | null
  }

  export type ProvinsiCountAggregateOutputType = {
    kode: number
    nama: number
    _all: number
  }


  export type ProvinsiMinAggregateInputType = {
    kode?: true
    nama?: true
  }

  export type ProvinsiMaxAggregateInputType = {
    kode?: true
    nama?: true
  }

  export type ProvinsiCountAggregateInputType = {
    kode?: true
    nama?: true
    _all?: true
  }

  export type ProvinsiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Provinsi to aggregate.
     */
    where?: ProvinsiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provinsis to fetch.
     */
    orderBy?: ProvinsiOrderByWithRelationInput | ProvinsiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProvinsiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provinsis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provinsis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Provinsis
    **/
    _count?: true | ProvinsiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProvinsiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProvinsiMaxAggregateInputType
  }

  export type GetProvinsiAggregateType<T extends ProvinsiAggregateArgs> = {
        [P in keyof T & keyof AggregateProvinsi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProvinsi[P]>
      : GetScalarType<T[P], AggregateProvinsi[P]>
  }




  export type ProvinsiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProvinsiWhereInput
    orderBy?: ProvinsiOrderByWithAggregationInput | ProvinsiOrderByWithAggregationInput[]
    by: ProvinsiScalarFieldEnum[] | ProvinsiScalarFieldEnum
    having?: ProvinsiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProvinsiCountAggregateInputType | true
    _min?: ProvinsiMinAggregateInputType
    _max?: ProvinsiMaxAggregateInputType
  }

  export type ProvinsiGroupByOutputType = {
    kode: string
    nama: string
    _count: ProvinsiCountAggregateOutputType | null
    _min: ProvinsiMinAggregateOutputType | null
    _max: ProvinsiMaxAggregateOutputType | null
  }

  type GetProvinsiGroupByPayload<T extends ProvinsiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProvinsiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProvinsiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProvinsiGroupByOutputType[P]>
            : GetScalarType<T[P], ProvinsiGroupByOutputType[P]>
        }
      >
    >


  export type ProvinsiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kode?: boolean
    nama?: boolean
    kabupaten?: boolean | Provinsi$kabupatenArgs<ExtArgs>
    alamat?: boolean | Provinsi$alamatArgs<ExtArgs>
    _count?: boolean | ProvinsiCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provinsi"]>

  export type ProvinsiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kode?: boolean
    nama?: boolean
  }, ExtArgs["result"]["provinsi"]>

  export type ProvinsiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kode?: boolean
    nama?: boolean
  }, ExtArgs["result"]["provinsi"]>

  export type ProvinsiSelectScalar = {
    kode?: boolean
    nama?: boolean
  }

  export type ProvinsiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"kode" | "nama", ExtArgs["result"]["provinsi"]>
  export type ProvinsiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kabupaten?: boolean | Provinsi$kabupatenArgs<ExtArgs>
    alamat?: boolean | Provinsi$alamatArgs<ExtArgs>
    _count?: boolean | ProvinsiCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProvinsiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ProvinsiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ProvinsiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Provinsi"
    objects: {
      kabupaten: Prisma.$KabupatenPayload<ExtArgs>[]
      alamat: Prisma.$AlamatPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      kode: string
      nama: string
    }, ExtArgs["result"]["provinsi"]>
    composites: {}
  }

  type ProvinsiGetPayload<S extends boolean | null | undefined | ProvinsiDefaultArgs> = $Result.GetResult<Prisma.$ProvinsiPayload, S>

  type ProvinsiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProvinsiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProvinsiCountAggregateInputType | true
    }

  export interface ProvinsiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Provinsi'], meta: { name: 'Provinsi' } }
    /**
     * Find zero or one Provinsi that matches the filter.
     * @param {ProvinsiFindUniqueArgs} args - Arguments to find a Provinsi
     * @example
     * // Get one Provinsi
     * const provinsi = await prisma.provinsi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProvinsiFindUniqueArgs>(args: SelectSubset<T, ProvinsiFindUniqueArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Provinsi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProvinsiFindUniqueOrThrowArgs} args - Arguments to find a Provinsi
     * @example
     * // Get one Provinsi
     * const provinsi = await prisma.provinsi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProvinsiFindUniqueOrThrowArgs>(args: SelectSubset<T, ProvinsiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provinsi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiFindFirstArgs} args - Arguments to find a Provinsi
     * @example
     * // Get one Provinsi
     * const provinsi = await prisma.provinsi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProvinsiFindFirstArgs>(args?: SelectSubset<T, ProvinsiFindFirstArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provinsi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiFindFirstOrThrowArgs} args - Arguments to find a Provinsi
     * @example
     * // Get one Provinsi
     * const provinsi = await prisma.provinsi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProvinsiFindFirstOrThrowArgs>(args?: SelectSubset<T, ProvinsiFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Provinsis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Provinsis
     * const provinsis = await prisma.provinsi.findMany()
     * 
     * // Get first 10 Provinsis
     * const provinsis = await prisma.provinsi.findMany({ take: 10 })
     * 
     * // Only select the `kode`
     * const provinsiWithKodeOnly = await prisma.provinsi.findMany({ select: { kode: true } })
     * 
     */
    findMany<T extends ProvinsiFindManyArgs>(args?: SelectSubset<T, ProvinsiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Provinsi.
     * @param {ProvinsiCreateArgs} args - Arguments to create a Provinsi.
     * @example
     * // Create one Provinsi
     * const Provinsi = await prisma.provinsi.create({
     *   data: {
     *     // ... data to create a Provinsi
     *   }
     * })
     * 
     */
    create<T extends ProvinsiCreateArgs>(args: SelectSubset<T, ProvinsiCreateArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Provinsis.
     * @param {ProvinsiCreateManyArgs} args - Arguments to create many Provinsis.
     * @example
     * // Create many Provinsis
     * const provinsi = await prisma.provinsi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProvinsiCreateManyArgs>(args?: SelectSubset<T, ProvinsiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Provinsis and returns the data saved in the database.
     * @param {ProvinsiCreateManyAndReturnArgs} args - Arguments to create many Provinsis.
     * @example
     * // Create many Provinsis
     * const provinsi = await prisma.provinsi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Provinsis and only return the `kode`
     * const provinsiWithKodeOnly = await prisma.provinsi.createManyAndReturn({
     *   select: { kode: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProvinsiCreateManyAndReturnArgs>(args?: SelectSubset<T, ProvinsiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Provinsi.
     * @param {ProvinsiDeleteArgs} args - Arguments to delete one Provinsi.
     * @example
     * // Delete one Provinsi
     * const Provinsi = await prisma.provinsi.delete({
     *   where: {
     *     // ... filter to delete one Provinsi
     *   }
     * })
     * 
     */
    delete<T extends ProvinsiDeleteArgs>(args: SelectSubset<T, ProvinsiDeleteArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Provinsi.
     * @param {ProvinsiUpdateArgs} args - Arguments to update one Provinsi.
     * @example
     * // Update one Provinsi
     * const provinsi = await prisma.provinsi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProvinsiUpdateArgs>(args: SelectSubset<T, ProvinsiUpdateArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Provinsis.
     * @param {ProvinsiDeleteManyArgs} args - Arguments to filter Provinsis to delete.
     * @example
     * // Delete a few Provinsis
     * const { count } = await prisma.provinsi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProvinsiDeleteManyArgs>(args?: SelectSubset<T, ProvinsiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provinsis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Provinsis
     * const provinsi = await prisma.provinsi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProvinsiUpdateManyArgs>(args: SelectSubset<T, ProvinsiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provinsis and returns the data updated in the database.
     * @param {ProvinsiUpdateManyAndReturnArgs} args - Arguments to update many Provinsis.
     * @example
     * // Update many Provinsis
     * const provinsi = await prisma.provinsi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Provinsis and only return the `kode`
     * const provinsiWithKodeOnly = await prisma.provinsi.updateManyAndReturn({
     *   select: { kode: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProvinsiUpdateManyAndReturnArgs>(args: SelectSubset<T, ProvinsiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Provinsi.
     * @param {ProvinsiUpsertArgs} args - Arguments to update or create a Provinsi.
     * @example
     * // Update or create a Provinsi
     * const provinsi = await prisma.provinsi.upsert({
     *   create: {
     *     // ... data to create a Provinsi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Provinsi we want to update
     *   }
     * })
     */
    upsert<T extends ProvinsiUpsertArgs>(args: SelectSubset<T, ProvinsiUpsertArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Provinsis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiCountArgs} args - Arguments to filter Provinsis to count.
     * @example
     * // Count the number of Provinsis
     * const count = await prisma.provinsi.count({
     *   where: {
     *     // ... the filter for the Provinsis we want to count
     *   }
     * })
    **/
    count<T extends ProvinsiCountArgs>(
      args?: Subset<T, ProvinsiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProvinsiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Provinsi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProvinsiAggregateArgs>(args: Subset<T, ProvinsiAggregateArgs>): Prisma.PrismaPromise<GetProvinsiAggregateType<T>>

    /**
     * Group by Provinsi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProvinsiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProvinsiGroupByArgs['orderBy'] }
        : { orderBy?: ProvinsiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProvinsiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProvinsiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Provinsi model
   */
  readonly fields: ProvinsiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Provinsi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProvinsiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kabupaten<T extends Provinsi$kabupatenArgs<ExtArgs> = {}>(args?: Subset<T, Provinsi$kabupatenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    alamat<T extends Provinsi$alamatArgs<ExtArgs> = {}>(args?: Subset<T, Provinsi$alamatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Provinsi model
   */
  interface ProvinsiFieldRefs {
    readonly kode: FieldRef<"Provinsi", 'String'>
    readonly nama: FieldRef<"Provinsi", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Provinsi findUnique
   */
  export type ProvinsiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * Filter, which Provinsi to fetch.
     */
    where: ProvinsiWhereUniqueInput
  }

  /**
   * Provinsi findUniqueOrThrow
   */
  export type ProvinsiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * Filter, which Provinsi to fetch.
     */
    where: ProvinsiWhereUniqueInput
  }

  /**
   * Provinsi findFirst
   */
  export type ProvinsiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * Filter, which Provinsi to fetch.
     */
    where?: ProvinsiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provinsis to fetch.
     */
    orderBy?: ProvinsiOrderByWithRelationInput | ProvinsiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Provinsis.
     */
    cursor?: ProvinsiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provinsis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provinsis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Provinsis.
     */
    distinct?: ProvinsiScalarFieldEnum | ProvinsiScalarFieldEnum[]
  }

  /**
   * Provinsi findFirstOrThrow
   */
  export type ProvinsiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * Filter, which Provinsi to fetch.
     */
    where?: ProvinsiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provinsis to fetch.
     */
    orderBy?: ProvinsiOrderByWithRelationInput | ProvinsiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Provinsis.
     */
    cursor?: ProvinsiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provinsis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provinsis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Provinsis.
     */
    distinct?: ProvinsiScalarFieldEnum | ProvinsiScalarFieldEnum[]
  }

  /**
   * Provinsi findMany
   */
  export type ProvinsiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * Filter, which Provinsis to fetch.
     */
    where?: ProvinsiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provinsis to fetch.
     */
    orderBy?: ProvinsiOrderByWithRelationInput | ProvinsiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Provinsis.
     */
    cursor?: ProvinsiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provinsis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provinsis.
     */
    skip?: number
    distinct?: ProvinsiScalarFieldEnum | ProvinsiScalarFieldEnum[]
  }

  /**
   * Provinsi create
   */
  export type ProvinsiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * The data needed to create a Provinsi.
     */
    data: XOR<ProvinsiCreateInput, ProvinsiUncheckedCreateInput>
  }

  /**
   * Provinsi createMany
   */
  export type ProvinsiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Provinsis.
     */
    data: ProvinsiCreateManyInput | ProvinsiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Provinsi createManyAndReturn
   */
  export type ProvinsiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * The data used to create many Provinsis.
     */
    data: ProvinsiCreateManyInput | ProvinsiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Provinsi update
   */
  export type ProvinsiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * The data needed to update a Provinsi.
     */
    data: XOR<ProvinsiUpdateInput, ProvinsiUncheckedUpdateInput>
    /**
     * Choose, which Provinsi to update.
     */
    where: ProvinsiWhereUniqueInput
  }

  /**
   * Provinsi updateMany
   */
  export type ProvinsiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Provinsis.
     */
    data: XOR<ProvinsiUpdateManyMutationInput, ProvinsiUncheckedUpdateManyInput>
    /**
     * Filter which Provinsis to update
     */
    where?: ProvinsiWhereInput
    /**
     * Limit how many Provinsis to update.
     */
    limit?: number
  }

  /**
   * Provinsi updateManyAndReturn
   */
  export type ProvinsiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * The data used to update Provinsis.
     */
    data: XOR<ProvinsiUpdateManyMutationInput, ProvinsiUncheckedUpdateManyInput>
    /**
     * Filter which Provinsis to update
     */
    where?: ProvinsiWhereInput
    /**
     * Limit how many Provinsis to update.
     */
    limit?: number
  }

  /**
   * Provinsi upsert
   */
  export type ProvinsiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * The filter to search for the Provinsi to update in case it exists.
     */
    where: ProvinsiWhereUniqueInput
    /**
     * In case the Provinsi found by the `where` argument doesn't exist, create a new Provinsi with this data.
     */
    create: XOR<ProvinsiCreateInput, ProvinsiUncheckedCreateInput>
    /**
     * In case the Provinsi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProvinsiUpdateInput, ProvinsiUncheckedUpdateInput>
  }

  /**
   * Provinsi delete
   */
  export type ProvinsiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * Filter which Provinsi to delete.
     */
    where: ProvinsiWhereUniqueInput
  }

  /**
   * Provinsi deleteMany
   */
  export type ProvinsiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Provinsis to delete
     */
    where?: ProvinsiWhereInput
    /**
     * Limit how many Provinsis to delete.
     */
    limit?: number
  }

  /**
   * Provinsi.kabupaten
   */
  export type Provinsi$kabupatenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    where?: KabupatenWhereInput
    orderBy?: KabupatenOrderByWithRelationInput | KabupatenOrderByWithRelationInput[]
    cursor?: KabupatenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KabupatenScalarFieldEnum | KabupatenScalarFieldEnum[]
  }

  /**
   * Provinsi.alamat
   */
  export type Provinsi$alamatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    where?: AlamatWhereInput
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    cursor?: AlamatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlamatScalarFieldEnum | AlamatScalarFieldEnum[]
  }

  /**
   * Provinsi without action
   */
  export type ProvinsiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
  }


  /**
   * Model Kabupaten
   */

  export type AggregateKabupaten = {
    _count: KabupatenCountAggregateOutputType | null
    _min: KabupatenMinAggregateOutputType | null
    _max: KabupatenMaxAggregateOutputType | null
  }

  export type KabupatenMinAggregateOutputType = {
    kodeProv: string | null
    kode: string | null
    nama: string | null
  }

  export type KabupatenMaxAggregateOutputType = {
    kodeProv: string | null
    kode: string | null
    nama: string | null
  }

  export type KabupatenCountAggregateOutputType = {
    kodeProv: number
    kode: number
    nama: number
    _all: number
  }


  export type KabupatenMinAggregateInputType = {
    kodeProv?: true
    kode?: true
    nama?: true
  }

  export type KabupatenMaxAggregateInputType = {
    kodeProv?: true
    kode?: true
    nama?: true
  }

  export type KabupatenCountAggregateInputType = {
    kodeProv?: true
    kode?: true
    nama?: true
    _all?: true
  }

  export type KabupatenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kabupaten to aggregate.
     */
    where?: KabupatenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kabupatens to fetch.
     */
    orderBy?: KabupatenOrderByWithRelationInput | KabupatenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: KabupatenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kabupatens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kabupatens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Kabupatens
    **/
    _count?: true | KabupatenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KabupatenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KabupatenMaxAggregateInputType
  }

  export type GetKabupatenAggregateType<T extends KabupatenAggregateArgs> = {
        [P in keyof T & keyof AggregateKabupaten]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKabupaten[P]>
      : GetScalarType<T[P], AggregateKabupaten[P]>
  }




  export type KabupatenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KabupatenWhereInput
    orderBy?: KabupatenOrderByWithAggregationInput | KabupatenOrderByWithAggregationInput[]
    by: KabupatenScalarFieldEnum[] | KabupatenScalarFieldEnum
    having?: KabupatenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KabupatenCountAggregateInputType | true
    _min?: KabupatenMinAggregateInputType
    _max?: KabupatenMaxAggregateInputType
  }

  export type KabupatenGroupByOutputType = {
    kodeProv: string
    kode: string
    nama: string
    _count: KabupatenCountAggregateOutputType | null
    _min: KabupatenMinAggregateOutputType | null
    _max: KabupatenMaxAggregateOutputType | null
  }

  type GetKabupatenGroupByPayload<T extends KabupatenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KabupatenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KabupatenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KabupatenGroupByOutputType[P]>
            : GetScalarType<T[P], KabupatenGroupByOutputType[P]>
        }
      >
    >


  export type KabupatenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kodeProv?: boolean
    kode?: boolean
    nama?: boolean
    provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
    kecamatan?: boolean | Kabupaten$kecamatanArgs<ExtArgs>
    alamat?: boolean | Kabupaten$alamatArgs<ExtArgs>
    _count?: boolean | KabupatenCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kabupaten"]>

  export type KabupatenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kodeProv?: boolean
    kode?: boolean
    nama?: boolean
    provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kabupaten"]>

  export type KabupatenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kodeProv?: boolean
    kode?: boolean
    nama?: boolean
    provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kabupaten"]>

  export type KabupatenSelectScalar = {
    kodeProv?: boolean
    kode?: boolean
    nama?: boolean
  }

  export type KabupatenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"kodeProv" | "kode" | "nama", ExtArgs["result"]["kabupaten"]>
  export type KabupatenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
    kecamatan?: boolean | Kabupaten$kecamatanArgs<ExtArgs>
    alamat?: boolean | Kabupaten$alamatArgs<ExtArgs>
    _count?: boolean | KabupatenCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type KabupatenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
  }
  export type KabupatenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
  }

  export type $KabupatenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Kabupaten"
    objects: {
      provinsi: Prisma.$ProvinsiPayload<ExtArgs>
      kecamatan: Prisma.$KecamatanPayload<ExtArgs>[]
      alamat: Prisma.$AlamatPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      kodeProv: string
      kode: string
      nama: string
    }, ExtArgs["result"]["kabupaten"]>
    composites: {}
  }

  type KabupatenGetPayload<S extends boolean | null | undefined | KabupatenDefaultArgs> = $Result.GetResult<Prisma.$KabupatenPayload, S>

  type KabupatenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<KabupatenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: KabupatenCountAggregateInputType | true
    }

  export interface KabupatenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Kabupaten'], meta: { name: 'Kabupaten' } }
    /**
     * Find zero or one Kabupaten that matches the filter.
     * @param {KabupatenFindUniqueArgs} args - Arguments to find a Kabupaten
     * @example
     * // Get one Kabupaten
     * const kabupaten = await prisma.kabupaten.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends KabupatenFindUniqueArgs>(args: SelectSubset<T, KabupatenFindUniqueArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Kabupaten that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {KabupatenFindUniqueOrThrowArgs} args - Arguments to find a Kabupaten
     * @example
     * // Get one Kabupaten
     * const kabupaten = await prisma.kabupaten.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends KabupatenFindUniqueOrThrowArgs>(args: SelectSubset<T, KabupatenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Kabupaten that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenFindFirstArgs} args - Arguments to find a Kabupaten
     * @example
     * // Get one Kabupaten
     * const kabupaten = await prisma.kabupaten.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends KabupatenFindFirstArgs>(args?: SelectSubset<T, KabupatenFindFirstArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Kabupaten that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenFindFirstOrThrowArgs} args - Arguments to find a Kabupaten
     * @example
     * // Get one Kabupaten
     * const kabupaten = await prisma.kabupaten.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends KabupatenFindFirstOrThrowArgs>(args?: SelectSubset<T, KabupatenFindFirstOrThrowArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Kabupatens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kabupatens
     * const kabupatens = await prisma.kabupaten.findMany()
     * 
     * // Get first 10 Kabupatens
     * const kabupatens = await prisma.kabupaten.findMany({ take: 10 })
     * 
     * // Only select the `kodeProv`
     * const kabupatenWithKodeProvOnly = await prisma.kabupaten.findMany({ select: { kodeProv: true } })
     * 
     */
    findMany<T extends KabupatenFindManyArgs>(args?: SelectSubset<T, KabupatenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Kabupaten.
     * @param {KabupatenCreateArgs} args - Arguments to create a Kabupaten.
     * @example
     * // Create one Kabupaten
     * const Kabupaten = await prisma.kabupaten.create({
     *   data: {
     *     // ... data to create a Kabupaten
     *   }
     * })
     * 
     */
    create<T extends KabupatenCreateArgs>(args: SelectSubset<T, KabupatenCreateArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Kabupatens.
     * @param {KabupatenCreateManyArgs} args - Arguments to create many Kabupatens.
     * @example
     * // Create many Kabupatens
     * const kabupaten = await prisma.kabupaten.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends KabupatenCreateManyArgs>(args?: SelectSubset<T, KabupatenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Kabupatens and returns the data saved in the database.
     * @param {KabupatenCreateManyAndReturnArgs} args - Arguments to create many Kabupatens.
     * @example
     * // Create many Kabupatens
     * const kabupaten = await prisma.kabupaten.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Kabupatens and only return the `kodeProv`
     * const kabupatenWithKodeProvOnly = await prisma.kabupaten.createManyAndReturn({
     *   select: { kodeProv: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends KabupatenCreateManyAndReturnArgs>(args?: SelectSubset<T, KabupatenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Kabupaten.
     * @param {KabupatenDeleteArgs} args - Arguments to delete one Kabupaten.
     * @example
     * // Delete one Kabupaten
     * const Kabupaten = await prisma.kabupaten.delete({
     *   where: {
     *     // ... filter to delete one Kabupaten
     *   }
     * })
     * 
     */
    delete<T extends KabupatenDeleteArgs>(args: SelectSubset<T, KabupatenDeleteArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Kabupaten.
     * @param {KabupatenUpdateArgs} args - Arguments to update one Kabupaten.
     * @example
     * // Update one Kabupaten
     * const kabupaten = await prisma.kabupaten.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends KabupatenUpdateArgs>(args: SelectSubset<T, KabupatenUpdateArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Kabupatens.
     * @param {KabupatenDeleteManyArgs} args - Arguments to filter Kabupatens to delete.
     * @example
     * // Delete a few Kabupatens
     * const { count } = await prisma.kabupaten.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends KabupatenDeleteManyArgs>(args?: SelectSubset<T, KabupatenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kabupatens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kabupatens
     * const kabupaten = await prisma.kabupaten.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends KabupatenUpdateManyArgs>(args: SelectSubset<T, KabupatenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kabupatens and returns the data updated in the database.
     * @param {KabupatenUpdateManyAndReturnArgs} args - Arguments to update many Kabupatens.
     * @example
     * // Update many Kabupatens
     * const kabupaten = await prisma.kabupaten.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Kabupatens and only return the `kodeProv`
     * const kabupatenWithKodeProvOnly = await prisma.kabupaten.updateManyAndReturn({
     *   select: { kodeProv: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends KabupatenUpdateManyAndReturnArgs>(args: SelectSubset<T, KabupatenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Kabupaten.
     * @param {KabupatenUpsertArgs} args - Arguments to update or create a Kabupaten.
     * @example
     * // Update or create a Kabupaten
     * const kabupaten = await prisma.kabupaten.upsert({
     *   create: {
     *     // ... data to create a Kabupaten
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kabupaten we want to update
     *   }
     * })
     */
    upsert<T extends KabupatenUpsertArgs>(args: SelectSubset<T, KabupatenUpsertArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Kabupatens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenCountArgs} args - Arguments to filter Kabupatens to count.
     * @example
     * // Count the number of Kabupatens
     * const count = await prisma.kabupaten.count({
     *   where: {
     *     // ... the filter for the Kabupatens we want to count
     *   }
     * })
    **/
    count<T extends KabupatenCountArgs>(
      args?: Subset<T, KabupatenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KabupatenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kabupaten.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KabupatenAggregateArgs>(args: Subset<T, KabupatenAggregateArgs>): Prisma.PrismaPromise<GetKabupatenAggregateType<T>>

    /**
     * Group by Kabupaten.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends KabupatenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: KabupatenGroupByArgs['orderBy'] }
        : { orderBy?: KabupatenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, KabupatenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKabupatenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Kabupaten model
   */
  readonly fields: KabupatenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Kabupaten.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__KabupatenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    provinsi<T extends ProvinsiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProvinsiDefaultArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    kecamatan<T extends Kabupaten$kecamatanArgs<ExtArgs> = {}>(args?: Subset<T, Kabupaten$kecamatanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    alamat<T extends Kabupaten$alamatArgs<ExtArgs> = {}>(args?: Subset<T, Kabupaten$alamatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Kabupaten model
   */
  interface KabupatenFieldRefs {
    readonly kodeProv: FieldRef<"Kabupaten", 'String'>
    readonly kode: FieldRef<"Kabupaten", 'String'>
    readonly nama: FieldRef<"Kabupaten", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Kabupaten findUnique
   */
  export type KabupatenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * Filter, which Kabupaten to fetch.
     */
    where: KabupatenWhereUniqueInput
  }

  /**
   * Kabupaten findUniqueOrThrow
   */
  export type KabupatenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * Filter, which Kabupaten to fetch.
     */
    where: KabupatenWhereUniqueInput
  }

  /**
   * Kabupaten findFirst
   */
  export type KabupatenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * Filter, which Kabupaten to fetch.
     */
    where?: KabupatenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kabupatens to fetch.
     */
    orderBy?: KabupatenOrderByWithRelationInput | KabupatenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kabupatens.
     */
    cursor?: KabupatenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kabupatens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kabupatens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kabupatens.
     */
    distinct?: KabupatenScalarFieldEnum | KabupatenScalarFieldEnum[]
  }

  /**
   * Kabupaten findFirstOrThrow
   */
  export type KabupatenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * Filter, which Kabupaten to fetch.
     */
    where?: KabupatenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kabupatens to fetch.
     */
    orderBy?: KabupatenOrderByWithRelationInput | KabupatenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kabupatens.
     */
    cursor?: KabupatenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kabupatens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kabupatens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kabupatens.
     */
    distinct?: KabupatenScalarFieldEnum | KabupatenScalarFieldEnum[]
  }

  /**
   * Kabupaten findMany
   */
  export type KabupatenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * Filter, which Kabupatens to fetch.
     */
    where?: KabupatenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kabupatens to fetch.
     */
    orderBy?: KabupatenOrderByWithRelationInput | KabupatenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Kabupatens.
     */
    cursor?: KabupatenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kabupatens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kabupatens.
     */
    skip?: number
    distinct?: KabupatenScalarFieldEnum | KabupatenScalarFieldEnum[]
  }

  /**
   * Kabupaten create
   */
  export type KabupatenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * The data needed to create a Kabupaten.
     */
    data: XOR<KabupatenCreateInput, KabupatenUncheckedCreateInput>
  }

  /**
   * Kabupaten createMany
   */
  export type KabupatenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Kabupatens.
     */
    data: KabupatenCreateManyInput | KabupatenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Kabupaten createManyAndReturn
   */
  export type KabupatenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * The data used to create many Kabupatens.
     */
    data: KabupatenCreateManyInput | KabupatenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Kabupaten update
   */
  export type KabupatenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * The data needed to update a Kabupaten.
     */
    data: XOR<KabupatenUpdateInput, KabupatenUncheckedUpdateInput>
    /**
     * Choose, which Kabupaten to update.
     */
    where: KabupatenWhereUniqueInput
  }

  /**
   * Kabupaten updateMany
   */
  export type KabupatenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Kabupatens.
     */
    data: XOR<KabupatenUpdateManyMutationInput, KabupatenUncheckedUpdateManyInput>
    /**
     * Filter which Kabupatens to update
     */
    where?: KabupatenWhereInput
    /**
     * Limit how many Kabupatens to update.
     */
    limit?: number
  }

  /**
   * Kabupaten updateManyAndReturn
   */
  export type KabupatenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * The data used to update Kabupatens.
     */
    data: XOR<KabupatenUpdateManyMutationInput, KabupatenUncheckedUpdateManyInput>
    /**
     * Filter which Kabupatens to update
     */
    where?: KabupatenWhereInput
    /**
     * Limit how many Kabupatens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Kabupaten upsert
   */
  export type KabupatenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * The filter to search for the Kabupaten to update in case it exists.
     */
    where: KabupatenWhereUniqueInput
    /**
     * In case the Kabupaten found by the `where` argument doesn't exist, create a new Kabupaten with this data.
     */
    create: XOR<KabupatenCreateInput, KabupatenUncheckedCreateInput>
    /**
     * In case the Kabupaten was found with the provided `where` argument, update it with this data.
     */
    update: XOR<KabupatenUpdateInput, KabupatenUncheckedUpdateInput>
  }

  /**
   * Kabupaten delete
   */
  export type KabupatenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * Filter which Kabupaten to delete.
     */
    where: KabupatenWhereUniqueInput
  }

  /**
   * Kabupaten deleteMany
   */
  export type KabupatenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kabupatens to delete
     */
    where?: KabupatenWhereInput
    /**
     * Limit how many Kabupatens to delete.
     */
    limit?: number
  }

  /**
   * Kabupaten.kecamatan
   */
  export type Kabupaten$kecamatanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    where?: KecamatanWhereInput
    orderBy?: KecamatanOrderByWithRelationInput | KecamatanOrderByWithRelationInput[]
    cursor?: KecamatanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KecamatanScalarFieldEnum | KecamatanScalarFieldEnum[]
  }

  /**
   * Kabupaten.alamat
   */
  export type Kabupaten$alamatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    where?: AlamatWhereInput
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    cursor?: AlamatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlamatScalarFieldEnum | AlamatScalarFieldEnum[]
  }

  /**
   * Kabupaten without action
   */
  export type KabupatenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
  }


  /**
   * Model Kecamatan
   */

  export type AggregateKecamatan = {
    _count: KecamatanCountAggregateOutputType | null
    _min: KecamatanMinAggregateOutputType | null
    _max: KecamatanMaxAggregateOutputType | null
  }

  export type KecamatanMinAggregateOutputType = {
    kodeProv: string | null
    kodeKab: string | null
    kode: string | null
    nama: string | null
  }

  export type KecamatanMaxAggregateOutputType = {
    kodeProv: string | null
    kodeKab: string | null
    kode: string | null
    nama: string | null
  }

  export type KecamatanCountAggregateOutputType = {
    kodeProv: number
    kodeKab: number
    kode: number
    nama: number
    _all: number
  }


  export type KecamatanMinAggregateInputType = {
    kodeProv?: true
    kodeKab?: true
    kode?: true
    nama?: true
  }

  export type KecamatanMaxAggregateInputType = {
    kodeProv?: true
    kodeKab?: true
    kode?: true
    nama?: true
  }

  export type KecamatanCountAggregateInputType = {
    kodeProv?: true
    kodeKab?: true
    kode?: true
    nama?: true
    _all?: true
  }

  export type KecamatanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kecamatan to aggregate.
     */
    where?: KecamatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kecamatans to fetch.
     */
    orderBy?: KecamatanOrderByWithRelationInput | KecamatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: KecamatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kecamatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kecamatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Kecamatans
    **/
    _count?: true | KecamatanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KecamatanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KecamatanMaxAggregateInputType
  }

  export type GetKecamatanAggregateType<T extends KecamatanAggregateArgs> = {
        [P in keyof T & keyof AggregateKecamatan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKecamatan[P]>
      : GetScalarType<T[P], AggregateKecamatan[P]>
  }




  export type KecamatanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KecamatanWhereInput
    orderBy?: KecamatanOrderByWithAggregationInput | KecamatanOrderByWithAggregationInput[]
    by: KecamatanScalarFieldEnum[] | KecamatanScalarFieldEnum
    having?: KecamatanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KecamatanCountAggregateInputType | true
    _min?: KecamatanMinAggregateInputType
    _max?: KecamatanMaxAggregateInputType
  }

  export type KecamatanGroupByOutputType = {
    kodeProv: string
    kodeKab: string
    kode: string
    nama: string
    _count: KecamatanCountAggregateOutputType | null
    _min: KecamatanMinAggregateOutputType | null
    _max: KecamatanMaxAggregateOutputType | null
  }

  type GetKecamatanGroupByPayload<T extends KecamatanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KecamatanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KecamatanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KecamatanGroupByOutputType[P]>
            : GetScalarType<T[P], KecamatanGroupByOutputType[P]>
        }
      >
    >


  export type KecamatanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kodeProv?: boolean
    kodeKab?: boolean
    kode?: boolean
    nama?: boolean
    kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
    desa?: boolean | Kecamatan$desaArgs<ExtArgs>
    alamat?: boolean | Kecamatan$alamatArgs<ExtArgs>
    _count?: boolean | KecamatanCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kecamatan"]>

  export type KecamatanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kodeProv?: boolean
    kodeKab?: boolean
    kode?: boolean
    nama?: boolean
    kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kecamatan"]>

  export type KecamatanSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kodeProv?: boolean
    kodeKab?: boolean
    kode?: boolean
    nama?: boolean
    kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kecamatan"]>

  export type KecamatanSelectScalar = {
    kodeProv?: boolean
    kodeKab?: boolean
    kode?: boolean
    nama?: boolean
  }

  export type KecamatanOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"kodeProv" | "kodeKab" | "kode" | "nama", ExtArgs["result"]["kecamatan"]>
  export type KecamatanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
    desa?: boolean | Kecamatan$desaArgs<ExtArgs>
    alamat?: boolean | Kecamatan$alamatArgs<ExtArgs>
    _count?: boolean | KecamatanCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type KecamatanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
  }
  export type KecamatanIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
  }

  export type $KecamatanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Kecamatan"
    objects: {
      kabupaten: Prisma.$KabupatenPayload<ExtArgs>
      desa: Prisma.$DesaPayload<ExtArgs>[]
      alamat: Prisma.$AlamatPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      kodeProv: string
      kodeKab: string
      kode: string
      nama: string
    }, ExtArgs["result"]["kecamatan"]>
    composites: {}
  }

  type KecamatanGetPayload<S extends boolean | null | undefined | KecamatanDefaultArgs> = $Result.GetResult<Prisma.$KecamatanPayload, S>

  type KecamatanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<KecamatanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: KecamatanCountAggregateInputType | true
    }

  export interface KecamatanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Kecamatan'], meta: { name: 'Kecamatan' } }
    /**
     * Find zero or one Kecamatan that matches the filter.
     * @param {KecamatanFindUniqueArgs} args - Arguments to find a Kecamatan
     * @example
     * // Get one Kecamatan
     * const kecamatan = await prisma.kecamatan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends KecamatanFindUniqueArgs>(args: SelectSubset<T, KecamatanFindUniqueArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Kecamatan that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {KecamatanFindUniqueOrThrowArgs} args - Arguments to find a Kecamatan
     * @example
     * // Get one Kecamatan
     * const kecamatan = await prisma.kecamatan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends KecamatanFindUniqueOrThrowArgs>(args: SelectSubset<T, KecamatanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Kecamatan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanFindFirstArgs} args - Arguments to find a Kecamatan
     * @example
     * // Get one Kecamatan
     * const kecamatan = await prisma.kecamatan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends KecamatanFindFirstArgs>(args?: SelectSubset<T, KecamatanFindFirstArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Kecamatan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanFindFirstOrThrowArgs} args - Arguments to find a Kecamatan
     * @example
     * // Get one Kecamatan
     * const kecamatan = await prisma.kecamatan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends KecamatanFindFirstOrThrowArgs>(args?: SelectSubset<T, KecamatanFindFirstOrThrowArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Kecamatans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kecamatans
     * const kecamatans = await prisma.kecamatan.findMany()
     * 
     * // Get first 10 Kecamatans
     * const kecamatans = await prisma.kecamatan.findMany({ take: 10 })
     * 
     * // Only select the `kodeProv`
     * const kecamatanWithKodeProvOnly = await prisma.kecamatan.findMany({ select: { kodeProv: true } })
     * 
     */
    findMany<T extends KecamatanFindManyArgs>(args?: SelectSubset<T, KecamatanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Kecamatan.
     * @param {KecamatanCreateArgs} args - Arguments to create a Kecamatan.
     * @example
     * // Create one Kecamatan
     * const Kecamatan = await prisma.kecamatan.create({
     *   data: {
     *     // ... data to create a Kecamatan
     *   }
     * })
     * 
     */
    create<T extends KecamatanCreateArgs>(args: SelectSubset<T, KecamatanCreateArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Kecamatans.
     * @param {KecamatanCreateManyArgs} args - Arguments to create many Kecamatans.
     * @example
     * // Create many Kecamatans
     * const kecamatan = await prisma.kecamatan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends KecamatanCreateManyArgs>(args?: SelectSubset<T, KecamatanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Kecamatans and returns the data saved in the database.
     * @param {KecamatanCreateManyAndReturnArgs} args - Arguments to create many Kecamatans.
     * @example
     * // Create many Kecamatans
     * const kecamatan = await prisma.kecamatan.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Kecamatans and only return the `kodeProv`
     * const kecamatanWithKodeProvOnly = await prisma.kecamatan.createManyAndReturn({
     *   select: { kodeProv: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends KecamatanCreateManyAndReturnArgs>(args?: SelectSubset<T, KecamatanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Kecamatan.
     * @param {KecamatanDeleteArgs} args - Arguments to delete one Kecamatan.
     * @example
     * // Delete one Kecamatan
     * const Kecamatan = await prisma.kecamatan.delete({
     *   where: {
     *     // ... filter to delete one Kecamatan
     *   }
     * })
     * 
     */
    delete<T extends KecamatanDeleteArgs>(args: SelectSubset<T, KecamatanDeleteArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Kecamatan.
     * @param {KecamatanUpdateArgs} args - Arguments to update one Kecamatan.
     * @example
     * // Update one Kecamatan
     * const kecamatan = await prisma.kecamatan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends KecamatanUpdateArgs>(args: SelectSubset<T, KecamatanUpdateArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Kecamatans.
     * @param {KecamatanDeleteManyArgs} args - Arguments to filter Kecamatans to delete.
     * @example
     * // Delete a few Kecamatans
     * const { count } = await prisma.kecamatan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends KecamatanDeleteManyArgs>(args?: SelectSubset<T, KecamatanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kecamatans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kecamatans
     * const kecamatan = await prisma.kecamatan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends KecamatanUpdateManyArgs>(args: SelectSubset<T, KecamatanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kecamatans and returns the data updated in the database.
     * @param {KecamatanUpdateManyAndReturnArgs} args - Arguments to update many Kecamatans.
     * @example
     * // Update many Kecamatans
     * const kecamatan = await prisma.kecamatan.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Kecamatans and only return the `kodeProv`
     * const kecamatanWithKodeProvOnly = await prisma.kecamatan.updateManyAndReturn({
     *   select: { kodeProv: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends KecamatanUpdateManyAndReturnArgs>(args: SelectSubset<T, KecamatanUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Kecamatan.
     * @param {KecamatanUpsertArgs} args - Arguments to update or create a Kecamatan.
     * @example
     * // Update or create a Kecamatan
     * const kecamatan = await prisma.kecamatan.upsert({
     *   create: {
     *     // ... data to create a Kecamatan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kecamatan we want to update
     *   }
     * })
     */
    upsert<T extends KecamatanUpsertArgs>(args: SelectSubset<T, KecamatanUpsertArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Kecamatans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanCountArgs} args - Arguments to filter Kecamatans to count.
     * @example
     * // Count the number of Kecamatans
     * const count = await prisma.kecamatan.count({
     *   where: {
     *     // ... the filter for the Kecamatans we want to count
     *   }
     * })
    **/
    count<T extends KecamatanCountArgs>(
      args?: Subset<T, KecamatanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KecamatanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kecamatan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KecamatanAggregateArgs>(args: Subset<T, KecamatanAggregateArgs>): Prisma.PrismaPromise<GetKecamatanAggregateType<T>>

    /**
     * Group by Kecamatan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends KecamatanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: KecamatanGroupByArgs['orderBy'] }
        : { orderBy?: KecamatanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, KecamatanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKecamatanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Kecamatan model
   */
  readonly fields: KecamatanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Kecamatan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__KecamatanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kabupaten<T extends KabupatenDefaultArgs<ExtArgs> = {}>(args?: Subset<T, KabupatenDefaultArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    desa<T extends Kecamatan$desaArgs<ExtArgs> = {}>(args?: Subset<T, Kecamatan$desaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    alamat<T extends Kecamatan$alamatArgs<ExtArgs> = {}>(args?: Subset<T, Kecamatan$alamatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Kecamatan model
   */
  interface KecamatanFieldRefs {
    readonly kodeProv: FieldRef<"Kecamatan", 'String'>
    readonly kodeKab: FieldRef<"Kecamatan", 'String'>
    readonly kode: FieldRef<"Kecamatan", 'String'>
    readonly nama: FieldRef<"Kecamatan", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Kecamatan findUnique
   */
  export type KecamatanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * Filter, which Kecamatan to fetch.
     */
    where: KecamatanWhereUniqueInput
  }

  /**
   * Kecamatan findUniqueOrThrow
   */
  export type KecamatanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * Filter, which Kecamatan to fetch.
     */
    where: KecamatanWhereUniqueInput
  }

  /**
   * Kecamatan findFirst
   */
  export type KecamatanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * Filter, which Kecamatan to fetch.
     */
    where?: KecamatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kecamatans to fetch.
     */
    orderBy?: KecamatanOrderByWithRelationInput | KecamatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kecamatans.
     */
    cursor?: KecamatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kecamatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kecamatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kecamatans.
     */
    distinct?: KecamatanScalarFieldEnum | KecamatanScalarFieldEnum[]
  }

  /**
   * Kecamatan findFirstOrThrow
   */
  export type KecamatanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * Filter, which Kecamatan to fetch.
     */
    where?: KecamatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kecamatans to fetch.
     */
    orderBy?: KecamatanOrderByWithRelationInput | KecamatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kecamatans.
     */
    cursor?: KecamatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kecamatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kecamatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kecamatans.
     */
    distinct?: KecamatanScalarFieldEnum | KecamatanScalarFieldEnum[]
  }

  /**
   * Kecamatan findMany
   */
  export type KecamatanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * Filter, which Kecamatans to fetch.
     */
    where?: KecamatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kecamatans to fetch.
     */
    orderBy?: KecamatanOrderByWithRelationInput | KecamatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Kecamatans.
     */
    cursor?: KecamatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kecamatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kecamatans.
     */
    skip?: number
    distinct?: KecamatanScalarFieldEnum | KecamatanScalarFieldEnum[]
  }

  /**
   * Kecamatan create
   */
  export type KecamatanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * The data needed to create a Kecamatan.
     */
    data: XOR<KecamatanCreateInput, KecamatanUncheckedCreateInput>
  }

  /**
   * Kecamatan createMany
   */
  export type KecamatanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Kecamatans.
     */
    data: KecamatanCreateManyInput | KecamatanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Kecamatan createManyAndReturn
   */
  export type KecamatanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * The data used to create many Kecamatans.
     */
    data: KecamatanCreateManyInput | KecamatanCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Kecamatan update
   */
  export type KecamatanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * The data needed to update a Kecamatan.
     */
    data: XOR<KecamatanUpdateInput, KecamatanUncheckedUpdateInput>
    /**
     * Choose, which Kecamatan to update.
     */
    where: KecamatanWhereUniqueInput
  }

  /**
   * Kecamatan updateMany
   */
  export type KecamatanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Kecamatans.
     */
    data: XOR<KecamatanUpdateManyMutationInput, KecamatanUncheckedUpdateManyInput>
    /**
     * Filter which Kecamatans to update
     */
    where?: KecamatanWhereInput
    /**
     * Limit how many Kecamatans to update.
     */
    limit?: number
  }

  /**
   * Kecamatan updateManyAndReturn
   */
  export type KecamatanUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * The data used to update Kecamatans.
     */
    data: XOR<KecamatanUpdateManyMutationInput, KecamatanUncheckedUpdateManyInput>
    /**
     * Filter which Kecamatans to update
     */
    where?: KecamatanWhereInput
    /**
     * Limit how many Kecamatans to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Kecamatan upsert
   */
  export type KecamatanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * The filter to search for the Kecamatan to update in case it exists.
     */
    where: KecamatanWhereUniqueInput
    /**
     * In case the Kecamatan found by the `where` argument doesn't exist, create a new Kecamatan with this data.
     */
    create: XOR<KecamatanCreateInput, KecamatanUncheckedCreateInput>
    /**
     * In case the Kecamatan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<KecamatanUpdateInput, KecamatanUncheckedUpdateInput>
  }

  /**
   * Kecamatan delete
   */
  export type KecamatanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * Filter which Kecamatan to delete.
     */
    where: KecamatanWhereUniqueInput
  }

  /**
   * Kecamatan deleteMany
   */
  export type KecamatanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kecamatans to delete
     */
    where?: KecamatanWhereInput
    /**
     * Limit how many Kecamatans to delete.
     */
    limit?: number
  }

  /**
   * Kecamatan.desa
   */
  export type Kecamatan$desaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    where?: DesaWhereInput
    orderBy?: DesaOrderByWithRelationInput | DesaOrderByWithRelationInput[]
    cursor?: DesaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DesaScalarFieldEnum | DesaScalarFieldEnum[]
  }

  /**
   * Kecamatan.alamat
   */
  export type Kecamatan$alamatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    where?: AlamatWhereInput
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    cursor?: AlamatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlamatScalarFieldEnum | AlamatScalarFieldEnum[]
  }

  /**
   * Kecamatan without action
   */
  export type KecamatanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
  }


  /**
   * Model Desa
   */

  export type AggregateDesa = {
    _count: DesaCountAggregateOutputType | null
    _min: DesaMinAggregateOutputType | null
    _max: DesaMaxAggregateOutputType | null
  }

  export type DesaMinAggregateOutputType = {
    kodeProv: string | null
    kodeKab: string | null
    kodeKec: string | null
    kode: string | null
    nama: string | null
  }

  export type DesaMaxAggregateOutputType = {
    kodeProv: string | null
    kodeKab: string | null
    kodeKec: string | null
    kode: string | null
    nama: string | null
  }

  export type DesaCountAggregateOutputType = {
    kodeProv: number
    kodeKab: number
    kodeKec: number
    kode: number
    nama: number
    _all: number
  }


  export type DesaMinAggregateInputType = {
    kodeProv?: true
    kodeKab?: true
    kodeKec?: true
    kode?: true
    nama?: true
  }

  export type DesaMaxAggregateInputType = {
    kodeProv?: true
    kodeKab?: true
    kodeKec?: true
    kode?: true
    nama?: true
  }

  export type DesaCountAggregateInputType = {
    kodeProv?: true
    kodeKab?: true
    kodeKec?: true
    kode?: true
    nama?: true
    _all?: true
  }

  export type DesaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Desa to aggregate.
     */
    where?: DesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Desas to fetch.
     */
    orderBy?: DesaOrderByWithRelationInput | DesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Desas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Desas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Desas
    **/
    _count?: true | DesaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DesaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DesaMaxAggregateInputType
  }

  export type GetDesaAggregateType<T extends DesaAggregateArgs> = {
        [P in keyof T & keyof AggregateDesa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDesa[P]>
      : GetScalarType<T[P], AggregateDesa[P]>
  }




  export type DesaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DesaWhereInput
    orderBy?: DesaOrderByWithAggregationInput | DesaOrderByWithAggregationInput[]
    by: DesaScalarFieldEnum[] | DesaScalarFieldEnum
    having?: DesaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DesaCountAggregateInputType | true
    _min?: DesaMinAggregateInputType
    _max?: DesaMaxAggregateInputType
  }

  export type DesaGroupByOutputType = {
    kodeProv: string
    kodeKab: string
    kodeKec: string
    kode: string
    nama: string
    _count: DesaCountAggregateOutputType | null
    _min: DesaMinAggregateOutputType | null
    _max: DesaMaxAggregateOutputType | null
  }

  type GetDesaGroupByPayload<T extends DesaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DesaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DesaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DesaGroupByOutputType[P]>
            : GetScalarType<T[P], DesaGroupByOutputType[P]>
        }
      >
    >


  export type DesaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kodeProv?: boolean
    kodeKab?: boolean
    kodeKec?: boolean
    kode?: boolean
    nama?: boolean
    kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
    alamat?: boolean | Desa$alamatArgs<ExtArgs>
    _count?: boolean | DesaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["desa"]>

  export type DesaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kodeProv?: boolean
    kodeKab?: boolean
    kodeKec?: boolean
    kode?: boolean
    nama?: boolean
    kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["desa"]>

  export type DesaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    kodeProv?: boolean
    kodeKab?: boolean
    kodeKec?: boolean
    kode?: boolean
    nama?: boolean
    kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["desa"]>

  export type DesaSelectScalar = {
    kodeProv?: boolean
    kodeKab?: boolean
    kodeKec?: boolean
    kode?: boolean
    nama?: boolean
  }

  export type DesaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"kodeProv" | "kodeKab" | "kodeKec" | "kode" | "nama", ExtArgs["result"]["desa"]>
  export type DesaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
    alamat?: boolean | Desa$alamatArgs<ExtArgs>
    _count?: boolean | DesaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DesaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
  }
  export type DesaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
  }

  export type $DesaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Desa"
    objects: {
      kecamatan: Prisma.$KecamatanPayload<ExtArgs>
      alamat: Prisma.$AlamatPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      kodeProv: string
      kodeKab: string
      kodeKec: string
      kode: string
      nama: string
    }, ExtArgs["result"]["desa"]>
    composites: {}
  }

  type DesaGetPayload<S extends boolean | null | undefined | DesaDefaultArgs> = $Result.GetResult<Prisma.$DesaPayload, S>

  type DesaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DesaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DesaCountAggregateInputType | true
    }

  export interface DesaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Desa'], meta: { name: 'Desa' } }
    /**
     * Find zero or one Desa that matches the filter.
     * @param {DesaFindUniqueArgs} args - Arguments to find a Desa
     * @example
     * // Get one Desa
     * const desa = await prisma.desa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DesaFindUniqueArgs>(args: SelectSubset<T, DesaFindUniqueArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Desa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DesaFindUniqueOrThrowArgs} args - Arguments to find a Desa
     * @example
     * // Get one Desa
     * const desa = await prisma.desa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DesaFindUniqueOrThrowArgs>(args: SelectSubset<T, DesaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Desa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaFindFirstArgs} args - Arguments to find a Desa
     * @example
     * // Get one Desa
     * const desa = await prisma.desa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DesaFindFirstArgs>(args?: SelectSubset<T, DesaFindFirstArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Desa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaFindFirstOrThrowArgs} args - Arguments to find a Desa
     * @example
     * // Get one Desa
     * const desa = await prisma.desa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DesaFindFirstOrThrowArgs>(args?: SelectSubset<T, DesaFindFirstOrThrowArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Desas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Desas
     * const desas = await prisma.desa.findMany()
     * 
     * // Get first 10 Desas
     * const desas = await prisma.desa.findMany({ take: 10 })
     * 
     * // Only select the `kodeProv`
     * const desaWithKodeProvOnly = await prisma.desa.findMany({ select: { kodeProv: true } })
     * 
     */
    findMany<T extends DesaFindManyArgs>(args?: SelectSubset<T, DesaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Desa.
     * @param {DesaCreateArgs} args - Arguments to create a Desa.
     * @example
     * // Create one Desa
     * const Desa = await prisma.desa.create({
     *   data: {
     *     // ... data to create a Desa
     *   }
     * })
     * 
     */
    create<T extends DesaCreateArgs>(args: SelectSubset<T, DesaCreateArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Desas.
     * @param {DesaCreateManyArgs} args - Arguments to create many Desas.
     * @example
     * // Create many Desas
     * const desa = await prisma.desa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DesaCreateManyArgs>(args?: SelectSubset<T, DesaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Desas and returns the data saved in the database.
     * @param {DesaCreateManyAndReturnArgs} args - Arguments to create many Desas.
     * @example
     * // Create many Desas
     * const desa = await prisma.desa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Desas and only return the `kodeProv`
     * const desaWithKodeProvOnly = await prisma.desa.createManyAndReturn({
     *   select: { kodeProv: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DesaCreateManyAndReturnArgs>(args?: SelectSubset<T, DesaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Desa.
     * @param {DesaDeleteArgs} args - Arguments to delete one Desa.
     * @example
     * // Delete one Desa
     * const Desa = await prisma.desa.delete({
     *   where: {
     *     // ... filter to delete one Desa
     *   }
     * })
     * 
     */
    delete<T extends DesaDeleteArgs>(args: SelectSubset<T, DesaDeleteArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Desa.
     * @param {DesaUpdateArgs} args - Arguments to update one Desa.
     * @example
     * // Update one Desa
     * const desa = await prisma.desa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DesaUpdateArgs>(args: SelectSubset<T, DesaUpdateArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Desas.
     * @param {DesaDeleteManyArgs} args - Arguments to filter Desas to delete.
     * @example
     * // Delete a few Desas
     * const { count } = await prisma.desa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DesaDeleteManyArgs>(args?: SelectSubset<T, DesaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Desas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Desas
     * const desa = await prisma.desa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DesaUpdateManyArgs>(args: SelectSubset<T, DesaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Desas and returns the data updated in the database.
     * @param {DesaUpdateManyAndReturnArgs} args - Arguments to update many Desas.
     * @example
     * // Update many Desas
     * const desa = await prisma.desa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Desas and only return the `kodeProv`
     * const desaWithKodeProvOnly = await prisma.desa.updateManyAndReturn({
     *   select: { kodeProv: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DesaUpdateManyAndReturnArgs>(args: SelectSubset<T, DesaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Desa.
     * @param {DesaUpsertArgs} args - Arguments to update or create a Desa.
     * @example
     * // Update or create a Desa
     * const desa = await prisma.desa.upsert({
     *   create: {
     *     // ... data to create a Desa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Desa we want to update
     *   }
     * })
     */
    upsert<T extends DesaUpsertArgs>(args: SelectSubset<T, DesaUpsertArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Desas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaCountArgs} args - Arguments to filter Desas to count.
     * @example
     * // Count the number of Desas
     * const count = await prisma.desa.count({
     *   where: {
     *     // ... the filter for the Desas we want to count
     *   }
     * })
    **/
    count<T extends DesaCountArgs>(
      args?: Subset<T, DesaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DesaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Desa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DesaAggregateArgs>(args: Subset<T, DesaAggregateArgs>): Prisma.PrismaPromise<GetDesaAggregateType<T>>

    /**
     * Group by Desa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DesaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DesaGroupByArgs['orderBy'] }
        : { orderBy?: DesaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DesaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDesaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Desa model
   */
  readonly fields: DesaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Desa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DesaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kecamatan<T extends KecamatanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, KecamatanDefaultArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    alamat<T extends Desa$alamatArgs<ExtArgs> = {}>(args?: Subset<T, Desa$alamatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Desa model
   */
  interface DesaFieldRefs {
    readonly kodeProv: FieldRef<"Desa", 'String'>
    readonly kodeKab: FieldRef<"Desa", 'String'>
    readonly kodeKec: FieldRef<"Desa", 'String'>
    readonly kode: FieldRef<"Desa", 'String'>
    readonly nama: FieldRef<"Desa", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Desa findUnique
   */
  export type DesaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * Filter, which Desa to fetch.
     */
    where: DesaWhereUniqueInput
  }

  /**
   * Desa findUniqueOrThrow
   */
  export type DesaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * Filter, which Desa to fetch.
     */
    where: DesaWhereUniqueInput
  }

  /**
   * Desa findFirst
   */
  export type DesaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * Filter, which Desa to fetch.
     */
    where?: DesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Desas to fetch.
     */
    orderBy?: DesaOrderByWithRelationInput | DesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Desas.
     */
    cursor?: DesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Desas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Desas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Desas.
     */
    distinct?: DesaScalarFieldEnum | DesaScalarFieldEnum[]
  }

  /**
   * Desa findFirstOrThrow
   */
  export type DesaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * Filter, which Desa to fetch.
     */
    where?: DesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Desas to fetch.
     */
    orderBy?: DesaOrderByWithRelationInput | DesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Desas.
     */
    cursor?: DesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Desas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Desas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Desas.
     */
    distinct?: DesaScalarFieldEnum | DesaScalarFieldEnum[]
  }

  /**
   * Desa findMany
   */
  export type DesaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * Filter, which Desas to fetch.
     */
    where?: DesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Desas to fetch.
     */
    orderBy?: DesaOrderByWithRelationInput | DesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Desas.
     */
    cursor?: DesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Desas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Desas.
     */
    skip?: number
    distinct?: DesaScalarFieldEnum | DesaScalarFieldEnum[]
  }

  /**
   * Desa create
   */
  export type DesaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * The data needed to create a Desa.
     */
    data: XOR<DesaCreateInput, DesaUncheckedCreateInput>
  }

  /**
   * Desa createMany
   */
  export type DesaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Desas.
     */
    data: DesaCreateManyInput | DesaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Desa createManyAndReturn
   */
  export type DesaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * The data used to create many Desas.
     */
    data: DesaCreateManyInput | DesaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Desa update
   */
  export type DesaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * The data needed to update a Desa.
     */
    data: XOR<DesaUpdateInput, DesaUncheckedUpdateInput>
    /**
     * Choose, which Desa to update.
     */
    where: DesaWhereUniqueInput
  }

  /**
   * Desa updateMany
   */
  export type DesaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Desas.
     */
    data: XOR<DesaUpdateManyMutationInput, DesaUncheckedUpdateManyInput>
    /**
     * Filter which Desas to update
     */
    where?: DesaWhereInput
    /**
     * Limit how many Desas to update.
     */
    limit?: number
  }

  /**
   * Desa updateManyAndReturn
   */
  export type DesaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * The data used to update Desas.
     */
    data: XOR<DesaUpdateManyMutationInput, DesaUncheckedUpdateManyInput>
    /**
     * Filter which Desas to update
     */
    where?: DesaWhereInput
    /**
     * Limit how many Desas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Desa upsert
   */
  export type DesaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * The filter to search for the Desa to update in case it exists.
     */
    where: DesaWhereUniqueInput
    /**
     * In case the Desa found by the `where` argument doesn't exist, create a new Desa with this data.
     */
    create: XOR<DesaCreateInput, DesaUncheckedCreateInput>
    /**
     * In case the Desa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DesaUpdateInput, DesaUncheckedUpdateInput>
  }

  /**
   * Desa delete
   */
  export type DesaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * Filter which Desa to delete.
     */
    where: DesaWhereUniqueInput
  }

  /**
   * Desa deleteMany
   */
  export type DesaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Desas to delete
     */
    where?: DesaWhereInput
    /**
     * Limit how many Desas to delete.
     */
    limit?: number
  }

  /**
   * Desa.alamat
   */
  export type Desa$alamatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    where?: AlamatWhereInput
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    cursor?: AlamatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlamatScalarFieldEnum | AlamatScalarFieldEnum[]
  }

  /**
   * Desa without action
   */
  export type DesaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsersScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    firstName: 'firstName',
    lastName: 'lastName',
    gender: 'gender',
    role: 'role',
    telp: 'telp',
    buka_toko: 'buka_toko',
    nama_toko: 'nama_toko',
    klasifikasi_toko: 'klasifikasi_toko',
    rating_toko: 'rating_toko',
    time_pengajuan: 'time_pengajuan',
    time_terima: 'time_terima',
    status_pengajuan: 'status_pengajuan',
    acc_by: 'acc_by',
    path_file: 'path_file',
    tanggal_lahir: 'tanggal_lahir',
    ktp_path: 'ktp_path'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    nama: 'nama',
    desc: 'desc',
    path: 'path'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const VariasiScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    nama: 'nama',
    harga: 'harga',
    path: 'path',
    stok: 'stok'
  };

  export type VariasiScalarFieldEnum = (typeof VariasiScalarFieldEnum)[keyof typeof VariasiScalarFieldEnum]


  export const TransaksiScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    productId: 'productId',
    status: 'status'
  };

  export type TransaksiScalarFieldEnum = (typeof TransaksiScalarFieldEnum)[keyof typeof TransaksiScalarFieldEnum]


  export const ReviewScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    productId: 'productId',
    review: 'review',
    rating: 'rating',
    time: 'time'
  };

  export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


  export const CartScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    productId: 'productId',
    variasiId: 'variasiId',
    quantity: 'quantity',
    time: 'time'
  };

  export type CartScalarFieldEnum = (typeof CartScalarFieldEnum)[keyof typeof CartScalarFieldEnum]


  export const AlamatScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    kodeProv: 'kodeProv',
    kodeKab: 'kodeKab',
    kodeKec: 'kodeKec',
    kodeDesa: 'kodeDesa',
    kodePos: 'kodePos',
    detail: 'detail',
    catatan: 'catatan',
    is_toko: 'is_toko',
    is_default: 'is_default'
  };

  export type AlamatScalarFieldEnum = (typeof AlamatScalarFieldEnum)[keyof typeof AlamatScalarFieldEnum]


  export const ProvinsiScalarFieldEnum: {
    kode: 'kode',
    nama: 'nama'
  };

  export type ProvinsiScalarFieldEnum = (typeof ProvinsiScalarFieldEnum)[keyof typeof ProvinsiScalarFieldEnum]


  export const KabupatenScalarFieldEnum: {
    kodeProv: 'kodeProv',
    kode: 'kode',
    nama: 'nama'
  };

  export type KabupatenScalarFieldEnum = (typeof KabupatenScalarFieldEnum)[keyof typeof KabupatenScalarFieldEnum]


  export const KecamatanScalarFieldEnum: {
    kodeProv: 'kodeProv',
    kodeKab: 'kodeKab',
    kode: 'kode',
    nama: 'nama'
  };

  export type KecamatanScalarFieldEnum = (typeof KecamatanScalarFieldEnum)[keyof typeof KecamatanScalarFieldEnum]


  export const DesaScalarFieldEnum: {
    kodeProv: 'kodeProv',
    kodeKab: 'kodeKab',
    kodeKec: 'kodeKec',
    kode: 'kode',
    nama: 'nama'
  };

  export type DesaScalarFieldEnum = (typeof DesaScalarFieldEnum)[keyof typeof DesaScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    
  /**
   * Deep Input Types
   */


  export type UsersWhereInput = {
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    id?: IntFilter<"Users"> | number
    email?: StringFilter<"Users"> | string
    password?: StringFilter<"Users"> | string
    firstName?: StringFilter<"Users"> | string
    lastName?: StringFilter<"Users"> | string
    gender?: IntFilter<"Users"> | number
    role?: IntFilter<"Users"> | number
    telp?: StringFilter<"Users"> | string
    buka_toko?: IntFilter<"Users"> | number
    nama_toko?: StringFilter<"Users"> | string
    klasifikasi_toko?: IntFilter<"Users"> | number
    rating_toko?: FloatFilter<"Users"> | number
    time_pengajuan?: DateTimeNullableFilter<"Users"> | Date | string | null
    time_terima?: DateTimeNullableFilter<"Users"> | Date | string | null
    status_pengajuan?: IntFilter<"Users"> | number
    acc_by?: IntNullableFilter<"Users"> | number | null
    path_file?: StringFilter<"Users"> | string
    tanggal_lahir?: DateTimeNullableFilter<"Users"> | Date | string | null
    ktp_path?: StringNullableFilter<"Users"> | string | null
    alamat?: AlamatListRelationFilter
    product?: ProductListRelationFilter
    transaksi?: TransaksiListRelationFilter
    review?: ReviewListRelationFilter
    cart?: CartListRelationFilter
  }

  export type UsersOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    gender?: SortOrder
    role?: SortOrder
    telp?: SortOrder
    buka_toko?: SortOrder
    nama_toko?: SortOrder
    klasifikasi_toko?: SortOrder
    rating_toko?: SortOrder
    time_pengajuan?: SortOrderInput | SortOrder
    time_terima?: SortOrderInput | SortOrder
    status_pengajuan?: SortOrder
    acc_by?: SortOrderInput | SortOrder
    path_file?: SortOrder
    tanggal_lahir?: SortOrderInput | SortOrder
    ktp_path?: SortOrderInput | SortOrder
    alamat?: AlamatOrderByRelationAggregateInput
    product?: ProductOrderByRelationAggregateInput
    transaksi?: TransaksiOrderByRelationAggregateInput
    review?: ReviewOrderByRelationAggregateInput
    cart?: CartOrderByRelationAggregateInput
  }

  export type UsersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    password?: StringFilter<"Users"> | string
    firstName?: StringFilter<"Users"> | string
    lastName?: StringFilter<"Users"> | string
    gender?: IntFilter<"Users"> | number
    role?: IntFilter<"Users"> | number
    telp?: StringFilter<"Users"> | string
    buka_toko?: IntFilter<"Users"> | number
    nama_toko?: StringFilter<"Users"> | string
    klasifikasi_toko?: IntFilter<"Users"> | number
    rating_toko?: FloatFilter<"Users"> | number
    time_pengajuan?: DateTimeNullableFilter<"Users"> | Date | string | null
    time_terima?: DateTimeNullableFilter<"Users"> | Date | string | null
    status_pengajuan?: IntFilter<"Users"> | number
    acc_by?: IntNullableFilter<"Users"> | number | null
    path_file?: StringFilter<"Users"> | string
    tanggal_lahir?: DateTimeNullableFilter<"Users"> | Date | string | null
    ktp_path?: StringNullableFilter<"Users"> | string | null
    alamat?: AlamatListRelationFilter
    product?: ProductListRelationFilter
    transaksi?: TransaksiListRelationFilter
    review?: ReviewListRelationFilter
    cart?: CartListRelationFilter
  }, "id" | "email">

  export type UsersOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    gender?: SortOrder
    role?: SortOrder
    telp?: SortOrder
    buka_toko?: SortOrder
    nama_toko?: SortOrder
    klasifikasi_toko?: SortOrder
    rating_toko?: SortOrder
    time_pengajuan?: SortOrderInput | SortOrder
    time_terima?: SortOrderInput | SortOrder
    status_pengajuan?: SortOrder
    acc_by?: SortOrderInput | SortOrder
    path_file?: SortOrder
    tanggal_lahir?: SortOrderInput | SortOrder
    ktp_path?: SortOrderInput | SortOrder
    _count?: UsersCountOrderByAggregateInput
    _avg?: UsersAvgOrderByAggregateInput
    _max?: UsersMaxOrderByAggregateInput
    _min?: UsersMinOrderByAggregateInput
    _sum?: UsersSumOrderByAggregateInput
  }

  export type UsersScalarWhereWithAggregatesInput = {
    AND?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    OR?: UsersScalarWhereWithAggregatesInput[]
    NOT?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Users"> | number
    email?: StringWithAggregatesFilter<"Users"> | string
    password?: StringWithAggregatesFilter<"Users"> | string
    firstName?: StringWithAggregatesFilter<"Users"> | string
    lastName?: StringWithAggregatesFilter<"Users"> | string
    gender?: IntWithAggregatesFilter<"Users"> | number
    role?: IntWithAggregatesFilter<"Users"> | number
    telp?: StringWithAggregatesFilter<"Users"> | string
    buka_toko?: IntWithAggregatesFilter<"Users"> | number
    nama_toko?: StringWithAggregatesFilter<"Users"> | string
    klasifikasi_toko?: IntWithAggregatesFilter<"Users"> | number
    rating_toko?: FloatWithAggregatesFilter<"Users"> | number
    time_pengajuan?: DateTimeNullableWithAggregatesFilter<"Users"> | Date | string | null
    time_terima?: DateTimeNullableWithAggregatesFilter<"Users"> | Date | string | null
    status_pengajuan?: IntWithAggregatesFilter<"Users"> | number
    acc_by?: IntNullableWithAggregatesFilter<"Users"> | number | null
    path_file?: StringWithAggregatesFilter<"Users"> | string
    tanggal_lahir?: DateTimeNullableWithAggregatesFilter<"Users"> | Date | string | null
    ktp_path?: StringNullableWithAggregatesFilter<"Users"> | string | null
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: IntFilter<"Product"> | number
    userId?: IntFilter<"Product"> | number
    nama?: StringFilter<"Product"> | string
    desc?: StringFilter<"Product"> | string
    path?: StringFilter<"Product"> | string
    user?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    transaksi?: TransaksiListRelationFilter
    review?: ReviewListRelationFilter
    cart?: CartListRelationFilter
    variasi?: VariasiListRelationFilter
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    nama?: SortOrder
    desc?: SortOrder
    path?: SortOrder
    user?: UsersOrderByWithRelationInput
    transaksi?: TransaksiOrderByRelationAggregateInput
    review?: ReviewOrderByRelationAggregateInput
    cart?: CartOrderByRelationAggregateInput
    variasi?: VariasiOrderByRelationAggregateInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    userId?: IntFilter<"Product"> | number
    nama?: StringFilter<"Product"> | string
    desc?: StringFilter<"Product"> | string
    path?: StringFilter<"Product"> | string
    user?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    transaksi?: TransaksiListRelationFilter
    review?: ReviewListRelationFilter
    cart?: CartListRelationFilter
    variasi?: VariasiListRelationFilter
  }, "id">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    nama?: SortOrder
    desc?: SortOrder
    path?: SortOrder
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Product"> | number
    userId?: IntWithAggregatesFilter<"Product"> | number
    nama?: StringWithAggregatesFilter<"Product"> | string
    desc?: StringWithAggregatesFilter<"Product"> | string
    path?: StringWithAggregatesFilter<"Product"> | string
  }

  export type VariasiWhereInput = {
    AND?: VariasiWhereInput | VariasiWhereInput[]
    OR?: VariasiWhereInput[]
    NOT?: VariasiWhereInput | VariasiWhereInput[]
    id?: IntFilter<"Variasi"> | number
    productId?: IntFilter<"Variasi"> | number
    nama?: StringFilter<"Variasi"> | string
    harga?: IntFilter<"Variasi"> | number
    path?: StringFilter<"Variasi"> | string
    stok?: IntFilter<"Variasi"> | number
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    cart?: CartListRelationFilter
  }

  export type VariasiOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    nama?: SortOrder
    harga?: SortOrder
    path?: SortOrder
    stok?: SortOrder
    product?: ProductOrderByWithRelationInput
    cart?: CartOrderByRelationAggregateInput
  }

  export type VariasiWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VariasiWhereInput | VariasiWhereInput[]
    OR?: VariasiWhereInput[]
    NOT?: VariasiWhereInput | VariasiWhereInput[]
    productId?: IntFilter<"Variasi"> | number
    nama?: StringFilter<"Variasi"> | string
    harga?: IntFilter<"Variasi"> | number
    path?: StringFilter<"Variasi"> | string
    stok?: IntFilter<"Variasi"> | number
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    cart?: CartListRelationFilter
  }, "id">

  export type VariasiOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    nama?: SortOrder
    harga?: SortOrder
    path?: SortOrder
    stok?: SortOrder
    _count?: VariasiCountOrderByAggregateInput
    _avg?: VariasiAvgOrderByAggregateInput
    _max?: VariasiMaxOrderByAggregateInput
    _min?: VariasiMinOrderByAggregateInput
    _sum?: VariasiSumOrderByAggregateInput
  }

  export type VariasiScalarWhereWithAggregatesInput = {
    AND?: VariasiScalarWhereWithAggregatesInput | VariasiScalarWhereWithAggregatesInput[]
    OR?: VariasiScalarWhereWithAggregatesInput[]
    NOT?: VariasiScalarWhereWithAggregatesInput | VariasiScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Variasi"> | number
    productId?: IntWithAggregatesFilter<"Variasi"> | number
    nama?: StringWithAggregatesFilter<"Variasi"> | string
    harga?: IntWithAggregatesFilter<"Variasi"> | number
    path?: StringWithAggregatesFilter<"Variasi"> | string
    stok?: IntWithAggregatesFilter<"Variasi"> | number
  }

  export type TransaksiWhereInput = {
    AND?: TransaksiWhereInput | TransaksiWhereInput[]
    OR?: TransaksiWhereInput[]
    NOT?: TransaksiWhereInput | TransaksiWhereInput[]
    id?: IntFilter<"Transaksi"> | number
    userId?: IntFilter<"Transaksi"> | number
    productId?: IntFilter<"Transaksi"> | number
    status?: IntFilter<"Transaksi"> | number
    user?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type TransaksiOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    status?: SortOrder
    user?: UsersOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
  }

  export type TransaksiWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TransaksiWhereInput | TransaksiWhereInput[]
    OR?: TransaksiWhereInput[]
    NOT?: TransaksiWhereInput | TransaksiWhereInput[]
    userId?: IntFilter<"Transaksi"> | number
    productId?: IntFilter<"Transaksi"> | number
    status?: IntFilter<"Transaksi"> | number
    user?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id">

  export type TransaksiOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    status?: SortOrder
    _count?: TransaksiCountOrderByAggregateInput
    _avg?: TransaksiAvgOrderByAggregateInput
    _max?: TransaksiMaxOrderByAggregateInput
    _min?: TransaksiMinOrderByAggregateInput
    _sum?: TransaksiSumOrderByAggregateInput
  }

  export type TransaksiScalarWhereWithAggregatesInput = {
    AND?: TransaksiScalarWhereWithAggregatesInput | TransaksiScalarWhereWithAggregatesInput[]
    OR?: TransaksiScalarWhereWithAggregatesInput[]
    NOT?: TransaksiScalarWhereWithAggregatesInput | TransaksiScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Transaksi"> | number
    userId?: IntWithAggregatesFilter<"Transaksi"> | number
    productId?: IntWithAggregatesFilter<"Transaksi"> | number
    status?: IntWithAggregatesFilter<"Transaksi"> | number
  }

  export type ReviewWhereInput = {
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    id?: IntFilter<"Review"> | number
    userId?: IntFilter<"Review"> | number
    productId?: IntFilter<"Review"> | number
    review?: StringFilter<"Review"> | string
    rating?: FloatFilter<"Review"> | number
    time?: DateTimeNullableFilter<"Review"> | Date | string | null
    user?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type ReviewOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    review?: SortOrder
    rating?: SortOrder
    time?: SortOrderInput | SortOrder
    user?: UsersOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
  }

  export type ReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    userId?: IntFilter<"Review"> | number
    productId?: IntFilter<"Review"> | number
    review?: StringFilter<"Review"> | string
    rating?: FloatFilter<"Review"> | number
    time?: DateTimeNullableFilter<"Review"> | Date | string | null
    user?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id">

  export type ReviewOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    review?: SortOrder
    rating?: SortOrder
    time?: SortOrderInput | SortOrder
    _count?: ReviewCountOrderByAggregateInput
    _avg?: ReviewAvgOrderByAggregateInput
    _max?: ReviewMaxOrderByAggregateInput
    _min?: ReviewMinOrderByAggregateInput
    _sum?: ReviewSumOrderByAggregateInput
  }

  export type ReviewScalarWhereWithAggregatesInput = {
    AND?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    OR?: ReviewScalarWhereWithAggregatesInput[]
    NOT?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Review"> | number
    userId?: IntWithAggregatesFilter<"Review"> | number
    productId?: IntWithAggregatesFilter<"Review"> | number
    review?: StringWithAggregatesFilter<"Review"> | string
    rating?: FloatWithAggregatesFilter<"Review"> | number
    time?: DateTimeNullableWithAggregatesFilter<"Review"> | Date | string | null
  }

  export type CartWhereInput = {
    AND?: CartWhereInput | CartWhereInput[]
    OR?: CartWhereInput[]
    NOT?: CartWhereInput | CartWhereInput[]
    id?: IntFilter<"Cart"> | number
    userId?: IntFilter<"Cart"> | number
    productId?: IntFilter<"Cart"> | number
    variasiId?: IntFilter<"Cart"> | number
    quantity?: IntFilter<"Cart"> | number
    time?: DateTimeFilter<"Cart"> | Date | string
    user?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variasi?: XOR<VariasiScalarRelationFilter, VariasiWhereInput>
  }

  export type CartOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    variasiId?: SortOrder
    quantity?: SortOrder
    time?: SortOrder
    user?: UsersOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
    variasi?: VariasiOrderByWithRelationInput
  }

  export type CartWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CartWhereInput | CartWhereInput[]
    OR?: CartWhereInput[]
    NOT?: CartWhereInput | CartWhereInput[]
    userId?: IntFilter<"Cart"> | number
    productId?: IntFilter<"Cart"> | number
    variasiId?: IntFilter<"Cart"> | number
    quantity?: IntFilter<"Cart"> | number
    time?: DateTimeFilter<"Cart"> | Date | string
    user?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variasi?: XOR<VariasiScalarRelationFilter, VariasiWhereInput>
  }, "id">

  export type CartOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    variasiId?: SortOrder
    quantity?: SortOrder
    time?: SortOrder
    _count?: CartCountOrderByAggregateInput
    _avg?: CartAvgOrderByAggregateInput
    _max?: CartMaxOrderByAggregateInput
    _min?: CartMinOrderByAggregateInput
    _sum?: CartSumOrderByAggregateInput
  }

  export type CartScalarWhereWithAggregatesInput = {
    AND?: CartScalarWhereWithAggregatesInput | CartScalarWhereWithAggregatesInput[]
    OR?: CartScalarWhereWithAggregatesInput[]
    NOT?: CartScalarWhereWithAggregatesInput | CartScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Cart"> | number
    userId?: IntWithAggregatesFilter<"Cart"> | number
    productId?: IntWithAggregatesFilter<"Cart"> | number
    variasiId?: IntWithAggregatesFilter<"Cart"> | number
    quantity?: IntWithAggregatesFilter<"Cart"> | number
    time?: DateTimeWithAggregatesFilter<"Cart"> | Date | string
  }

  export type AlamatWhereInput = {
    AND?: AlamatWhereInput | AlamatWhereInput[]
    OR?: AlamatWhereInput[]
    NOT?: AlamatWhereInput | AlamatWhereInput[]
    id?: IntFilter<"Alamat"> | number
    userId?: IntFilter<"Alamat"> | number
    kodeProv?: StringFilter<"Alamat"> | string
    kodeKab?: StringFilter<"Alamat"> | string
    kodeKec?: StringFilter<"Alamat"> | string
    kodeDesa?: StringFilter<"Alamat"> | string
    kodePos?: StringFilter<"Alamat"> | string
    detail?: StringFilter<"Alamat"> | string
    catatan?: StringFilter<"Alamat"> | string
    is_toko?: IntFilter<"Alamat"> | number
    is_default?: IntFilter<"Alamat"> | number
    users?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    provinsi?: XOR<ProvinsiScalarRelationFilter, ProvinsiWhereInput>
    kabupaten?: XOR<KabupatenScalarRelationFilter, KabupatenWhereInput>
    kecamatan?: XOR<KecamatanScalarRelationFilter, KecamatanWhereInput>
    desa?: XOR<DesaScalarRelationFilter, DesaWhereInput>
  }

  export type AlamatOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kodeKec?: SortOrder
    kodeDesa?: SortOrder
    kodePos?: SortOrder
    detail?: SortOrder
    catatan?: SortOrder
    is_toko?: SortOrder
    is_default?: SortOrder
    users?: UsersOrderByWithRelationInput
    provinsi?: ProvinsiOrderByWithRelationInput
    kabupaten?: KabupatenOrderByWithRelationInput
    kecamatan?: KecamatanOrderByWithRelationInput
    desa?: DesaOrderByWithRelationInput
  }

  export type AlamatWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AlamatWhereInput | AlamatWhereInput[]
    OR?: AlamatWhereInput[]
    NOT?: AlamatWhereInput | AlamatWhereInput[]
    userId?: IntFilter<"Alamat"> | number
    kodeProv?: StringFilter<"Alamat"> | string
    kodeKab?: StringFilter<"Alamat"> | string
    kodeKec?: StringFilter<"Alamat"> | string
    kodeDesa?: StringFilter<"Alamat"> | string
    kodePos?: StringFilter<"Alamat"> | string
    detail?: StringFilter<"Alamat"> | string
    catatan?: StringFilter<"Alamat"> | string
    is_toko?: IntFilter<"Alamat"> | number
    is_default?: IntFilter<"Alamat"> | number
    users?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    provinsi?: XOR<ProvinsiScalarRelationFilter, ProvinsiWhereInput>
    kabupaten?: XOR<KabupatenScalarRelationFilter, KabupatenWhereInput>
    kecamatan?: XOR<KecamatanScalarRelationFilter, KecamatanWhereInput>
    desa?: XOR<DesaScalarRelationFilter, DesaWhereInput>
  }, "id">

  export type AlamatOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kodeKec?: SortOrder
    kodeDesa?: SortOrder
    kodePos?: SortOrder
    detail?: SortOrder
    catatan?: SortOrder
    is_toko?: SortOrder
    is_default?: SortOrder
    _count?: AlamatCountOrderByAggregateInput
    _avg?: AlamatAvgOrderByAggregateInput
    _max?: AlamatMaxOrderByAggregateInput
    _min?: AlamatMinOrderByAggregateInput
    _sum?: AlamatSumOrderByAggregateInput
  }

  export type AlamatScalarWhereWithAggregatesInput = {
    AND?: AlamatScalarWhereWithAggregatesInput | AlamatScalarWhereWithAggregatesInput[]
    OR?: AlamatScalarWhereWithAggregatesInput[]
    NOT?: AlamatScalarWhereWithAggregatesInput | AlamatScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Alamat"> | number
    userId?: IntWithAggregatesFilter<"Alamat"> | number
    kodeProv?: StringWithAggregatesFilter<"Alamat"> | string
    kodeKab?: StringWithAggregatesFilter<"Alamat"> | string
    kodeKec?: StringWithAggregatesFilter<"Alamat"> | string
    kodeDesa?: StringWithAggregatesFilter<"Alamat"> | string
    kodePos?: StringWithAggregatesFilter<"Alamat"> | string
    detail?: StringWithAggregatesFilter<"Alamat"> | string
    catatan?: StringWithAggregatesFilter<"Alamat"> | string
    is_toko?: IntWithAggregatesFilter<"Alamat"> | number
    is_default?: IntWithAggregatesFilter<"Alamat"> | number
  }

  export type ProvinsiWhereInput = {
    AND?: ProvinsiWhereInput | ProvinsiWhereInput[]
    OR?: ProvinsiWhereInput[]
    NOT?: ProvinsiWhereInput | ProvinsiWhereInput[]
    kode?: StringFilter<"Provinsi"> | string
    nama?: StringFilter<"Provinsi"> | string
    kabupaten?: KabupatenListRelationFilter
    alamat?: AlamatListRelationFilter
  }

  export type ProvinsiOrderByWithRelationInput = {
    kode?: SortOrder
    nama?: SortOrder
    kabupaten?: KabupatenOrderByRelationAggregateInput
    alamat?: AlamatOrderByRelationAggregateInput
  }

  export type ProvinsiWhereUniqueInput = Prisma.AtLeast<{
    kode?: string
    AND?: ProvinsiWhereInput | ProvinsiWhereInput[]
    OR?: ProvinsiWhereInput[]
    NOT?: ProvinsiWhereInput | ProvinsiWhereInput[]
    nama?: StringFilter<"Provinsi"> | string
    kabupaten?: KabupatenListRelationFilter
    alamat?: AlamatListRelationFilter
  }, "kode">

  export type ProvinsiOrderByWithAggregationInput = {
    kode?: SortOrder
    nama?: SortOrder
    _count?: ProvinsiCountOrderByAggregateInput
    _max?: ProvinsiMaxOrderByAggregateInput
    _min?: ProvinsiMinOrderByAggregateInput
  }

  export type ProvinsiScalarWhereWithAggregatesInput = {
    AND?: ProvinsiScalarWhereWithAggregatesInput | ProvinsiScalarWhereWithAggregatesInput[]
    OR?: ProvinsiScalarWhereWithAggregatesInput[]
    NOT?: ProvinsiScalarWhereWithAggregatesInput | ProvinsiScalarWhereWithAggregatesInput[]
    kode?: StringWithAggregatesFilter<"Provinsi"> | string
    nama?: StringWithAggregatesFilter<"Provinsi"> | string
  }

  export type KabupatenWhereInput = {
    AND?: KabupatenWhereInput | KabupatenWhereInput[]
    OR?: KabupatenWhereInput[]
    NOT?: KabupatenWhereInput | KabupatenWhereInput[]
    kodeProv?: StringFilter<"Kabupaten"> | string
    kode?: StringFilter<"Kabupaten"> | string
    nama?: StringFilter<"Kabupaten"> | string
    provinsi?: XOR<ProvinsiScalarRelationFilter, ProvinsiWhereInput>
    kecamatan?: KecamatanListRelationFilter
    alamat?: AlamatListRelationFilter
  }

  export type KabupatenOrderByWithRelationInput = {
    kodeProv?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    provinsi?: ProvinsiOrderByWithRelationInput
    kecamatan?: KecamatanOrderByRelationAggregateInput
    alamat?: AlamatOrderByRelationAggregateInput
  }

  export type KabupatenWhereUniqueInput = Prisma.AtLeast<{
    kodeProv_kode?: KabupatenKodeProvKodeCompoundUniqueInput
    AND?: KabupatenWhereInput | KabupatenWhereInput[]
    OR?: KabupatenWhereInput[]
    NOT?: KabupatenWhereInput | KabupatenWhereInput[]
    kodeProv?: StringFilter<"Kabupaten"> | string
    kode?: StringFilter<"Kabupaten"> | string
    nama?: StringFilter<"Kabupaten"> | string
    provinsi?: XOR<ProvinsiScalarRelationFilter, ProvinsiWhereInput>
    kecamatan?: KecamatanListRelationFilter
    alamat?: AlamatListRelationFilter
  }, "kodeProv_kode">

  export type KabupatenOrderByWithAggregationInput = {
    kodeProv?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    _count?: KabupatenCountOrderByAggregateInput
    _max?: KabupatenMaxOrderByAggregateInput
    _min?: KabupatenMinOrderByAggregateInput
  }

  export type KabupatenScalarWhereWithAggregatesInput = {
    AND?: KabupatenScalarWhereWithAggregatesInput | KabupatenScalarWhereWithAggregatesInput[]
    OR?: KabupatenScalarWhereWithAggregatesInput[]
    NOT?: KabupatenScalarWhereWithAggregatesInput | KabupatenScalarWhereWithAggregatesInput[]
    kodeProv?: StringWithAggregatesFilter<"Kabupaten"> | string
    kode?: StringWithAggregatesFilter<"Kabupaten"> | string
    nama?: StringWithAggregatesFilter<"Kabupaten"> | string
  }

  export type KecamatanWhereInput = {
    AND?: KecamatanWhereInput | KecamatanWhereInput[]
    OR?: KecamatanWhereInput[]
    NOT?: KecamatanWhereInput | KecamatanWhereInput[]
    kodeProv?: StringFilter<"Kecamatan"> | string
    kodeKab?: StringFilter<"Kecamatan"> | string
    kode?: StringFilter<"Kecamatan"> | string
    nama?: StringFilter<"Kecamatan"> | string
    kabupaten?: XOR<KabupatenScalarRelationFilter, KabupatenWhereInput>
    desa?: DesaListRelationFilter
    alamat?: AlamatListRelationFilter
  }

  export type KecamatanOrderByWithRelationInput = {
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    kabupaten?: KabupatenOrderByWithRelationInput
    desa?: DesaOrderByRelationAggregateInput
    alamat?: AlamatOrderByRelationAggregateInput
  }

  export type KecamatanWhereUniqueInput = Prisma.AtLeast<{
    kodeProv_kodeKab_kode?: KecamatanKodeProvKodeKabKodeCompoundUniqueInput
    AND?: KecamatanWhereInput | KecamatanWhereInput[]
    OR?: KecamatanWhereInput[]
    NOT?: KecamatanWhereInput | KecamatanWhereInput[]
    kodeProv?: StringFilter<"Kecamatan"> | string
    kodeKab?: StringFilter<"Kecamatan"> | string
    kode?: StringFilter<"Kecamatan"> | string
    nama?: StringFilter<"Kecamatan"> | string
    kabupaten?: XOR<KabupatenScalarRelationFilter, KabupatenWhereInput>
    desa?: DesaListRelationFilter
    alamat?: AlamatListRelationFilter
  }, "kodeProv_kodeKab_kode">

  export type KecamatanOrderByWithAggregationInput = {
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    _count?: KecamatanCountOrderByAggregateInput
    _max?: KecamatanMaxOrderByAggregateInput
    _min?: KecamatanMinOrderByAggregateInput
  }

  export type KecamatanScalarWhereWithAggregatesInput = {
    AND?: KecamatanScalarWhereWithAggregatesInput | KecamatanScalarWhereWithAggregatesInput[]
    OR?: KecamatanScalarWhereWithAggregatesInput[]
    NOT?: KecamatanScalarWhereWithAggregatesInput | KecamatanScalarWhereWithAggregatesInput[]
    kodeProv?: StringWithAggregatesFilter<"Kecamatan"> | string
    kodeKab?: StringWithAggregatesFilter<"Kecamatan"> | string
    kode?: StringWithAggregatesFilter<"Kecamatan"> | string
    nama?: StringWithAggregatesFilter<"Kecamatan"> | string
  }

  export type DesaWhereInput = {
    AND?: DesaWhereInput | DesaWhereInput[]
    OR?: DesaWhereInput[]
    NOT?: DesaWhereInput | DesaWhereInput[]
    kodeProv?: StringFilter<"Desa"> | string
    kodeKab?: StringFilter<"Desa"> | string
    kodeKec?: StringFilter<"Desa"> | string
    kode?: StringFilter<"Desa"> | string
    nama?: StringFilter<"Desa"> | string
    kecamatan?: XOR<KecamatanScalarRelationFilter, KecamatanWhereInput>
    alamat?: AlamatListRelationFilter
  }

  export type DesaOrderByWithRelationInput = {
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kodeKec?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    kecamatan?: KecamatanOrderByWithRelationInput
    alamat?: AlamatOrderByRelationAggregateInput
  }

  export type DesaWhereUniqueInput = Prisma.AtLeast<{
    kodeProv_kodeKab_kodeKec_kode?: DesaKodeProvKodeKabKodeKecKodeCompoundUniqueInput
    AND?: DesaWhereInput | DesaWhereInput[]
    OR?: DesaWhereInput[]
    NOT?: DesaWhereInput | DesaWhereInput[]
    kodeProv?: StringFilter<"Desa"> | string
    kodeKab?: StringFilter<"Desa"> | string
    kodeKec?: StringFilter<"Desa"> | string
    kode?: StringFilter<"Desa"> | string
    nama?: StringFilter<"Desa"> | string
    kecamatan?: XOR<KecamatanScalarRelationFilter, KecamatanWhereInput>
    alamat?: AlamatListRelationFilter
  }, "kodeProv_kodeKab_kodeKec_kode">

  export type DesaOrderByWithAggregationInput = {
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kodeKec?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    _count?: DesaCountOrderByAggregateInput
    _max?: DesaMaxOrderByAggregateInput
    _min?: DesaMinOrderByAggregateInput
  }

  export type DesaScalarWhereWithAggregatesInput = {
    AND?: DesaScalarWhereWithAggregatesInput | DesaScalarWhereWithAggregatesInput[]
    OR?: DesaScalarWhereWithAggregatesInput[]
    NOT?: DesaScalarWhereWithAggregatesInput | DesaScalarWhereWithAggregatesInput[]
    kodeProv?: StringWithAggregatesFilter<"Desa"> | string
    kodeKab?: StringWithAggregatesFilter<"Desa"> | string
    kodeKec?: StringWithAggregatesFilter<"Desa"> | string
    kode?: StringWithAggregatesFilter<"Desa"> | string
    nama?: StringWithAggregatesFilter<"Desa"> | string
  }

  export type UsersCreateInput = {
    email: string
    password: string
    firstName: string
    lastName: string
    gender?: number
    role?: number
    telp?: string
    buka_toko?: number
    nama_toko?: string
    klasifikasi_toko?: number
    rating_toko?: number
    time_pengajuan?: Date | string | null
    time_terima?: Date | string | null
    status_pengajuan?: number
    acc_by?: number | null
    path_file?: string
    tanggal_lahir?: Date | string | null
    ktp_path?: string | null
    alamat?: AlamatCreateNestedManyWithoutUsersInput
    product?: ProductCreateNestedManyWithoutUserInput
    transaksi?: TransaksiCreateNestedManyWithoutUserInput
    review?: ReviewCreateNestedManyWithoutUserInput
    cart?: CartCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateInput = {
    id?: number
    email: string
    password: string
    firstName: string
    lastName: string
    gender?: number
    role?: number
    telp?: string
    buka_toko?: number
    nama_toko?: string
    klasifikasi_toko?: number
    rating_toko?: number
    time_pengajuan?: Date | string | null
    time_terima?: Date | string | null
    status_pengajuan?: number
    acc_by?: number | null
    path_file?: string
    tanggal_lahir?: Date | string | null
    ktp_path?: string | null
    alamat?: AlamatUncheckedCreateNestedManyWithoutUsersInput
    product?: ProductUncheckedCreateNestedManyWithoutUserInput
    transaksi?: TransaksiUncheckedCreateNestedManyWithoutUserInput
    review?: ReviewUncheckedCreateNestedManyWithoutUserInput
    cart?: CartUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: AlamatUpdateManyWithoutUsersNestedInput
    product?: ProductUpdateManyWithoutUserNestedInput
    transaksi?: TransaksiUpdateManyWithoutUserNestedInput
    review?: ReviewUpdateManyWithoutUserNestedInput
    cart?: CartUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: AlamatUncheckedUpdateManyWithoutUsersNestedInput
    product?: ProductUncheckedUpdateManyWithoutUserNestedInput
    transaksi?: TransaksiUncheckedUpdateManyWithoutUserNestedInput
    review?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    cart?: CartUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UsersCreateManyInput = {
    id?: number
    email: string
    password: string
    firstName: string
    lastName: string
    gender?: number
    role?: number
    telp?: string
    buka_toko?: number
    nama_toko?: string
    klasifikasi_toko?: number
    rating_toko?: number
    time_pengajuan?: Date | string | null
    time_terima?: Date | string | null
    status_pengajuan?: number
    acc_by?: number | null
    path_file?: string
    tanggal_lahir?: Date | string | null
    ktp_path?: string | null
  }

  export type UsersUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCreateInput = {
    nama: string
    desc: string
    path: string
    user: UsersCreateNestedOneWithoutProductInput
    transaksi?: TransaksiCreateNestedManyWithoutProductInput
    review?: ReviewCreateNestedManyWithoutProductInput
    cart?: CartCreateNestedManyWithoutProductInput
    variasi?: VariasiCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateInput = {
    id?: number
    userId: number
    nama: string
    desc: string
    path: string
    transaksi?: TransaksiUncheckedCreateNestedManyWithoutProductInput
    review?: ReviewUncheckedCreateNestedManyWithoutProductInput
    cart?: CartUncheckedCreateNestedManyWithoutProductInput
    variasi?: VariasiUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    user?: UsersUpdateOneRequiredWithoutProductNestedInput
    transaksi?: TransaksiUpdateManyWithoutProductNestedInput
    review?: ReviewUpdateManyWithoutProductNestedInput
    cart?: CartUpdateManyWithoutProductNestedInput
    variasi?: VariasiUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    transaksi?: TransaksiUncheckedUpdateManyWithoutProductNestedInput
    review?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    cart?: CartUncheckedUpdateManyWithoutProductNestedInput
    variasi?: VariasiUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    id?: number
    userId: number
    nama: string
    desc: string
    path: string
  }

  export type ProductUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
  }

  export type VariasiCreateInput = {
    nama: string
    harga: number
    path: string
    stok?: number
    product: ProductCreateNestedOneWithoutVariasiInput
    cart?: CartCreateNestedManyWithoutVariasiInput
  }

  export type VariasiUncheckedCreateInput = {
    id?: number
    productId: number
    nama: string
    harga: number
    path: string
    stok?: number
    cart?: CartUncheckedCreateNestedManyWithoutVariasiInput
  }

  export type VariasiUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    harga?: IntFieldUpdateOperationsInput | number
    path?: StringFieldUpdateOperationsInput | string
    stok?: IntFieldUpdateOperationsInput | number
    product?: ProductUpdateOneRequiredWithoutVariasiNestedInput
    cart?: CartUpdateManyWithoutVariasiNestedInput
  }

  export type VariasiUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    harga?: IntFieldUpdateOperationsInput | number
    path?: StringFieldUpdateOperationsInput | string
    stok?: IntFieldUpdateOperationsInput | number
    cart?: CartUncheckedUpdateManyWithoutVariasiNestedInput
  }

  export type VariasiCreateManyInput = {
    id?: number
    productId: number
    nama: string
    harga: number
    path: string
    stok?: number
  }

  export type VariasiUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
    harga?: IntFieldUpdateOperationsInput | number
    path?: StringFieldUpdateOperationsInput | string
    stok?: IntFieldUpdateOperationsInput | number
  }

  export type VariasiUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    harga?: IntFieldUpdateOperationsInput | number
    path?: StringFieldUpdateOperationsInput | string
    stok?: IntFieldUpdateOperationsInput | number
  }

  export type TransaksiCreateInput = {
    status: number
    user: UsersCreateNestedOneWithoutTransaksiInput
    product: ProductCreateNestedOneWithoutTransaksiInput
  }

  export type TransaksiUncheckedCreateInput = {
    id?: number
    userId: number
    productId: number
    status: number
  }

  export type TransaksiUpdateInput = {
    status?: IntFieldUpdateOperationsInput | number
    user?: UsersUpdateOneRequiredWithoutTransaksiNestedInput
    product?: ProductUpdateOneRequiredWithoutTransaksiNestedInput
  }

  export type TransaksiUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
  }

  export type TransaksiCreateManyInput = {
    id?: number
    userId: number
    productId: number
    status: number
  }

  export type TransaksiUpdateManyMutationInput = {
    status?: IntFieldUpdateOperationsInput | number
  }

  export type TransaksiUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
  }

  export type ReviewCreateInput = {
    review: string
    rating: number
    time?: Date | string | null
    user: UsersCreateNestedOneWithoutReviewInput
    product: ProductCreateNestedOneWithoutReviewInput
  }

  export type ReviewUncheckedCreateInput = {
    id?: number
    userId: number
    productId: number
    review: string
    rating: number
    time?: Date | string | null
  }

  export type ReviewUpdateInput = {
    review?: StringFieldUpdateOperationsInput | string
    rating?: FloatFieldUpdateOperationsInput | number
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UsersUpdateOneRequiredWithoutReviewNestedInput
    product?: ProductUpdateOneRequiredWithoutReviewNestedInput
  }

  export type ReviewUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    review?: StringFieldUpdateOperationsInput | string
    rating?: FloatFieldUpdateOperationsInput | number
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReviewCreateManyInput = {
    id?: number
    userId: number
    productId: number
    review: string
    rating: number
    time?: Date | string | null
  }

  export type ReviewUpdateManyMutationInput = {
    review?: StringFieldUpdateOperationsInput | string
    rating?: FloatFieldUpdateOperationsInput | number
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReviewUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    review?: StringFieldUpdateOperationsInput | string
    rating?: FloatFieldUpdateOperationsInput | number
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CartCreateInput = {
    quantity: number
    time: Date | string
    user: UsersCreateNestedOneWithoutCartInput
    product: ProductCreateNestedOneWithoutCartInput
    variasi: VariasiCreateNestedOneWithoutCartInput
  }

  export type CartUncheckedCreateInput = {
    id?: number
    userId: number
    productId: number
    variasiId: number
    quantity: number
    time: Date | string
  }

  export type CartUpdateInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UsersUpdateOneRequiredWithoutCartNestedInput
    product?: ProductUpdateOneRequiredWithoutCartNestedInput
    variasi?: VariasiUpdateOneRequiredWithoutCartNestedInput
  }

  export type CartUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    variasiId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartCreateManyInput = {
    id?: number
    userId: number
    productId: number
    variasiId: number
    quantity: number
    time: Date | string
  }

  export type CartUpdateManyMutationInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    variasiId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlamatCreateInput = {
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
    users: UsersCreateNestedOneWithoutAlamatInput
    provinsi: ProvinsiCreateNestedOneWithoutAlamatInput
    kabupaten: KabupatenCreateNestedOneWithoutAlamatInput
    kecamatan: KecamatanCreateNestedOneWithoutAlamatInput
    desa: DesaCreateNestedOneWithoutAlamatInput
  }

  export type AlamatUncheckedCreateInput = {
    id?: number
    userId: number
    kodeProv: string
    kodeKab: string
    kodeKec: string
    kodeDesa: string
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
  }

  export type AlamatUpdateInput = {
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
    users?: UsersUpdateOneRequiredWithoutAlamatNestedInput
    provinsi?: ProvinsiUpdateOneRequiredWithoutAlamatNestedInput
    kabupaten?: KabupatenUpdateOneRequiredWithoutAlamatNestedInput
    kecamatan?: KecamatanUpdateOneRequiredWithoutAlamatNestedInput
    desa?: DesaUpdateOneRequiredWithoutAlamatNestedInput
  }

  export type AlamatUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    kodeProv?: StringFieldUpdateOperationsInput | string
    kodeKab?: StringFieldUpdateOperationsInput | string
    kodeKec?: StringFieldUpdateOperationsInput | string
    kodeDesa?: StringFieldUpdateOperationsInput | string
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
  }

  export type AlamatCreateManyInput = {
    id?: number
    userId: number
    kodeProv: string
    kodeKab: string
    kodeKec: string
    kodeDesa: string
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
  }

  export type AlamatUpdateManyMutationInput = {
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
  }

  export type AlamatUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    kodeProv?: StringFieldUpdateOperationsInput | string
    kodeKab?: StringFieldUpdateOperationsInput | string
    kodeKec?: StringFieldUpdateOperationsInput | string
    kodeDesa?: StringFieldUpdateOperationsInput | string
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
  }

  export type ProvinsiCreateInput = {
    kode: string
    nama: string
    kabupaten?: KabupatenCreateNestedManyWithoutProvinsiInput
    alamat?: AlamatCreateNestedManyWithoutProvinsiInput
  }

  export type ProvinsiUncheckedCreateInput = {
    kode: string
    nama: string
    kabupaten?: KabupatenUncheckedCreateNestedManyWithoutProvinsiInput
    alamat?: AlamatUncheckedCreateNestedManyWithoutProvinsiInput
  }

  export type ProvinsiUpdateInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    kabupaten?: KabupatenUpdateManyWithoutProvinsiNestedInput
    alamat?: AlamatUpdateManyWithoutProvinsiNestedInput
  }

  export type ProvinsiUncheckedUpdateInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    kabupaten?: KabupatenUncheckedUpdateManyWithoutProvinsiNestedInput
    alamat?: AlamatUncheckedUpdateManyWithoutProvinsiNestedInput
  }

  export type ProvinsiCreateManyInput = {
    kode: string
    nama: string
  }

  export type ProvinsiUpdateManyMutationInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type ProvinsiUncheckedUpdateManyInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type KabupatenCreateInput = {
    kode: string
    nama: string
    provinsi: ProvinsiCreateNestedOneWithoutKabupatenInput
    kecamatan?: KecamatanCreateNestedManyWithoutKabupatenInput
    alamat?: AlamatCreateNestedManyWithoutKabupatenInput
  }

  export type KabupatenUncheckedCreateInput = {
    kodeProv: string
    kode: string
    nama: string
    kecamatan?: KecamatanUncheckedCreateNestedManyWithoutKabupatenInput
    alamat?: AlamatUncheckedCreateNestedManyWithoutKabupatenInput
  }

  export type KabupatenUpdateInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    provinsi?: ProvinsiUpdateOneRequiredWithoutKabupatenNestedInput
    kecamatan?: KecamatanUpdateManyWithoutKabupatenNestedInput
    alamat?: AlamatUpdateManyWithoutKabupatenNestedInput
  }

  export type KabupatenUncheckedUpdateInput = {
    kodeProv?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    kecamatan?: KecamatanUncheckedUpdateManyWithoutKabupatenNestedInput
    alamat?: AlamatUncheckedUpdateManyWithoutKabupatenNestedInput
  }

  export type KabupatenCreateManyInput = {
    kodeProv: string
    kode: string
    nama: string
  }

  export type KabupatenUpdateManyMutationInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type KabupatenUncheckedUpdateManyInput = {
    kodeProv?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type KecamatanCreateInput = {
    kode: string
    nama: string
    kabupaten: KabupatenCreateNestedOneWithoutKecamatanInput
    desa?: DesaCreateNestedManyWithoutKecamatanInput
    alamat?: AlamatCreateNestedManyWithoutKecamatanInput
  }

  export type KecamatanUncheckedCreateInput = {
    kodeProv: string
    kodeKab: string
    kode: string
    nama: string
    desa?: DesaUncheckedCreateNestedManyWithoutKecamatanInput
    alamat?: AlamatUncheckedCreateNestedManyWithoutKecamatanInput
  }

  export type KecamatanUpdateInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    kabupaten?: KabupatenUpdateOneRequiredWithoutKecamatanNestedInput
    desa?: DesaUpdateManyWithoutKecamatanNestedInput
    alamat?: AlamatUpdateManyWithoutKecamatanNestedInput
  }

  export type KecamatanUncheckedUpdateInput = {
    kodeProv?: StringFieldUpdateOperationsInput | string
    kodeKab?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    desa?: DesaUncheckedUpdateManyWithoutKecamatanNestedInput
    alamat?: AlamatUncheckedUpdateManyWithoutKecamatanNestedInput
  }

  export type KecamatanCreateManyInput = {
    kodeProv: string
    kodeKab: string
    kode: string
    nama: string
  }

  export type KecamatanUpdateManyMutationInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type KecamatanUncheckedUpdateManyInput = {
    kodeProv?: StringFieldUpdateOperationsInput | string
    kodeKab?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type DesaCreateInput = {
    kode: string
    nama: string
    kecamatan: KecamatanCreateNestedOneWithoutDesaInput
    alamat?: AlamatCreateNestedManyWithoutDesaInput
  }

  export type DesaUncheckedCreateInput = {
    kodeProv: string
    kodeKab: string
    kodeKec: string
    kode: string
    nama: string
    alamat?: AlamatUncheckedCreateNestedManyWithoutDesaInput
  }

  export type DesaUpdateInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    kecamatan?: KecamatanUpdateOneRequiredWithoutDesaNestedInput
    alamat?: AlamatUpdateManyWithoutDesaNestedInput
  }

  export type DesaUncheckedUpdateInput = {
    kodeProv?: StringFieldUpdateOperationsInput | string
    kodeKab?: StringFieldUpdateOperationsInput | string
    kodeKec?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    alamat?: AlamatUncheckedUpdateManyWithoutDesaNestedInput
  }

  export type DesaCreateManyInput = {
    kodeProv: string
    kodeKab: string
    kodeKec: string
    kode: string
    nama: string
  }

  export type DesaUpdateManyMutationInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type DesaUncheckedUpdateManyInput = {
    kodeProv?: StringFieldUpdateOperationsInput | string
    kodeKab?: StringFieldUpdateOperationsInput | string
    kodeKec?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type AlamatListRelationFilter = {
    every?: AlamatWhereInput
    some?: AlamatWhereInput
    none?: AlamatWhereInput
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type TransaksiListRelationFilter = {
    every?: TransaksiWhereInput
    some?: TransaksiWhereInput
    none?: TransaksiWhereInput
  }

  export type ReviewListRelationFilter = {
    every?: ReviewWhereInput
    some?: ReviewWhereInput
    none?: ReviewWhereInput
  }

  export type CartListRelationFilter = {
    every?: CartWhereInput
    some?: CartWhereInput
    none?: CartWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AlamatOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TransaksiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CartOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsersCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    gender?: SortOrder
    role?: SortOrder
    telp?: SortOrder
    buka_toko?: SortOrder
    nama_toko?: SortOrder
    klasifikasi_toko?: SortOrder
    rating_toko?: SortOrder
    time_pengajuan?: SortOrder
    time_terima?: SortOrder
    status_pengajuan?: SortOrder
    acc_by?: SortOrder
    path_file?: SortOrder
    tanggal_lahir?: SortOrder
    ktp_path?: SortOrder
  }

  export type UsersAvgOrderByAggregateInput = {
    id?: SortOrder
    gender?: SortOrder
    role?: SortOrder
    buka_toko?: SortOrder
    klasifikasi_toko?: SortOrder
    rating_toko?: SortOrder
    status_pengajuan?: SortOrder
    acc_by?: SortOrder
  }

  export type UsersMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    gender?: SortOrder
    role?: SortOrder
    telp?: SortOrder
    buka_toko?: SortOrder
    nama_toko?: SortOrder
    klasifikasi_toko?: SortOrder
    rating_toko?: SortOrder
    time_pengajuan?: SortOrder
    time_terima?: SortOrder
    status_pengajuan?: SortOrder
    acc_by?: SortOrder
    path_file?: SortOrder
    tanggal_lahir?: SortOrder
    ktp_path?: SortOrder
  }

  export type UsersMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    gender?: SortOrder
    role?: SortOrder
    telp?: SortOrder
    buka_toko?: SortOrder
    nama_toko?: SortOrder
    klasifikasi_toko?: SortOrder
    rating_toko?: SortOrder
    time_pengajuan?: SortOrder
    time_terima?: SortOrder
    status_pengajuan?: SortOrder
    acc_by?: SortOrder
    path_file?: SortOrder
    tanggal_lahir?: SortOrder
    ktp_path?: SortOrder
  }

  export type UsersSumOrderByAggregateInput = {
    id?: SortOrder
    gender?: SortOrder
    role?: SortOrder
    buka_toko?: SortOrder
    klasifikasi_toko?: SortOrder
    rating_toko?: SortOrder
    status_pengajuan?: SortOrder
    acc_by?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type UsersScalarRelationFilter = {
    is?: UsersWhereInput
    isNot?: UsersWhereInput
  }

  export type VariasiListRelationFilter = {
    every?: VariasiWhereInput
    some?: VariasiWhereInput
    none?: VariasiWhereInput
  }

  export type VariasiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nama?: SortOrder
    desc?: SortOrder
    path?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nama?: SortOrder
    desc?: SortOrder
    path?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nama?: SortOrder
    desc?: SortOrder
    path?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type ProductScalarRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type VariasiCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    nama?: SortOrder
    harga?: SortOrder
    path?: SortOrder
    stok?: SortOrder
  }

  export type VariasiAvgOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    harga?: SortOrder
    stok?: SortOrder
  }

  export type VariasiMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    nama?: SortOrder
    harga?: SortOrder
    path?: SortOrder
    stok?: SortOrder
  }

  export type VariasiMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    nama?: SortOrder
    harga?: SortOrder
    path?: SortOrder
    stok?: SortOrder
  }

  export type VariasiSumOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    harga?: SortOrder
    stok?: SortOrder
  }

  export type TransaksiCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    status?: SortOrder
  }

  export type TransaksiAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    status?: SortOrder
  }

  export type TransaksiMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    status?: SortOrder
  }

  export type TransaksiMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    status?: SortOrder
  }

  export type TransaksiSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    status?: SortOrder
  }

  export type ReviewCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    review?: SortOrder
    rating?: SortOrder
    time?: SortOrder
  }

  export type ReviewAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    rating?: SortOrder
  }

  export type ReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    review?: SortOrder
    rating?: SortOrder
    time?: SortOrder
  }

  export type ReviewMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    review?: SortOrder
    rating?: SortOrder
    time?: SortOrder
  }

  export type ReviewSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    rating?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type VariasiScalarRelationFilter = {
    is?: VariasiWhereInput
    isNot?: VariasiWhereInput
  }

  export type CartCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    variasiId?: SortOrder
    quantity?: SortOrder
    time?: SortOrder
  }

  export type CartAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    variasiId?: SortOrder
    quantity?: SortOrder
  }

  export type CartMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    variasiId?: SortOrder
    quantity?: SortOrder
    time?: SortOrder
  }

  export type CartMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    variasiId?: SortOrder
    quantity?: SortOrder
    time?: SortOrder
  }

  export type CartSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    variasiId?: SortOrder
    quantity?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type ProvinsiScalarRelationFilter = {
    is?: ProvinsiWhereInput
    isNot?: ProvinsiWhereInput
  }

  export type KabupatenScalarRelationFilter = {
    is?: KabupatenWhereInput
    isNot?: KabupatenWhereInput
  }

  export type KecamatanScalarRelationFilter = {
    is?: KecamatanWhereInput
    isNot?: KecamatanWhereInput
  }

  export type DesaScalarRelationFilter = {
    is?: DesaWhereInput
    isNot?: DesaWhereInput
  }

  export type AlamatCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kodeKec?: SortOrder
    kodeDesa?: SortOrder
    kodePos?: SortOrder
    detail?: SortOrder
    catatan?: SortOrder
    is_toko?: SortOrder
    is_default?: SortOrder
  }

  export type AlamatAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    is_toko?: SortOrder
    is_default?: SortOrder
  }

  export type AlamatMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kodeKec?: SortOrder
    kodeDesa?: SortOrder
    kodePos?: SortOrder
    detail?: SortOrder
    catatan?: SortOrder
    is_toko?: SortOrder
    is_default?: SortOrder
  }

  export type AlamatMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kodeKec?: SortOrder
    kodeDesa?: SortOrder
    kodePos?: SortOrder
    detail?: SortOrder
    catatan?: SortOrder
    is_toko?: SortOrder
    is_default?: SortOrder
  }

  export type AlamatSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    is_toko?: SortOrder
    is_default?: SortOrder
  }

  export type KabupatenListRelationFilter = {
    every?: KabupatenWhereInput
    some?: KabupatenWhereInput
    none?: KabupatenWhereInput
  }

  export type KabupatenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProvinsiCountOrderByAggregateInput = {
    kode?: SortOrder
    nama?: SortOrder
  }

  export type ProvinsiMaxOrderByAggregateInput = {
    kode?: SortOrder
    nama?: SortOrder
  }

  export type ProvinsiMinOrderByAggregateInput = {
    kode?: SortOrder
    nama?: SortOrder
  }

  export type KecamatanListRelationFilter = {
    every?: KecamatanWhereInput
    some?: KecamatanWhereInput
    none?: KecamatanWhereInput
  }

  export type KecamatanOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type KabupatenKodeProvKodeCompoundUniqueInput = {
    kodeProv: string
    kode: string
  }

  export type KabupatenCountOrderByAggregateInput = {
    kodeProv?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
  }

  export type KabupatenMaxOrderByAggregateInput = {
    kodeProv?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
  }

  export type KabupatenMinOrderByAggregateInput = {
    kodeProv?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
  }

  export type DesaListRelationFilter = {
    every?: DesaWhereInput
    some?: DesaWhereInput
    none?: DesaWhereInput
  }

  export type DesaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type KecamatanKodeProvKodeKabKodeCompoundUniqueInput = {
    kodeProv: string
    kodeKab: string
    kode: string
  }

  export type KecamatanCountOrderByAggregateInput = {
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
  }

  export type KecamatanMaxOrderByAggregateInput = {
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
  }

  export type KecamatanMinOrderByAggregateInput = {
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
  }

  export type DesaKodeProvKodeKabKodeKecKodeCompoundUniqueInput = {
    kodeProv: string
    kodeKab: string
    kodeKec: string
    kode: string
  }

  export type DesaCountOrderByAggregateInput = {
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kodeKec?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
  }

  export type DesaMaxOrderByAggregateInput = {
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kodeKec?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
  }

  export type DesaMinOrderByAggregateInput = {
    kodeProv?: SortOrder
    kodeKab?: SortOrder
    kodeKec?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
  }

  export type AlamatCreateNestedManyWithoutUsersInput = {
    create?: XOR<AlamatCreateWithoutUsersInput, AlamatUncheckedCreateWithoutUsersInput> | AlamatCreateWithoutUsersInput[] | AlamatUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutUsersInput | AlamatCreateOrConnectWithoutUsersInput[]
    createMany?: AlamatCreateManyUsersInputEnvelope
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutUserInput = {
    create?: XOR<ProductCreateWithoutUserInput, ProductUncheckedCreateWithoutUserInput> | ProductCreateWithoutUserInput[] | ProductUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUserInput | ProductCreateOrConnectWithoutUserInput[]
    createMany?: ProductCreateManyUserInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type TransaksiCreateNestedManyWithoutUserInput = {
    create?: XOR<TransaksiCreateWithoutUserInput, TransaksiUncheckedCreateWithoutUserInput> | TransaksiCreateWithoutUserInput[] | TransaksiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TransaksiCreateOrConnectWithoutUserInput | TransaksiCreateOrConnectWithoutUserInput[]
    createMany?: TransaksiCreateManyUserInputEnvelope
    connect?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutUserInput = {
    create?: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput> | ReviewCreateWithoutUserInput[] | ReviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutUserInput | ReviewCreateOrConnectWithoutUserInput[]
    createMany?: ReviewCreateManyUserInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type CartCreateNestedManyWithoutUserInput = {
    create?: XOR<CartCreateWithoutUserInput, CartUncheckedCreateWithoutUserInput> | CartCreateWithoutUserInput[] | CartUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CartCreateOrConnectWithoutUserInput | CartCreateOrConnectWithoutUserInput[]
    createMany?: CartCreateManyUserInputEnvelope
    connect?: CartWhereUniqueInput | CartWhereUniqueInput[]
  }

  export type AlamatUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<AlamatCreateWithoutUsersInput, AlamatUncheckedCreateWithoutUsersInput> | AlamatCreateWithoutUsersInput[] | AlamatUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutUsersInput | AlamatCreateOrConnectWithoutUsersInput[]
    createMany?: AlamatCreateManyUsersInputEnvelope
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ProductCreateWithoutUserInput, ProductUncheckedCreateWithoutUserInput> | ProductCreateWithoutUserInput[] | ProductUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUserInput | ProductCreateOrConnectWithoutUserInput[]
    createMany?: ProductCreateManyUserInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type TransaksiUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<TransaksiCreateWithoutUserInput, TransaksiUncheckedCreateWithoutUserInput> | TransaksiCreateWithoutUserInput[] | TransaksiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TransaksiCreateOrConnectWithoutUserInput | TransaksiCreateOrConnectWithoutUserInput[]
    createMany?: TransaksiCreateManyUserInputEnvelope
    connect?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput> | ReviewCreateWithoutUserInput[] | ReviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutUserInput | ReviewCreateOrConnectWithoutUserInput[]
    createMany?: ReviewCreateManyUserInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type CartUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CartCreateWithoutUserInput, CartUncheckedCreateWithoutUserInput> | CartCreateWithoutUserInput[] | CartUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CartCreateOrConnectWithoutUserInput | CartCreateOrConnectWithoutUserInput[]
    createMany?: CartCreateManyUserInputEnvelope
    connect?: CartWhereUniqueInput | CartWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type AlamatUpdateManyWithoutUsersNestedInput = {
    create?: XOR<AlamatCreateWithoutUsersInput, AlamatUncheckedCreateWithoutUsersInput> | AlamatCreateWithoutUsersInput[] | AlamatUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutUsersInput | AlamatCreateOrConnectWithoutUsersInput[]
    upsert?: AlamatUpsertWithWhereUniqueWithoutUsersInput | AlamatUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: AlamatCreateManyUsersInputEnvelope
    set?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    disconnect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    delete?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    update?: AlamatUpdateWithWhereUniqueWithoutUsersInput | AlamatUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: AlamatUpdateManyWithWhereWithoutUsersInput | AlamatUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutUserNestedInput = {
    create?: XOR<ProductCreateWithoutUserInput, ProductUncheckedCreateWithoutUserInput> | ProductCreateWithoutUserInput[] | ProductUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUserInput | ProductCreateOrConnectWithoutUserInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUserInput | ProductUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ProductCreateManyUserInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUserInput | ProductUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUserInput | ProductUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type TransaksiUpdateManyWithoutUserNestedInput = {
    create?: XOR<TransaksiCreateWithoutUserInput, TransaksiUncheckedCreateWithoutUserInput> | TransaksiCreateWithoutUserInput[] | TransaksiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TransaksiCreateOrConnectWithoutUserInput | TransaksiCreateOrConnectWithoutUserInput[]
    upsert?: TransaksiUpsertWithWhereUniqueWithoutUserInput | TransaksiUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TransaksiCreateManyUserInputEnvelope
    set?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    disconnect?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    delete?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    connect?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    update?: TransaksiUpdateWithWhereUniqueWithoutUserInput | TransaksiUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TransaksiUpdateManyWithWhereWithoutUserInput | TransaksiUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TransaksiScalarWhereInput | TransaksiScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput> | ReviewCreateWithoutUserInput[] | ReviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutUserInput | ReviewCreateOrConnectWithoutUserInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutUserInput | ReviewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReviewCreateManyUserInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutUserInput | ReviewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutUserInput | ReviewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type CartUpdateManyWithoutUserNestedInput = {
    create?: XOR<CartCreateWithoutUserInput, CartUncheckedCreateWithoutUserInput> | CartCreateWithoutUserInput[] | CartUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CartCreateOrConnectWithoutUserInput | CartCreateOrConnectWithoutUserInput[]
    upsert?: CartUpsertWithWhereUniqueWithoutUserInput | CartUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CartCreateManyUserInputEnvelope
    set?: CartWhereUniqueInput | CartWhereUniqueInput[]
    disconnect?: CartWhereUniqueInput | CartWhereUniqueInput[]
    delete?: CartWhereUniqueInput | CartWhereUniqueInput[]
    connect?: CartWhereUniqueInput | CartWhereUniqueInput[]
    update?: CartUpdateWithWhereUniqueWithoutUserInput | CartUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CartUpdateManyWithWhereWithoutUserInput | CartUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CartScalarWhereInput | CartScalarWhereInput[]
  }

  export type AlamatUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<AlamatCreateWithoutUsersInput, AlamatUncheckedCreateWithoutUsersInput> | AlamatCreateWithoutUsersInput[] | AlamatUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutUsersInput | AlamatCreateOrConnectWithoutUsersInput[]
    upsert?: AlamatUpsertWithWhereUniqueWithoutUsersInput | AlamatUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: AlamatCreateManyUsersInputEnvelope
    set?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    disconnect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    delete?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    update?: AlamatUpdateWithWhereUniqueWithoutUsersInput | AlamatUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: AlamatUpdateManyWithWhereWithoutUsersInput | AlamatUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ProductCreateWithoutUserInput, ProductUncheckedCreateWithoutUserInput> | ProductCreateWithoutUserInput[] | ProductUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUserInput | ProductCreateOrConnectWithoutUserInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUserInput | ProductUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ProductCreateManyUserInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUserInput | ProductUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUserInput | ProductUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type TransaksiUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<TransaksiCreateWithoutUserInput, TransaksiUncheckedCreateWithoutUserInput> | TransaksiCreateWithoutUserInput[] | TransaksiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TransaksiCreateOrConnectWithoutUserInput | TransaksiCreateOrConnectWithoutUserInput[]
    upsert?: TransaksiUpsertWithWhereUniqueWithoutUserInput | TransaksiUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TransaksiCreateManyUserInputEnvelope
    set?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    disconnect?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    delete?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    connect?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    update?: TransaksiUpdateWithWhereUniqueWithoutUserInput | TransaksiUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TransaksiUpdateManyWithWhereWithoutUserInput | TransaksiUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TransaksiScalarWhereInput | TransaksiScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput> | ReviewCreateWithoutUserInput[] | ReviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutUserInput | ReviewCreateOrConnectWithoutUserInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutUserInput | ReviewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReviewCreateManyUserInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutUserInput | ReviewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutUserInput | ReviewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type CartUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CartCreateWithoutUserInput, CartUncheckedCreateWithoutUserInput> | CartCreateWithoutUserInput[] | CartUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CartCreateOrConnectWithoutUserInput | CartCreateOrConnectWithoutUserInput[]
    upsert?: CartUpsertWithWhereUniqueWithoutUserInput | CartUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CartCreateManyUserInputEnvelope
    set?: CartWhereUniqueInput | CartWhereUniqueInput[]
    disconnect?: CartWhereUniqueInput | CartWhereUniqueInput[]
    delete?: CartWhereUniqueInput | CartWhereUniqueInput[]
    connect?: CartWhereUniqueInput | CartWhereUniqueInput[]
    update?: CartUpdateWithWhereUniqueWithoutUserInput | CartUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CartUpdateManyWithWhereWithoutUserInput | CartUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CartScalarWhereInput | CartScalarWhereInput[]
  }

  export type UsersCreateNestedOneWithoutProductInput = {
    create?: XOR<UsersCreateWithoutProductInput, UsersUncheckedCreateWithoutProductInput>
    connectOrCreate?: UsersCreateOrConnectWithoutProductInput
    connect?: UsersWhereUniqueInput
  }

  export type TransaksiCreateNestedManyWithoutProductInput = {
    create?: XOR<TransaksiCreateWithoutProductInput, TransaksiUncheckedCreateWithoutProductInput> | TransaksiCreateWithoutProductInput[] | TransaksiUncheckedCreateWithoutProductInput[]
    connectOrCreate?: TransaksiCreateOrConnectWithoutProductInput | TransaksiCreateOrConnectWithoutProductInput[]
    createMany?: TransaksiCreateManyProductInputEnvelope
    connect?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutProductInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type CartCreateNestedManyWithoutProductInput = {
    create?: XOR<CartCreateWithoutProductInput, CartUncheckedCreateWithoutProductInput> | CartCreateWithoutProductInput[] | CartUncheckedCreateWithoutProductInput[]
    connectOrCreate?: CartCreateOrConnectWithoutProductInput | CartCreateOrConnectWithoutProductInput[]
    createMany?: CartCreateManyProductInputEnvelope
    connect?: CartWhereUniqueInput | CartWhereUniqueInput[]
  }

  export type VariasiCreateNestedManyWithoutProductInput = {
    create?: XOR<VariasiCreateWithoutProductInput, VariasiUncheckedCreateWithoutProductInput> | VariasiCreateWithoutProductInput[] | VariasiUncheckedCreateWithoutProductInput[]
    connectOrCreate?: VariasiCreateOrConnectWithoutProductInput | VariasiCreateOrConnectWithoutProductInput[]
    createMany?: VariasiCreateManyProductInputEnvelope
    connect?: VariasiWhereUniqueInput | VariasiWhereUniqueInput[]
  }

  export type TransaksiUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<TransaksiCreateWithoutProductInput, TransaksiUncheckedCreateWithoutProductInput> | TransaksiCreateWithoutProductInput[] | TransaksiUncheckedCreateWithoutProductInput[]
    connectOrCreate?: TransaksiCreateOrConnectWithoutProductInput | TransaksiCreateOrConnectWithoutProductInput[]
    createMany?: TransaksiCreateManyProductInputEnvelope
    connect?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type CartUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<CartCreateWithoutProductInput, CartUncheckedCreateWithoutProductInput> | CartCreateWithoutProductInput[] | CartUncheckedCreateWithoutProductInput[]
    connectOrCreate?: CartCreateOrConnectWithoutProductInput | CartCreateOrConnectWithoutProductInput[]
    createMany?: CartCreateManyProductInputEnvelope
    connect?: CartWhereUniqueInput | CartWhereUniqueInput[]
  }

  export type VariasiUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<VariasiCreateWithoutProductInput, VariasiUncheckedCreateWithoutProductInput> | VariasiCreateWithoutProductInput[] | VariasiUncheckedCreateWithoutProductInput[]
    connectOrCreate?: VariasiCreateOrConnectWithoutProductInput | VariasiCreateOrConnectWithoutProductInput[]
    createMany?: VariasiCreateManyProductInputEnvelope
    connect?: VariasiWhereUniqueInput | VariasiWhereUniqueInput[]
  }

  export type UsersUpdateOneRequiredWithoutProductNestedInput = {
    create?: XOR<UsersCreateWithoutProductInput, UsersUncheckedCreateWithoutProductInput>
    connectOrCreate?: UsersCreateOrConnectWithoutProductInput
    upsert?: UsersUpsertWithoutProductInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutProductInput, UsersUpdateWithoutProductInput>, UsersUncheckedUpdateWithoutProductInput>
  }

  export type TransaksiUpdateManyWithoutProductNestedInput = {
    create?: XOR<TransaksiCreateWithoutProductInput, TransaksiUncheckedCreateWithoutProductInput> | TransaksiCreateWithoutProductInput[] | TransaksiUncheckedCreateWithoutProductInput[]
    connectOrCreate?: TransaksiCreateOrConnectWithoutProductInput | TransaksiCreateOrConnectWithoutProductInput[]
    upsert?: TransaksiUpsertWithWhereUniqueWithoutProductInput | TransaksiUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: TransaksiCreateManyProductInputEnvelope
    set?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    disconnect?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    delete?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    connect?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    update?: TransaksiUpdateWithWhereUniqueWithoutProductInput | TransaksiUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: TransaksiUpdateManyWithWhereWithoutProductInput | TransaksiUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: TransaksiScalarWhereInput | TransaksiScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutProductNestedInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutProductInput | ReviewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutProductInput | ReviewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutProductInput | ReviewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type CartUpdateManyWithoutProductNestedInput = {
    create?: XOR<CartCreateWithoutProductInput, CartUncheckedCreateWithoutProductInput> | CartCreateWithoutProductInput[] | CartUncheckedCreateWithoutProductInput[]
    connectOrCreate?: CartCreateOrConnectWithoutProductInput | CartCreateOrConnectWithoutProductInput[]
    upsert?: CartUpsertWithWhereUniqueWithoutProductInput | CartUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: CartCreateManyProductInputEnvelope
    set?: CartWhereUniqueInput | CartWhereUniqueInput[]
    disconnect?: CartWhereUniqueInput | CartWhereUniqueInput[]
    delete?: CartWhereUniqueInput | CartWhereUniqueInput[]
    connect?: CartWhereUniqueInput | CartWhereUniqueInput[]
    update?: CartUpdateWithWhereUniqueWithoutProductInput | CartUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: CartUpdateManyWithWhereWithoutProductInput | CartUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: CartScalarWhereInput | CartScalarWhereInput[]
  }

  export type VariasiUpdateManyWithoutProductNestedInput = {
    create?: XOR<VariasiCreateWithoutProductInput, VariasiUncheckedCreateWithoutProductInput> | VariasiCreateWithoutProductInput[] | VariasiUncheckedCreateWithoutProductInput[]
    connectOrCreate?: VariasiCreateOrConnectWithoutProductInput | VariasiCreateOrConnectWithoutProductInput[]
    upsert?: VariasiUpsertWithWhereUniqueWithoutProductInput | VariasiUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: VariasiCreateManyProductInputEnvelope
    set?: VariasiWhereUniqueInput | VariasiWhereUniqueInput[]
    disconnect?: VariasiWhereUniqueInput | VariasiWhereUniqueInput[]
    delete?: VariasiWhereUniqueInput | VariasiWhereUniqueInput[]
    connect?: VariasiWhereUniqueInput | VariasiWhereUniqueInput[]
    update?: VariasiUpdateWithWhereUniqueWithoutProductInput | VariasiUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: VariasiUpdateManyWithWhereWithoutProductInput | VariasiUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: VariasiScalarWhereInput | VariasiScalarWhereInput[]
  }

  export type TransaksiUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<TransaksiCreateWithoutProductInput, TransaksiUncheckedCreateWithoutProductInput> | TransaksiCreateWithoutProductInput[] | TransaksiUncheckedCreateWithoutProductInput[]
    connectOrCreate?: TransaksiCreateOrConnectWithoutProductInput | TransaksiCreateOrConnectWithoutProductInput[]
    upsert?: TransaksiUpsertWithWhereUniqueWithoutProductInput | TransaksiUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: TransaksiCreateManyProductInputEnvelope
    set?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    disconnect?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    delete?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    connect?: TransaksiWhereUniqueInput | TransaksiWhereUniqueInput[]
    update?: TransaksiUpdateWithWhereUniqueWithoutProductInput | TransaksiUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: TransaksiUpdateManyWithWhereWithoutProductInput | TransaksiUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: TransaksiScalarWhereInput | TransaksiScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutProductInput | ReviewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutProductInput | ReviewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutProductInput | ReviewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type CartUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<CartCreateWithoutProductInput, CartUncheckedCreateWithoutProductInput> | CartCreateWithoutProductInput[] | CartUncheckedCreateWithoutProductInput[]
    connectOrCreate?: CartCreateOrConnectWithoutProductInput | CartCreateOrConnectWithoutProductInput[]
    upsert?: CartUpsertWithWhereUniqueWithoutProductInput | CartUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: CartCreateManyProductInputEnvelope
    set?: CartWhereUniqueInput | CartWhereUniqueInput[]
    disconnect?: CartWhereUniqueInput | CartWhereUniqueInput[]
    delete?: CartWhereUniqueInput | CartWhereUniqueInput[]
    connect?: CartWhereUniqueInput | CartWhereUniqueInput[]
    update?: CartUpdateWithWhereUniqueWithoutProductInput | CartUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: CartUpdateManyWithWhereWithoutProductInput | CartUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: CartScalarWhereInput | CartScalarWhereInput[]
  }

  export type VariasiUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<VariasiCreateWithoutProductInput, VariasiUncheckedCreateWithoutProductInput> | VariasiCreateWithoutProductInput[] | VariasiUncheckedCreateWithoutProductInput[]
    connectOrCreate?: VariasiCreateOrConnectWithoutProductInput | VariasiCreateOrConnectWithoutProductInput[]
    upsert?: VariasiUpsertWithWhereUniqueWithoutProductInput | VariasiUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: VariasiCreateManyProductInputEnvelope
    set?: VariasiWhereUniqueInput | VariasiWhereUniqueInput[]
    disconnect?: VariasiWhereUniqueInput | VariasiWhereUniqueInput[]
    delete?: VariasiWhereUniqueInput | VariasiWhereUniqueInput[]
    connect?: VariasiWhereUniqueInput | VariasiWhereUniqueInput[]
    update?: VariasiUpdateWithWhereUniqueWithoutProductInput | VariasiUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: VariasiUpdateManyWithWhereWithoutProductInput | VariasiUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: VariasiScalarWhereInput | VariasiScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutVariasiInput = {
    create?: XOR<ProductCreateWithoutVariasiInput, ProductUncheckedCreateWithoutVariasiInput>
    connectOrCreate?: ProductCreateOrConnectWithoutVariasiInput
    connect?: ProductWhereUniqueInput
  }

  export type CartCreateNestedManyWithoutVariasiInput = {
    create?: XOR<CartCreateWithoutVariasiInput, CartUncheckedCreateWithoutVariasiInput> | CartCreateWithoutVariasiInput[] | CartUncheckedCreateWithoutVariasiInput[]
    connectOrCreate?: CartCreateOrConnectWithoutVariasiInput | CartCreateOrConnectWithoutVariasiInput[]
    createMany?: CartCreateManyVariasiInputEnvelope
    connect?: CartWhereUniqueInput | CartWhereUniqueInput[]
  }

  export type CartUncheckedCreateNestedManyWithoutVariasiInput = {
    create?: XOR<CartCreateWithoutVariasiInput, CartUncheckedCreateWithoutVariasiInput> | CartCreateWithoutVariasiInput[] | CartUncheckedCreateWithoutVariasiInput[]
    connectOrCreate?: CartCreateOrConnectWithoutVariasiInput | CartCreateOrConnectWithoutVariasiInput[]
    createMany?: CartCreateManyVariasiInputEnvelope
    connect?: CartWhereUniqueInput | CartWhereUniqueInput[]
  }

  export type ProductUpdateOneRequiredWithoutVariasiNestedInput = {
    create?: XOR<ProductCreateWithoutVariasiInput, ProductUncheckedCreateWithoutVariasiInput>
    connectOrCreate?: ProductCreateOrConnectWithoutVariasiInput
    upsert?: ProductUpsertWithoutVariasiInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutVariasiInput, ProductUpdateWithoutVariasiInput>, ProductUncheckedUpdateWithoutVariasiInput>
  }

  export type CartUpdateManyWithoutVariasiNestedInput = {
    create?: XOR<CartCreateWithoutVariasiInput, CartUncheckedCreateWithoutVariasiInput> | CartCreateWithoutVariasiInput[] | CartUncheckedCreateWithoutVariasiInput[]
    connectOrCreate?: CartCreateOrConnectWithoutVariasiInput | CartCreateOrConnectWithoutVariasiInput[]
    upsert?: CartUpsertWithWhereUniqueWithoutVariasiInput | CartUpsertWithWhereUniqueWithoutVariasiInput[]
    createMany?: CartCreateManyVariasiInputEnvelope
    set?: CartWhereUniqueInput | CartWhereUniqueInput[]
    disconnect?: CartWhereUniqueInput | CartWhereUniqueInput[]
    delete?: CartWhereUniqueInput | CartWhereUniqueInput[]
    connect?: CartWhereUniqueInput | CartWhereUniqueInput[]
    update?: CartUpdateWithWhereUniqueWithoutVariasiInput | CartUpdateWithWhereUniqueWithoutVariasiInput[]
    updateMany?: CartUpdateManyWithWhereWithoutVariasiInput | CartUpdateManyWithWhereWithoutVariasiInput[]
    deleteMany?: CartScalarWhereInput | CartScalarWhereInput[]
  }

  export type CartUncheckedUpdateManyWithoutVariasiNestedInput = {
    create?: XOR<CartCreateWithoutVariasiInput, CartUncheckedCreateWithoutVariasiInput> | CartCreateWithoutVariasiInput[] | CartUncheckedCreateWithoutVariasiInput[]
    connectOrCreate?: CartCreateOrConnectWithoutVariasiInput | CartCreateOrConnectWithoutVariasiInput[]
    upsert?: CartUpsertWithWhereUniqueWithoutVariasiInput | CartUpsertWithWhereUniqueWithoutVariasiInput[]
    createMany?: CartCreateManyVariasiInputEnvelope
    set?: CartWhereUniqueInput | CartWhereUniqueInput[]
    disconnect?: CartWhereUniqueInput | CartWhereUniqueInput[]
    delete?: CartWhereUniqueInput | CartWhereUniqueInput[]
    connect?: CartWhereUniqueInput | CartWhereUniqueInput[]
    update?: CartUpdateWithWhereUniqueWithoutVariasiInput | CartUpdateWithWhereUniqueWithoutVariasiInput[]
    updateMany?: CartUpdateManyWithWhereWithoutVariasiInput | CartUpdateManyWithWhereWithoutVariasiInput[]
    deleteMany?: CartScalarWhereInput | CartScalarWhereInput[]
  }

  export type UsersCreateNestedOneWithoutTransaksiInput = {
    create?: XOR<UsersCreateWithoutTransaksiInput, UsersUncheckedCreateWithoutTransaksiInput>
    connectOrCreate?: UsersCreateOrConnectWithoutTransaksiInput
    connect?: UsersWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutTransaksiInput = {
    create?: XOR<ProductCreateWithoutTransaksiInput, ProductUncheckedCreateWithoutTransaksiInput>
    connectOrCreate?: ProductCreateOrConnectWithoutTransaksiInput
    connect?: ProductWhereUniqueInput
  }

  export type UsersUpdateOneRequiredWithoutTransaksiNestedInput = {
    create?: XOR<UsersCreateWithoutTransaksiInput, UsersUncheckedCreateWithoutTransaksiInput>
    connectOrCreate?: UsersCreateOrConnectWithoutTransaksiInput
    upsert?: UsersUpsertWithoutTransaksiInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutTransaksiInput, UsersUpdateWithoutTransaksiInput>, UsersUncheckedUpdateWithoutTransaksiInput>
  }

  export type ProductUpdateOneRequiredWithoutTransaksiNestedInput = {
    create?: XOR<ProductCreateWithoutTransaksiInput, ProductUncheckedCreateWithoutTransaksiInput>
    connectOrCreate?: ProductCreateOrConnectWithoutTransaksiInput
    upsert?: ProductUpsertWithoutTransaksiInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutTransaksiInput, ProductUpdateWithoutTransaksiInput>, ProductUncheckedUpdateWithoutTransaksiInput>
  }

  export type UsersCreateNestedOneWithoutReviewInput = {
    create?: XOR<UsersCreateWithoutReviewInput, UsersUncheckedCreateWithoutReviewInput>
    connectOrCreate?: UsersCreateOrConnectWithoutReviewInput
    connect?: UsersWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutReviewInput = {
    create?: XOR<ProductCreateWithoutReviewInput, ProductUncheckedCreateWithoutReviewInput>
    connectOrCreate?: ProductCreateOrConnectWithoutReviewInput
    connect?: ProductWhereUniqueInput
  }

  export type UsersUpdateOneRequiredWithoutReviewNestedInput = {
    create?: XOR<UsersCreateWithoutReviewInput, UsersUncheckedCreateWithoutReviewInput>
    connectOrCreate?: UsersCreateOrConnectWithoutReviewInput
    upsert?: UsersUpsertWithoutReviewInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutReviewInput, UsersUpdateWithoutReviewInput>, UsersUncheckedUpdateWithoutReviewInput>
  }

  export type ProductUpdateOneRequiredWithoutReviewNestedInput = {
    create?: XOR<ProductCreateWithoutReviewInput, ProductUncheckedCreateWithoutReviewInput>
    connectOrCreate?: ProductCreateOrConnectWithoutReviewInput
    upsert?: ProductUpsertWithoutReviewInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutReviewInput, ProductUpdateWithoutReviewInput>, ProductUncheckedUpdateWithoutReviewInput>
  }

  export type UsersCreateNestedOneWithoutCartInput = {
    create?: XOR<UsersCreateWithoutCartInput, UsersUncheckedCreateWithoutCartInput>
    connectOrCreate?: UsersCreateOrConnectWithoutCartInput
    connect?: UsersWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutCartInput = {
    create?: XOR<ProductCreateWithoutCartInput, ProductUncheckedCreateWithoutCartInput>
    connectOrCreate?: ProductCreateOrConnectWithoutCartInput
    connect?: ProductWhereUniqueInput
  }

  export type VariasiCreateNestedOneWithoutCartInput = {
    create?: XOR<VariasiCreateWithoutCartInput, VariasiUncheckedCreateWithoutCartInput>
    connectOrCreate?: VariasiCreateOrConnectWithoutCartInput
    connect?: VariasiWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UsersUpdateOneRequiredWithoutCartNestedInput = {
    create?: XOR<UsersCreateWithoutCartInput, UsersUncheckedCreateWithoutCartInput>
    connectOrCreate?: UsersCreateOrConnectWithoutCartInput
    upsert?: UsersUpsertWithoutCartInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutCartInput, UsersUpdateWithoutCartInput>, UsersUncheckedUpdateWithoutCartInput>
  }

  export type ProductUpdateOneRequiredWithoutCartNestedInput = {
    create?: XOR<ProductCreateWithoutCartInput, ProductUncheckedCreateWithoutCartInput>
    connectOrCreate?: ProductCreateOrConnectWithoutCartInput
    upsert?: ProductUpsertWithoutCartInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutCartInput, ProductUpdateWithoutCartInput>, ProductUncheckedUpdateWithoutCartInput>
  }

  export type VariasiUpdateOneRequiredWithoutCartNestedInput = {
    create?: XOR<VariasiCreateWithoutCartInput, VariasiUncheckedCreateWithoutCartInput>
    connectOrCreate?: VariasiCreateOrConnectWithoutCartInput
    upsert?: VariasiUpsertWithoutCartInput
    connect?: VariasiWhereUniqueInput
    update?: XOR<XOR<VariasiUpdateToOneWithWhereWithoutCartInput, VariasiUpdateWithoutCartInput>, VariasiUncheckedUpdateWithoutCartInput>
  }

  export type UsersCreateNestedOneWithoutAlamatInput = {
    create?: XOR<UsersCreateWithoutAlamatInput, UsersUncheckedCreateWithoutAlamatInput>
    connectOrCreate?: UsersCreateOrConnectWithoutAlamatInput
    connect?: UsersWhereUniqueInput
  }

  export type ProvinsiCreateNestedOneWithoutAlamatInput = {
    create?: XOR<ProvinsiCreateWithoutAlamatInput, ProvinsiUncheckedCreateWithoutAlamatInput>
    connectOrCreate?: ProvinsiCreateOrConnectWithoutAlamatInput
    connect?: ProvinsiWhereUniqueInput
  }

  export type KabupatenCreateNestedOneWithoutAlamatInput = {
    create?: XOR<KabupatenCreateWithoutAlamatInput, KabupatenUncheckedCreateWithoutAlamatInput>
    connectOrCreate?: KabupatenCreateOrConnectWithoutAlamatInput
    connect?: KabupatenWhereUniqueInput
  }

  export type KecamatanCreateNestedOneWithoutAlamatInput = {
    create?: XOR<KecamatanCreateWithoutAlamatInput, KecamatanUncheckedCreateWithoutAlamatInput>
    connectOrCreate?: KecamatanCreateOrConnectWithoutAlamatInput
    connect?: KecamatanWhereUniqueInput
  }

  export type DesaCreateNestedOneWithoutAlamatInput = {
    create?: XOR<DesaCreateWithoutAlamatInput, DesaUncheckedCreateWithoutAlamatInput>
    connectOrCreate?: DesaCreateOrConnectWithoutAlamatInput
    connect?: DesaWhereUniqueInput
  }

  export type UsersUpdateOneRequiredWithoutAlamatNestedInput = {
    create?: XOR<UsersCreateWithoutAlamatInput, UsersUncheckedCreateWithoutAlamatInput>
    connectOrCreate?: UsersCreateOrConnectWithoutAlamatInput
    upsert?: UsersUpsertWithoutAlamatInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutAlamatInput, UsersUpdateWithoutAlamatInput>, UsersUncheckedUpdateWithoutAlamatInput>
  }

  export type ProvinsiUpdateOneRequiredWithoutAlamatNestedInput = {
    create?: XOR<ProvinsiCreateWithoutAlamatInput, ProvinsiUncheckedCreateWithoutAlamatInput>
    connectOrCreate?: ProvinsiCreateOrConnectWithoutAlamatInput
    upsert?: ProvinsiUpsertWithoutAlamatInput
    connect?: ProvinsiWhereUniqueInput
    update?: XOR<XOR<ProvinsiUpdateToOneWithWhereWithoutAlamatInput, ProvinsiUpdateWithoutAlamatInput>, ProvinsiUncheckedUpdateWithoutAlamatInput>
  }

  export type KabupatenUpdateOneRequiredWithoutAlamatNestedInput = {
    create?: XOR<KabupatenCreateWithoutAlamatInput, KabupatenUncheckedCreateWithoutAlamatInput>
    connectOrCreate?: KabupatenCreateOrConnectWithoutAlamatInput
    upsert?: KabupatenUpsertWithoutAlamatInput
    connect?: KabupatenWhereUniqueInput
    update?: XOR<XOR<KabupatenUpdateToOneWithWhereWithoutAlamatInput, KabupatenUpdateWithoutAlamatInput>, KabupatenUncheckedUpdateWithoutAlamatInput>
  }

  export type KecamatanUpdateOneRequiredWithoutAlamatNestedInput = {
    create?: XOR<KecamatanCreateWithoutAlamatInput, KecamatanUncheckedCreateWithoutAlamatInput>
    connectOrCreate?: KecamatanCreateOrConnectWithoutAlamatInput
    upsert?: KecamatanUpsertWithoutAlamatInput
    connect?: KecamatanWhereUniqueInput
    update?: XOR<XOR<KecamatanUpdateToOneWithWhereWithoutAlamatInput, KecamatanUpdateWithoutAlamatInput>, KecamatanUncheckedUpdateWithoutAlamatInput>
  }

  export type DesaUpdateOneRequiredWithoutAlamatNestedInput = {
    create?: XOR<DesaCreateWithoutAlamatInput, DesaUncheckedCreateWithoutAlamatInput>
    connectOrCreate?: DesaCreateOrConnectWithoutAlamatInput
    upsert?: DesaUpsertWithoutAlamatInput
    connect?: DesaWhereUniqueInput
    update?: XOR<XOR<DesaUpdateToOneWithWhereWithoutAlamatInput, DesaUpdateWithoutAlamatInput>, DesaUncheckedUpdateWithoutAlamatInput>
  }

  export type KabupatenCreateNestedManyWithoutProvinsiInput = {
    create?: XOR<KabupatenCreateWithoutProvinsiInput, KabupatenUncheckedCreateWithoutProvinsiInput> | KabupatenCreateWithoutProvinsiInput[] | KabupatenUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: KabupatenCreateOrConnectWithoutProvinsiInput | KabupatenCreateOrConnectWithoutProvinsiInput[]
    createMany?: KabupatenCreateManyProvinsiInputEnvelope
    connect?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
  }

  export type AlamatCreateNestedManyWithoutProvinsiInput = {
    create?: XOR<AlamatCreateWithoutProvinsiInput, AlamatUncheckedCreateWithoutProvinsiInput> | AlamatCreateWithoutProvinsiInput[] | AlamatUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutProvinsiInput | AlamatCreateOrConnectWithoutProvinsiInput[]
    createMany?: AlamatCreateManyProvinsiInputEnvelope
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
  }

  export type KabupatenUncheckedCreateNestedManyWithoutProvinsiInput = {
    create?: XOR<KabupatenCreateWithoutProvinsiInput, KabupatenUncheckedCreateWithoutProvinsiInput> | KabupatenCreateWithoutProvinsiInput[] | KabupatenUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: KabupatenCreateOrConnectWithoutProvinsiInput | KabupatenCreateOrConnectWithoutProvinsiInput[]
    createMany?: KabupatenCreateManyProvinsiInputEnvelope
    connect?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
  }

  export type AlamatUncheckedCreateNestedManyWithoutProvinsiInput = {
    create?: XOR<AlamatCreateWithoutProvinsiInput, AlamatUncheckedCreateWithoutProvinsiInput> | AlamatCreateWithoutProvinsiInput[] | AlamatUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutProvinsiInput | AlamatCreateOrConnectWithoutProvinsiInput[]
    createMany?: AlamatCreateManyProvinsiInputEnvelope
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
  }

  export type KabupatenUpdateManyWithoutProvinsiNestedInput = {
    create?: XOR<KabupatenCreateWithoutProvinsiInput, KabupatenUncheckedCreateWithoutProvinsiInput> | KabupatenCreateWithoutProvinsiInput[] | KabupatenUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: KabupatenCreateOrConnectWithoutProvinsiInput | KabupatenCreateOrConnectWithoutProvinsiInput[]
    upsert?: KabupatenUpsertWithWhereUniqueWithoutProvinsiInput | KabupatenUpsertWithWhereUniqueWithoutProvinsiInput[]
    createMany?: KabupatenCreateManyProvinsiInputEnvelope
    set?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    disconnect?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    delete?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    connect?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    update?: KabupatenUpdateWithWhereUniqueWithoutProvinsiInput | KabupatenUpdateWithWhereUniqueWithoutProvinsiInput[]
    updateMany?: KabupatenUpdateManyWithWhereWithoutProvinsiInput | KabupatenUpdateManyWithWhereWithoutProvinsiInput[]
    deleteMany?: KabupatenScalarWhereInput | KabupatenScalarWhereInput[]
  }

  export type AlamatUpdateManyWithoutProvinsiNestedInput = {
    create?: XOR<AlamatCreateWithoutProvinsiInput, AlamatUncheckedCreateWithoutProvinsiInput> | AlamatCreateWithoutProvinsiInput[] | AlamatUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutProvinsiInput | AlamatCreateOrConnectWithoutProvinsiInput[]
    upsert?: AlamatUpsertWithWhereUniqueWithoutProvinsiInput | AlamatUpsertWithWhereUniqueWithoutProvinsiInput[]
    createMany?: AlamatCreateManyProvinsiInputEnvelope
    set?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    disconnect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    delete?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    update?: AlamatUpdateWithWhereUniqueWithoutProvinsiInput | AlamatUpdateWithWhereUniqueWithoutProvinsiInput[]
    updateMany?: AlamatUpdateManyWithWhereWithoutProvinsiInput | AlamatUpdateManyWithWhereWithoutProvinsiInput[]
    deleteMany?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
  }

  export type KabupatenUncheckedUpdateManyWithoutProvinsiNestedInput = {
    create?: XOR<KabupatenCreateWithoutProvinsiInput, KabupatenUncheckedCreateWithoutProvinsiInput> | KabupatenCreateWithoutProvinsiInput[] | KabupatenUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: KabupatenCreateOrConnectWithoutProvinsiInput | KabupatenCreateOrConnectWithoutProvinsiInput[]
    upsert?: KabupatenUpsertWithWhereUniqueWithoutProvinsiInput | KabupatenUpsertWithWhereUniqueWithoutProvinsiInput[]
    createMany?: KabupatenCreateManyProvinsiInputEnvelope
    set?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    disconnect?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    delete?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    connect?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    update?: KabupatenUpdateWithWhereUniqueWithoutProvinsiInput | KabupatenUpdateWithWhereUniqueWithoutProvinsiInput[]
    updateMany?: KabupatenUpdateManyWithWhereWithoutProvinsiInput | KabupatenUpdateManyWithWhereWithoutProvinsiInput[]
    deleteMany?: KabupatenScalarWhereInput | KabupatenScalarWhereInput[]
  }

  export type AlamatUncheckedUpdateManyWithoutProvinsiNestedInput = {
    create?: XOR<AlamatCreateWithoutProvinsiInput, AlamatUncheckedCreateWithoutProvinsiInput> | AlamatCreateWithoutProvinsiInput[] | AlamatUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutProvinsiInput | AlamatCreateOrConnectWithoutProvinsiInput[]
    upsert?: AlamatUpsertWithWhereUniqueWithoutProvinsiInput | AlamatUpsertWithWhereUniqueWithoutProvinsiInput[]
    createMany?: AlamatCreateManyProvinsiInputEnvelope
    set?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    disconnect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    delete?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    update?: AlamatUpdateWithWhereUniqueWithoutProvinsiInput | AlamatUpdateWithWhereUniqueWithoutProvinsiInput[]
    updateMany?: AlamatUpdateManyWithWhereWithoutProvinsiInput | AlamatUpdateManyWithWhereWithoutProvinsiInput[]
    deleteMany?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
  }

  export type ProvinsiCreateNestedOneWithoutKabupatenInput = {
    create?: XOR<ProvinsiCreateWithoutKabupatenInput, ProvinsiUncheckedCreateWithoutKabupatenInput>
    connectOrCreate?: ProvinsiCreateOrConnectWithoutKabupatenInput
    connect?: ProvinsiWhereUniqueInput
  }

  export type KecamatanCreateNestedManyWithoutKabupatenInput = {
    create?: XOR<KecamatanCreateWithoutKabupatenInput, KecamatanUncheckedCreateWithoutKabupatenInput> | KecamatanCreateWithoutKabupatenInput[] | KecamatanUncheckedCreateWithoutKabupatenInput[]
    connectOrCreate?: KecamatanCreateOrConnectWithoutKabupatenInput | KecamatanCreateOrConnectWithoutKabupatenInput[]
    createMany?: KecamatanCreateManyKabupatenInputEnvelope
    connect?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
  }

  export type AlamatCreateNestedManyWithoutKabupatenInput = {
    create?: XOR<AlamatCreateWithoutKabupatenInput, AlamatUncheckedCreateWithoutKabupatenInput> | AlamatCreateWithoutKabupatenInput[] | AlamatUncheckedCreateWithoutKabupatenInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutKabupatenInput | AlamatCreateOrConnectWithoutKabupatenInput[]
    createMany?: AlamatCreateManyKabupatenInputEnvelope
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
  }

  export type KecamatanUncheckedCreateNestedManyWithoutKabupatenInput = {
    create?: XOR<KecamatanCreateWithoutKabupatenInput, KecamatanUncheckedCreateWithoutKabupatenInput> | KecamatanCreateWithoutKabupatenInput[] | KecamatanUncheckedCreateWithoutKabupatenInput[]
    connectOrCreate?: KecamatanCreateOrConnectWithoutKabupatenInput | KecamatanCreateOrConnectWithoutKabupatenInput[]
    createMany?: KecamatanCreateManyKabupatenInputEnvelope
    connect?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
  }

  export type AlamatUncheckedCreateNestedManyWithoutKabupatenInput = {
    create?: XOR<AlamatCreateWithoutKabupatenInput, AlamatUncheckedCreateWithoutKabupatenInput> | AlamatCreateWithoutKabupatenInput[] | AlamatUncheckedCreateWithoutKabupatenInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutKabupatenInput | AlamatCreateOrConnectWithoutKabupatenInput[]
    createMany?: AlamatCreateManyKabupatenInputEnvelope
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
  }

  export type ProvinsiUpdateOneRequiredWithoutKabupatenNestedInput = {
    create?: XOR<ProvinsiCreateWithoutKabupatenInput, ProvinsiUncheckedCreateWithoutKabupatenInput>
    connectOrCreate?: ProvinsiCreateOrConnectWithoutKabupatenInput
    upsert?: ProvinsiUpsertWithoutKabupatenInput
    connect?: ProvinsiWhereUniqueInput
    update?: XOR<XOR<ProvinsiUpdateToOneWithWhereWithoutKabupatenInput, ProvinsiUpdateWithoutKabupatenInput>, ProvinsiUncheckedUpdateWithoutKabupatenInput>
  }

  export type KecamatanUpdateManyWithoutKabupatenNestedInput = {
    create?: XOR<KecamatanCreateWithoutKabupatenInput, KecamatanUncheckedCreateWithoutKabupatenInput> | KecamatanCreateWithoutKabupatenInput[] | KecamatanUncheckedCreateWithoutKabupatenInput[]
    connectOrCreate?: KecamatanCreateOrConnectWithoutKabupatenInput | KecamatanCreateOrConnectWithoutKabupatenInput[]
    upsert?: KecamatanUpsertWithWhereUniqueWithoutKabupatenInput | KecamatanUpsertWithWhereUniqueWithoutKabupatenInput[]
    createMany?: KecamatanCreateManyKabupatenInputEnvelope
    set?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    disconnect?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    delete?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    connect?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    update?: KecamatanUpdateWithWhereUniqueWithoutKabupatenInput | KecamatanUpdateWithWhereUniqueWithoutKabupatenInput[]
    updateMany?: KecamatanUpdateManyWithWhereWithoutKabupatenInput | KecamatanUpdateManyWithWhereWithoutKabupatenInput[]
    deleteMany?: KecamatanScalarWhereInput | KecamatanScalarWhereInput[]
  }

  export type AlamatUpdateManyWithoutKabupatenNestedInput = {
    create?: XOR<AlamatCreateWithoutKabupatenInput, AlamatUncheckedCreateWithoutKabupatenInput> | AlamatCreateWithoutKabupatenInput[] | AlamatUncheckedCreateWithoutKabupatenInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutKabupatenInput | AlamatCreateOrConnectWithoutKabupatenInput[]
    upsert?: AlamatUpsertWithWhereUniqueWithoutKabupatenInput | AlamatUpsertWithWhereUniqueWithoutKabupatenInput[]
    createMany?: AlamatCreateManyKabupatenInputEnvelope
    set?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    disconnect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    delete?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    update?: AlamatUpdateWithWhereUniqueWithoutKabupatenInput | AlamatUpdateWithWhereUniqueWithoutKabupatenInput[]
    updateMany?: AlamatUpdateManyWithWhereWithoutKabupatenInput | AlamatUpdateManyWithWhereWithoutKabupatenInput[]
    deleteMany?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
  }

  export type KecamatanUncheckedUpdateManyWithoutKabupatenNestedInput = {
    create?: XOR<KecamatanCreateWithoutKabupatenInput, KecamatanUncheckedCreateWithoutKabupatenInput> | KecamatanCreateWithoutKabupatenInput[] | KecamatanUncheckedCreateWithoutKabupatenInput[]
    connectOrCreate?: KecamatanCreateOrConnectWithoutKabupatenInput | KecamatanCreateOrConnectWithoutKabupatenInput[]
    upsert?: KecamatanUpsertWithWhereUniqueWithoutKabupatenInput | KecamatanUpsertWithWhereUniqueWithoutKabupatenInput[]
    createMany?: KecamatanCreateManyKabupatenInputEnvelope
    set?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    disconnect?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    delete?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    connect?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    update?: KecamatanUpdateWithWhereUniqueWithoutKabupatenInput | KecamatanUpdateWithWhereUniqueWithoutKabupatenInput[]
    updateMany?: KecamatanUpdateManyWithWhereWithoutKabupatenInput | KecamatanUpdateManyWithWhereWithoutKabupatenInput[]
    deleteMany?: KecamatanScalarWhereInput | KecamatanScalarWhereInput[]
  }

  export type AlamatUncheckedUpdateManyWithoutKabupatenNestedInput = {
    create?: XOR<AlamatCreateWithoutKabupatenInput, AlamatUncheckedCreateWithoutKabupatenInput> | AlamatCreateWithoutKabupatenInput[] | AlamatUncheckedCreateWithoutKabupatenInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutKabupatenInput | AlamatCreateOrConnectWithoutKabupatenInput[]
    upsert?: AlamatUpsertWithWhereUniqueWithoutKabupatenInput | AlamatUpsertWithWhereUniqueWithoutKabupatenInput[]
    createMany?: AlamatCreateManyKabupatenInputEnvelope
    set?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    disconnect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    delete?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    update?: AlamatUpdateWithWhereUniqueWithoutKabupatenInput | AlamatUpdateWithWhereUniqueWithoutKabupatenInput[]
    updateMany?: AlamatUpdateManyWithWhereWithoutKabupatenInput | AlamatUpdateManyWithWhereWithoutKabupatenInput[]
    deleteMany?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
  }

  export type KabupatenCreateNestedOneWithoutKecamatanInput = {
    create?: XOR<KabupatenCreateWithoutKecamatanInput, KabupatenUncheckedCreateWithoutKecamatanInput>
    connectOrCreate?: KabupatenCreateOrConnectWithoutKecamatanInput
    connect?: KabupatenWhereUniqueInput
  }

  export type DesaCreateNestedManyWithoutKecamatanInput = {
    create?: XOR<DesaCreateWithoutKecamatanInput, DesaUncheckedCreateWithoutKecamatanInput> | DesaCreateWithoutKecamatanInput[] | DesaUncheckedCreateWithoutKecamatanInput[]
    connectOrCreate?: DesaCreateOrConnectWithoutKecamatanInput | DesaCreateOrConnectWithoutKecamatanInput[]
    createMany?: DesaCreateManyKecamatanInputEnvelope
    connect?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
  }

  export type AlamatCreateNestedManyWithoutKecamatanInput = {
    create?: XOR<AlamatCreateWithoutKecamatanInput, AlamatUncheckedCreateWithoutKecamatanInput> | AlamatCreateWithoutKecamatanInput[] | AlamatUncheckedCreateWithoutKecamatanInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutKecamatanInput | AlamatCreateOrConnectWithoutKecamatanInput[]
    createMany?: AlamatCreateManyKecamatanInputEnvelope
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
  }

  export type DesaUncheckedCreateNestedManyWithoutKecamatanInput = {
    create?: XOR<DesaCreateWithoutKecamatanInput, DesaUncheckedCreateWithoutKecamatanInput> | DesaCreateWithoutKecamatanInput[] | DesaUncheckedCreateWithoutKecamatanInput[]
    connectOrCreate?: DesaCreateOrConnectWithoutKecamatanInput | DesaCreateOrConnectWithoutKecamatanInput[]
    createMany?: DesaCreateManyKecamatanInputEnvelope
    connect?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
  }

  export type AlamatUncheckedCreateNestedManyWithoutKecamatanInput = {
    create?: XOR<AlamatCreateWithoutKecamatanInput, AlamatUncheckedCreateWithoutKecamatanInput> | AlamatCreateWithoutKecamatanInput[] | AlamatUncheckedCreateWithoutKecamatanInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutKecamatanInput | AlamatCreateOrConnectWithoutKecamatanInput[]
    createMany?: AlamatCreateManyKecamatanInputEnvelope
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
  }

  export type KabupatenUpdateOneRequiredWithoutKecamatanNestedInput = {
    create?: XOR<KabupatenCreateWithoutKecamatanInput, KabupatenUncheckedCreateWithoutKecamatanInput>
    connectOrCreate?: KabupatenCreateOrConnectWithoutKecamatanInput
    upsert?: KabupatenUpsertWithoutKecamatanInput
    connect?: KabupatenWhereUniqueInput
    update?: XOR<XOR<KabupatenUpdateToOneWithWhereWithoutKecamatanInput, KabupatenUpdateWithoutKecamatanInput>, KabupatenUncheckedUpdateWithoutKecamatanInput>
  }

  export type DesaUpdateManyWithoutKecamatanNestedInput = {
    create?: XOR<DesaCreateWithoutKecamatanInput, DesaUncheckedCreateWithoutKecamatanInput> | DesaCreateWithoutKecamatanInput[] | DesaUncheckedCreateWithoutKecamatanInput[]
    connectOrCreate?: DesaCreateOrConnectWithoutKecamatanInput | DesaCreateOrConnectWithoutKecamatanInput[]
    upsert?: DesaUpsertWithWhereUniqueWithoutKecamatanInput | DesaUpsertWithWhereUniqueWithoutKecamatanInput[]
    createMany?: DesaCreateManyKecamatanInputEnvelope
    set?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    disconnect?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    delete?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    connect?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    update?: DesaUpdateWithWhereUniqueWithoutKecamatanInput | DesaUpdateWithWhereUniqueWithoutKecamatanInput[]
    updateMany?: DesaUpdateManyWithWhereWithoutKecamatanInput | DesaUpdateManyWithWhereWithoutKecamatanInput[]
    deleteMany?: DesaScalarWhereInput | DesaScalarWhereInput[]
  }

  export type AlamatUpdateManyWithoutKecamatanNestedInput = {
    create?: XOR<AlamatCreateWithoutKecamatanInput, AlamatUncheckedCreateWithoutKecamatanInput> | AlamatCreateWithoutKecamatanInput[] | AlamatUncheckedCreateWithoutKecamatanInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutKecamatanInput | AlamatCreateOrConnectWithoutKecamatanInput[]
    upsert?: AlamatUpsertWithWhereUniqueWithoutKecamatanInput | AlamatUpsertWithWhereUniqueWithoutKecamatanInput[]
    createMany?: AlamatCreateManyKecamatanInputEnvelope
    set?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    disconnect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    delete?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    update?: AlamatUpdateWithWhereUniqueWithoutKecamatanInput | AlamatUpdateWithWhereUniqueWithoutKecamatanInput[]
    updateMany?: AlamatUpdateManyWithWhereWithoutKecamatanInput | AlamatUpdateManyWithWhereWithoutKecamatanInput[]
    deleteMany?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
  }

  export type DesaUncheckedUpdateManyWithoutKecamatanNestedInput = {
    create?: XOR<DesaCreateWithoutKecamatanInput, DesaUncheckedCreateWithoutKecamatanInput> | DesaCreateWithoutKecamatanInput[] | DesaUncheckedCreateWithoutKecamatanInput[]
    connectOrCreate?: DesaCreateOrConnectWithoutKecamatanInput | DesaCreateOrConnectWithoutKecamatanInput[]
    upsert?: DesaUpsertWithWhereUniqueWithoutKecamatanInput | DesaUpsertWithWhereUniqueWithoutKecamatanInput[]
    createMany?: DesaCreateManyKecamatanInputEnvelope
    set?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    disconnect?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    delete?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    connect?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    update?: DesaUpdateWithWhereUniqueWithoutKecamatanInput | DesaUpdateWithWhereUniqueWithoutKecamatanInput[]
    updateMany?: DesaUpdateManyWithWhereWithoutKecamatanInput | DesaUpdateManyWithWhereWithoutKecamatanInput[]
    deleteMany?: DesaScalarWhereInput | DesaScalarWhereInput[]
  }

  export type AlamatUncheckedUpdateManyWithoutKecamatanNestedInput = {
    create?: XOR<AlamatCreateWithoutKecamatanInput, AlamatUncheckedCreateWithoutKecamatanInput> | AlamatCreateWithoutKecamatanInput[] | AlamatUncheckedCreateWithoutKecamatanInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutKecamatanInput | AlamatCreateOrConnectWithoutKecamatanInput[]
    upsert?: AlamatUpsertWithWhereUniqueWithoutKecamatanInput | AlamatUpsertWithWhereUniqueWithoutKecamatanInput[]
    createMany?: AlamatCreateManyKecamatanInputEnvelope
    set?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    disconnect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    delete?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    update?: AlamatUpdateWithWhereUniqueWithoutKecamatanInput | AlamatUpdateWithWhereUniqueWithoutKecamatanInput[]
    updateMany?: AlamatUpdateManyWithWhereWithoutKecamatanInput | AlamatUpdateManyWithWhereWithoutKecamatanInput[]
    deleteMany?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
  }

  export type KecamatanCreateNestedOneWithoutDesaInput = {
    create?: XOR<KecamatanCreateWithoutDesaInput, KecamatanUncheckedCreateWithoutDesaInput>
    connectOrCreate?: KecamatanCreateOrConnectWithoutDesaInput
    connect?: KecamatanWhereUniqueInput
  }

  export type AlamatCreateNestedManyWithoutDesaInput = {
    create?: XOR<AlamatCreateWithoutDesaInput, AlamatUncheckedCreateWithoutDesaInput> | AlamatCreateWithoutDesaInput[] | AlamatUncheckedCreateWithoutDesaInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutDesaInput | AlamatCreateOrConnectWithoutDesaInput[]
    createMany?: AlamatCreateManyDesaInputEnvelope
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
  }

  export type AlamatUncheckedCreateNestedManyWithoutDesaInput = {
    create?: XOR<AlamatCreateWithoutDesaInput, AlamatUncheckedCreateWithoutDesaInput> | AlamatCreateWithoutDesaInput[] | AlamatUncheckedCreateWithoutDesaInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutDesaInput | AlamatCreateOrConnectWithoutDesaInput[]
    createMany?: AlamatCreateManyDesaInputEnvelope
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
  }

  export type KecamatanUpdateOneRequiredWithoutDesaNestedInput = {
    create?: XOR<KecamatanCreateWithoutDesaInput, KecamatanUncheckedCreateWithoutDesaInput>
    connectOrCreate?: KecamatanCreateOrConnectWithoutDesaInput
    upsert?: KecamatanUpsertWithoutDesaInput
    connect?: KecamatanWhereUniqueInput
    update?: XOR<XOR<KecamatanUpdateToOneWithWhereWithoutDesaInput, KecamatanUpdateWithoutDesaInput>, KecamatanUncheckedUpdateWithoutDesaInput>
  }

  export type AlamatUpdateManyWithoutDesaNestedInput = {
    create?: XOR<AlamatCreateWithoutDesaInput, AlamatUncheckedCreateWithoutDesaInput> | AlamatCreateWithoutDesaInput[] | AlamatUncheckedCreateWithoutDesaInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutDesaInput | AlamatCreateOrConnectWithoutDesaInput[]
    upsert?: AlamatUpsertWithWhereUniqueWithoutDesaInput | AlamatUpsertWithWhereUniqueWithoutDesaInput[]
    createMany?: AlamatCreateManyDesaInputEnvelope
    set?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    disconnect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    delete?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    update?: AlamatUpdateWithWhereUniqueWithoutDesaInput | AlamatUpdateWithWhereUniqueWithoutDesaInput[]
    updateMany?: AlamatUpdateManyWithWhereWithoutDesaInput | AlamatUpdateManyWithWhereWithoutDesaInput[]
    deleteMany?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
  }

  export type AlamatUncheckedUpdateManyWithoutDesaNestedInput = {
    create?: XOR<AlamatCreateWithoutDesaInput, AlamatUncheckedCreateWithoutDesaInput> | AlamatCreateWithoutDesaInput[] | AlamatUncheckedCreateWithoutDesaInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutDesaInput | AlamatCreateOrConnectWithoutDesaInput[]
    upsert?: AlamatUpsertWithWhereUniqueWithoutDesaInput | AlamatUpsertWithWhereUniqueWithoutDesaInput[]
    createMany?: AlamatCreateManyDesaInputEnvelope
    set?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    disconnect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    delete?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    update?: AlamatUpdateWithWhereUniqueWithoutDesaInput | AlamatUpdateWithWhereUniqueWithoutDesaInput[]
    updateMany?: AlamatUpdateManyWithWhereWithoutDesaInput | AlamatUpdateManyWithWhereWithoutDesaInput[]
    deleteMany?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type AlamatCreateWithoutUsersInput = {
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
    provinsi: ProvinsiCreateNestedOneWithoutAlamatInput
    kabupaten: KabupatenCreateNestedOneWithoutAlamatInput
    kecamatan: KecamatanCreateNestedOneWithoutAlamatInput
    desa: DesaCreateNestedOneWithoutAlamatInput
  }

  export type AlamatUncheckedCreateWithoutUsersInput = {
    id?: number
    kodeProv: string
    kodeKab: string
    kodeKec: string
    kodeDesa: string
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
  }

  export type AlamatCreateOrConnectWithoutUsersInput = {
    where: AlamatWhereUniqueInput
    create: XOR<AlamatCreateWithoutUsersInput, AlamatUncheckedCreateWithoutUsersInput>
  }

  export type AlamatCreateManyUsersInputEnvelope = {
    data: AlamatCreateManyUsersInput | AlamatCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutUserInput = {
    nama: string
    desc: string
    path: string
    transaksi?: TransaksiCreateNestedManyWithoutProductInput
    review?: ReviewCreateNestedManyWithoutProductInput
    cart?: CartCreateNestedManyWithoutProductInput
    variasi?: VariasiCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutUserInput = {
    id?: number
    nama: string
    desc: string
    path: string
    transaksi?: TransaksiUncheckedCreateNestedManyWithoutProductInput
    review?: ReviewUncheckedCreateNestedManyWithoutProductInput
    cart?: CartUncheckedCreateNestedManyWithoutProductInput
    variasi?: VariasiUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutUserInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutUserInput, ProductUncheckedCreateWithoutUserInput>
  }

  export type ProductCreateManyUserInputEnvelope = {
    data: ProductCreateManyUserInput | ProductCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type TransaksiCreateWithoutUserInput = {
    status: number
    product: ProductCreateNestedOneWithoutTransaksiInput
  }

  export type TransaksiUncheckedCreateWithoutUserInput = {
    id?: number
    productId: number
    status: number
  }

  export type TransaksiCreateOrConnectWithoutUserInput = {
    where: TransaksiWhereUniqueInput
    create: XOR<TransaksiCreateWithoutUserInput, TransaksiUncheckedCreateWithoutUserInput>
  }

  export type TransaksiCreateManyUserInputEnvelope = {
    data: TransaksiCreateManyUserInput | TransaksiCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutUserInput = {
    review: string
    rating: number
    time?: Date | string | null
    product: ProductCreateNestedOneWithoutReviewInput
  }

  export type ReviewUncheckedCreateWithoutUserInput = {
    id?: number
    productId: number
    review: string
    rating: number
    time?: Date | string | null
  }

  export type ReviewCreateOrConnectWithoutUserInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput>
  }

  export type ReviewCreateManyUserInputEnvelope = {
    data: ReviewCreateManyUserInput | ReviewCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CartCreateWithoutUserInput = {
    quantity: number
    time: Date | string
    product: ProductCreateNestedOneWithoutCartInput
    variasi: VariasiCreateNestedOneWithoutCartInput
  }

  export type CartUncheckedCreateWithoutUserInput = {
    id?: number
    productId: number
    variasiId: number
    quantity: number
    time: Date | string
  }

  export type CartCreateOrConnectWithoutUserInput = {
    where: CartWhereUniqueInput
    create: XOR<CartCreateWithoutUserInput, CartUncheckedCreateWithoutUserInput>
  }

  export type CartCreateManyUserInputEnvelope = {
    data: CartCreateManyUserInput | CartCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AlamatUpsertWithWhereUniqueWithoutUsersInput = {
    where: AlamatWhereUniqueInput
    update: XOR<AlamatUpdateWithoutUsersInput, AlamatUncheckedUpdateWithoutUsersInput>
    create: XOR<AlamatCreateWithoutUsersInput, AlamatUncheckedCreateWithoutUsersInput>
  }

  export type AlamatUpdateWithWhereUniqueWithoutUsersInput = {
    where: AlamatWhereUniqueInput
    data: XOR<AlamatUpdateWithoutUsersInput, AlamatUncheckedUpdateWithoutUsersInput>
  }

  export type AlamatUpdateManyWithWhereWithoutUsersInput = {
    where: AlamatScalarWhereInput
    data: XOR<AlamatUpdateManyMutationInput, AlamatUncheckedUpdateManyWithoutUsersInput>
  }

  export type AlamatScalarWhereInput = {
    AND?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
    OR?: AlamatScalarWhereInput[]
    NOT?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
    id?: IntFilter<"Alamat"> | number
    userId?: IntFilter<"Alamat"> | number
    kodeProv?: StringFilter<"Alamat"> | string
    kodeKab?: StringFilter<"Alamat"> | string
    kodeKec?: StringFilter<"Alamat"> | string
    kodeDesa?: StringFilter<"Alamat"> | string
    kodePos?: StringFilter<"Alamat"> | string
    detail?: StringFilter<"Alamat"> | string
    catatan?: StringFilter<"Alamat"> | string
    is_toko?: IntFilter<"Alamat"> | number
    is_default?: IntFilter<"Alamat"> | number
  }

  export type ProductUpsertWithWhereUniqueWithoutUserInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutUserInput, ProductUncheckedUpdateWithoutUserInput>
    create: XOR<ProductCreateWithoutUserInput, ProductUncheckedCreateWithoutUserInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutUserInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutUserInput, ProductUncheckedUpdateWithoutUserInput>
  }

  export type ProductUpdateManyWithWhereWithoutUserInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutUserInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: IntFilter<"Product"> | number
    userId?: IntFilter<"Product"> | number
    nama?: StringFilter<"Product"> | string
    desc?: StringFilter<"Product"> | string
    path?: StringFilter<"Product"> | string
  }

  export type TransaksiUpsertWithWhereUniqueWithoutUserInput = {
    where: TransaksiWhereUniqueInput
    update: XOR<TransaksiUpdateWithoutUserInput, TransaksiUncheckedUpdateWithoutUserInput>
    create: XOR<TransaksiCreateWithoutUserInput, TransaksiUncheckedCreateWithoutUserInput>
  }

  export type TransaksiUpdateWithWhereUniqueWithoutUserInput = {
    where: TransaksiWhereUniqueInput
    data: XOR<TransaksiUpdateWithoutUserInput, TransaksiUncheckedUpdateWithoutUserInput>
  }

  export type TransaksiUpdateManyWithWhereWithoutUserInput = {
    where: TransaksiScalarWhereInput
    data: XOR<TransaksiUpdateManyMutationInput, TransaksiUncheckedUpdateManyWithoutUserInput>
  }

  export type TransaksiScalarWhereInput = {
    AND?: TransaksiScalarWhereInput | TransaksiScalarWhereInput[]
    OR?: TransaksiScalarWhereInput[]
    NOT?: TransaksiScalarWhereInput | TransaksiScalarWhereInput[]
    id?: IntFilter<"Transaksi"> | number
    userId?: IntFilter<"Transaksi"> | number
    productId?: IntFilter<"Transaksi"> | number
    status?: IntFilter<"Transaksi"> | number
  }

  export type ReviewUpsertWithWhereUniqueWithoutUserInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutUserInput, ReviewUncheckedUpdateWithoutUserInput>
    create: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutUserInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutUserInput, ReviewUncheckedUpdateWithoutUserInput>
  }

  export type ReviewUpdateManyWithWhereWithoutUserInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutUserInput>
  }

  export type ReviewScalarWhereInput = {
    AND?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    OR?: ReviewScalarWhereInput[]
    NOT?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    id?: IntFilter<"Review"> | number
    userId?: IntFilter<"Review"> | number
    productId?: IntFilter<"Review"> | number
    review?: StringFilter<"Review"> | string
    rating?: FloatFilter<"Review"> | number
    time?: DateTimeNullableFilter<"Review"> | Date | string | null
  }

  export type CartUpsertWithWhereUniqueWithoutUserInput = {
    where: CartWhereUniqueInput
    update: XOR<CartUpdateWithoutUserInput, CartUncheckedUpdateWithoutUserInput>
    create: XOR<CartCreateWithoutUserInput, CartUncheckedCreateWithoutUserInput>
  }

  export type CartUpdateWithWhereUniqueWithoutUserInput = {
    where: CartWhereUniqueInput
    data: XOR<CartUpdateWithoutUserInput, CartUncheckedUpdateWithoutUserInput>
  }

  export type CartUpdateManyWithWhereWithoutUserInput = {
    where: CartScalarWhereInput
    data: XOR<CartUpdateManyMutationInput, CartUncheckedUpdateManyWithoutUserInput>
  }

  export type CartScalarWhereInput = {
    AND?: CartScalarWhereInput | CartScalarWhereInput[]
    OR?: CartScalarWhereInput[]
    NOT?: CartScalarWhereInput | CartScalarWhereInput[]
    id?: IntFilter<"Cart"> | number
    userId?: IntFilter<"Cart"> | number
    productId?: IntFilter<"Cart"> | number
    variasiId?: IntFilter<"Cart"> | number
    quantity?: IntFilter<"Cart"> | number
    time?: DateTimeFilter<"Cart"> | Date | string
  }

  export type UsersCreateWithoutProductInput = {
    email: string
    password: string
    firstName: string
    lastName: string
    gender?: number
    role?: number
    telp?: string
    buka_toko?: number
    nama_toko?: string
    klasifikasi_toko?: number
    rating_toko?: number
    time_pengajuan?: Date | string | null
    time_terima?: Date | string | null
    status_pengajuan?: number
    acc_by?: number | null
    path_file?: string
    tanggal_lahir?: Date | string | null
    ktp_path?: string | null
    alamat?: AlamatCreateNestedManyWithoutUsersInput
    transaksi?: TransaksiCreateNestedManyWithoutUserInput
    review?: ReviewCreateNestedManyWithoutUserInput
    cart?: CartCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateWithoutProductInput = {
    id?: number
    email: string
    password: string
    firstName: string
    lastName: string
    gender?: number
    role?: number
    telp?: string
    buka_toko?: number
    nama_toko?: string
    klasifikasi_toko?: number
    rating_toko?: number
    time_pengajuan?: Date | string | null
    time_terima?: Date | string | null
    status_pengajuan?: number
    acc_by?: number | null
    path_file?: string
    tanggal_lahir?: Date | string | null
    ktp_path?: string | null
    alamat?: AlamatUncheckedCreateNestedManyWithoutUsersInput
    transaksi?: TransaksiUncheckedCreateNestedManyWithoutUserInput
    review?: ReviewUncheckedCreateNestedManyWithoutUserInput
    cart?: CartUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersCreateOrConnectWithoutProductInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutProductInput, UsersUncheckedCreateWithoutProductInput>
  }

  export type TransaksiCreateWithoutProductInput = {
    status: number
    user: UsersCreateNestedOneWithoutTransaksiInput
  }

  export type TransaksiUncheckedCreateWithoutProductInput = {
    id?: number
    userId: number
    status: number
  }

  export type TransaksiCreateOrConnectWithoutProductInput = {
    where: TransaksiWhereUniqueInput
    create: XOR<TransaksiCreateWithoutProductInput, TransaksiUncheckedCreateWithoutProductInput>
  }

  export type TransaksiCreateManyProductInputEnvelope = {
    data: TransaksiCreateManyProductInput | TransaksiCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutProductInput = {
    review: string
    rating: number
    time?: Date | string | null
    user: UsersCreateNestedOneWithoutReviewInput
  }

  export type ReviewUncheckedCreateWithoutProductInput = {
    id?: number
    userId: number
    review: string
    rating: number
    time?: Date | string | null
  }

  export type ReviewCreateOrConnectWithoutProductInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput>
  }

  export type ReviewCreateManyProductInputEnvelope = {
    data: ReviewCreateManyProductInput | ReviewCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type CartCreateWithoutProductInput = {
    quantity: number
    time: Date | string
    user: UsersCreateNestedOneWithoutCartInput
    variasi: VariasiCreateNestedOneWithoutCartInput
  }

  export type CartUncheckedCreateWithoutProductInput = {
    id?: number
    userId: number
    variasiId: number
    quantity: number
    time: Date | string
  }

  export type CartCreateOrConnectWithoutProductInput = {
    where: CartWhereUniqueInput
    create: XOR<CartCreateWithoutProductInput, CartUncheckedCreateWithoutProductInput>
  }

  export type CartCreateManyProductInputEnvelope = {
    data: CartCreateManyProductInput | CartCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type VariasiCreateWithoutProductInput = {
    nama: string
    harga: number
    path: string
    stok?: number
    cart?: CartCreateNestedManyWithoutVariasiInput
  }

  export type VariasiUncheckedCreateWithoutProductInput = {
    id?: number
    nama: string
    harga: number
    path: string
    stok?: number
    cart?: CartUncheckedCreateNestedManyWithoutVariasiInput
  }

  export type VariasiCreateOrConnectWithoutProductInput = {
    where: VariasiWhereUniqueInput
    create: XOR<VariasiCreateWithoutProductInput, VariasiUncheckedCreateWithoutProductInput>
  }

  export type VariasiCreateManyProductInputEnvelope = {
    data: VariasiCreateManyProductInput | VariasiCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type UsersUpsertWithoutProductInput = {
    update: XOR<UsersUpdateWithoutProductInput, UsersUncheckedUpdateWithoutProductInput>
    create: XOR<UsersCreateWithoutProductInput, UsersUncheckedCreateWithoutProductInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutProductInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutProductInput, UsersUncheckedUpdateWithoutProductInput>
  }

  export type UsersUpdateWithoutProductInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: AlamatUpdateManyWithoutUsersNestedInput
    transaksi?: TransaksiUpdateManyWithoutUserNestedInput
    review?: ReviewUpdateManyWithoutUserNestedInput
    cart?: CartUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: AlamatUncheckedUpdateManyWithoutUsersNestedInput
    transaksi?: TransaksiUncheckedUpdateManyWithoutUserNestedInput
    review?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    cart?: CartUncheckedUpdateManyWithoutUserNestedInput
  }

  export type TransaksiUpsertWithWhereUniqueWithoutProductInput = {
    where: TransaksiWhereUniqueInput
    update: XOR<TransaksiUpdateWithoutProductInput, TransaksiUncheckedUpdateWithoutProductInput>
    create: XOR<TransaksiCreateWithoutProductInput, TransaksiUncheckedCreateWithoutProductInput>
  }

  export type TransaksiUpdateWithWhereUniqueWithoutProductInput = {
    where: TransaksiWhereUniqueInput
    data: XOR<TransaksiUpdateWithoutProductInput, TransaksiUncheckedUpdateWithoutProductInput>
  }

  export type TransaksiUpdateManyWithWhereWithoutProductInput = {
    where: TransaksiScalarWhereInput
    data: XOR<TransaksiUpdateManyMutationInput, TransaksiUncheckedUpdateManyWithoutProductInput>
  }

  export type ReviewUpsertWithWhereUniqueWithoutProductInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutProductInput, ReviewUncheckedUpdateWithoutProductInput>
    create: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutProductInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutProductInput, ReviewUncheckedUpdateWithoutProductInput>
  }

  export type ReviewUpdateManyWithWhereWithoutProductInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutProductInput>
  }

  export type CartUpsertWithWhereUniqueWithoutProductInput = {
    where: CartWhereUniqueInput
    update: XOR<CartUpdateWithoutProductInput, CartUncheckedUpdateWithoutProductInput>
    create: XOR<CartCreateWithoutProductInput, CartUncheckedCreateWithoutProductInput>
  }

  export type CartUpdateWithWhereUniqueWithoutProductInput = {
    where: CartWhereUniqueInput
    data: XOR<CartUpdateWithoutProductInput, CartUncheckedUpdateWithoutProductInput>
  }

  export type CartUpdateManyWithWhereWithoutProductInput = {
    where: CartScalarWhereInput
    data: XOR<CartUpdateManyMutationInput, CartUncheckedUpdateManyWithoutProductInput>
  }

  export type VariasiUpsertWithWhereUniqueWithoutProductInput = {
    where: VariasiWhereUniqueInput
    update: XOR<VariasiUpdateWithoutProductInput, VariasiUncheckedUpdateWithoutProductInput>
    create: XOR<VariasiCreateWithoutProductInput, VariasiUncheckedCreateWithoutProductInput>
  }

  export type VariasiUpdateWithWhereUniqueWithoutProductInput = {
    where: VariasiWhereUniqueInput
    data: XOR<VariasiUpdateWithoutProductInput, VariasiUncheckedUpdateWithoutProductInput>
  }

  export type VariasiUpdateManyWithWhereWithoutProductInput = {
    where: VariasiScalarWhereInput
    data: XOR<VariasiUpdateManyMutationInput, VariasiUncheckedUpdateManyWithoutProductInput>
  }

  export type VariasiScalarWhereInput = {
    AND?: VariasiScalarWhereInput | VariasiScalarWhereInput[]
    OR?: VariasiScalarWhereInput[]
    NOT?: VariasiScalarWhereInput | VariasiScalarWhereInput[]
    id?: IntFilter<"Variasi"> | number
    productId?: IntFilter<"Variasi"> | number
    nama?: StringFilter<"Variasi"> | string
    harga?: IntFilter<"Variasi"> | number
    path?: StringFilter<"Variasi"> | string
    stok?: IntFilter<"Variasi"> | number
  }

  export type ProductCreateWithoutVariasiInput = {
    nama: string
    desc: string
    path: string
    user: UsersCreateNestedOneWithoutProductInput
    transaksi?: TransaksiCreateNestedManyWithoutProductInput
    review?: ReviewCreateNestedManyWithoutProductInput
    cart?: CartCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutVariasiInput = {
    id?: number
    userId: number
    nama: string
    desc: string
    path: string
    transaksi?: TransaksiUncheckedCreateNestedManyWithoutProductInput
    review?: ReviewUncheckedCreateNestedManyWithoutProductInput
    cart?: CartUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutVariasiInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutVariasiInput, ProductUncheckedCreateWithoutVariasiInput>
  }

  export type CartCreateWithoutVariasiInput = {
    quantity: number
    time: Date | string
    user: UsersCreateNestedOneWithoutCartInput
    product: ProductCreateNestedOneWithoutCartInput
  }

  export type CartUncheckedCreateWithoutVariasiInput = {
    id?: number
    userId: number
    productId: number
    quantity: number
    time: Date | string
  }

  export type CartCreateOrConnectWithoutVariasiInput = {
    where: CartWhereUniqueInput
    create: XOR<CartCreateWithoutVariasiInput, CartUncheckedCreateWithoutVariasiInput>
  }

  export type CartCreateManyVariasiInputEnvelope = {
    data: CartCreateManyVariasiInput | CartCreateManyVariasiInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithoutVariasiInput = {
    update: XOR<ProductUpdateWithoutVariasiInput, ProductUncheckedUpdateWithoutVariasiInput>
    create: XOR<ProductCreateWithoutVariasiInput, ProductUncheckedCreateWithoutVariasiInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutVariasiInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutVariasiInput, ProductUncheckedUpdateWithoutVariasiInput>
  }

  export type ProductUpdateWithoutVariasiInput = {
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    user?: UsersUpdateOneRequiredWithoutProductNestedInput
    transaksi?: TransaksiUpdateManyWithoutProductNestedInput
    review?: ReviewUpdateManyWithoutProductNestedInput
    cart?: CartUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutVariasiInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    transaksi?: TransaksiUncheckedUpdateManyWithoutProductNestedInput
    review?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    cart?: CartUncheckedUpdateManyWithoutProductNestedInput
  }

  export type CartUpsertWithWhereUniqueWithoutVariasiInput = {
    where: CartWhereUniqueInput
    update: XOR<CartUpdateWithoutVariasiInput, CartUncheckedUpdateWithoutVariasiInput>
    create: XOR<CartCreateWithoutVariasiInput, CartUncheckedCreateWithoutVariasiInput>
  }

  export type CartUpdateWithWhereUniqueWithoutVariasiInput = {
    where: CartWhereUniqueInput
    data: XOR<CartUpdateWithoutVariasiInput, CartUncheckedUpdateWithoutVariasiInput>
  }

  export type CartUpdateManyWithWhereWithoutVariasiInput = {
    where: CartScalarWhereInput
    data: XOR<CartUpdateManyMutationInput, CartUncheckedUpdateManyWithoutVariasiInput>
  }

  export type UsersCreateWithoutTransaksiInput = {
    email: string
    password: string
    firstName: string
    lastName: string
    gender?: number
    role?: number
    telp?: string
    buka_toko?: number
    nama_toko?: string
    klasifikasi_toko?: number
    rating_toko?: number
    time_pengajuan?: Date | string | null
    time_terima?: Date | string | null
    status_pengajuan?: number
    acc_by?: number | null
    path_file?: string
    tanggal_lahir?: Date | string | null
    ktp_path?: string | null
    alamat?: AlamatCreateNestedManyWithoutUsersInput
    product?: ProductCreateNestedManyWithoutUserInput
    review?: ReviewCreateNestedManyWithoutUserInput
    cart?: CartCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateWithoutTransaksiInput = {
    id?: number
    email: string
    password: string
    firstName: string
    lastName: string
    gender?: number
    role?: number
    telp?: string
    buka_toko?: number
    nama_toko?: string
    klasifikasi_toko?: number
    rating_toko?: number
    time_pengajuan?: Date | string | null
    time_terima?: Date | string | null
    status_pengajuan?: number
    acc_by?: number | null
    path_file?: string
    tanggal_lahir?: Date | string | null
    ktp_path?: string | null
    alamat?: AlamatUncheckedCreateNestedManyWithoutUsersInput
    product?: ProductUncheckedCreateNestedManyWithoutUserInput
    review?: ReviewUncheckedCreateNestedManyWithoutUserInput
    cart?: CartUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersCreateOrConnectWithoutTransaksiInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutTransaksiInput, UsersUncheckedCreateWithoutTransaksiInput>
  }

  export type ProductCreateWithoutTransaksiInput = {
    nama: string
    desc: string
    path: string
    user: UsersCreateNestedOneWithoutProductInput
    review?: ReviewCreateNestedManyWithoutProductInput
    cart?: CartCreateNestedManyWithoutProductInput
    variasi?: VariasiCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutTransaksiInput = {
    id?: number
    userId: number
    nama: string
    desc: string
    path: string
    review?: ReviewUncheckedCreateNestedManyWithoutProductInput
    cart?: CartUncheckedCreateNestedManyWithoutProductInput
    variasi?: VariasiUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutTransaksiInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutTransaksiInput, ProductUncheckedCreateWithoutTransaksiInput>
  }

  export type UsersUpsertWithoutTransaksiInput = {
    update: XOR<UsersUpdateWithoutTransaksiInput, UsersUncheckedUpdateWithoutTransaksiInput>
    create: XOR<UsersCreateWithoutTransaksiInput, UsersUncheckedCreateWithoutTransaksiInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutTransaksiInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutTransaksiInput, UsersUncheckedUpdateWithoutTransaksiInput>
  }

  export type UsersUpdateWithoutTransaksiInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: AlamatUpdateManyWithoutUsersNestedInput
    product?: ProductUpdateManyWithoutUserNestedInput
    review?: ReviewUpdateManyWithoutUserNestedInput
    cart?: CartUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutTransaksiInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: AlamatUncheckedUpdateManyWithoutUsersNestedInput
    product?: ProductUncheckedUpdateManyWithoutUserNestedInput
    review?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    cart?: CartUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProductUpsertWithoutTransaksiInput = {
    update: XOR<ProductUpdateWithoutTransaksiInput, ProductUncheckedUpdateWithoutTransaksiInput>
    create: XOR<ProductCreateWithoutTransaksiInput, ProductUncheckedCreateWithoutTransaksiInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutTransaksiInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutTransaksiInput, ProductUncheckedUpdateWithoutTransaksiInput>
  }

  export type ProductUpdateWithoutTransaksiInput = {
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    user?: UsersUpdateOneRequiredWithoutProductNestedInput
    review?: ReviewUpdateManyWithoutProductNestedInput
    cart?: CartUpdateManyWithoutProductNestedInput
    variasi?: VariasiUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutTransaksiInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    review?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    cart?: CartUncheckedUpdateManyWithoutProductNestedInput
    variasi?: VariasiUncheckedUpdateManyWithoutProductNestedInput
  }

  export type UsersCreateWithoutReviewInput = {
    email: string
    password: string
    firstName: string
    lastName: string
    gender?: number
    role?: number
    telp?: string
    buka_toko?: number
    nama_toko?: string
    klasifikasi_toko?: number
    rating_toko?: number
    time_pengajuan?: Date | string | null
    time_terima?: Date | string | null
    status_pengajuan?: number
    acc_by?: number | null
    path_file?: string
    tanggal_lahir?: Date | string | null
    ktp_path?: string | null
    alamat?: AlamatCreateNestedManyWithoutUsersInput
    product?: ProductCreateNestedManyWithoutUserInput
    transaksi?: TransaksiCreateNestedManyWithoutUserInput
    cart?: CartCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateWithoutReviewInput = {
    id?: number
    email: string
    password: string
    firstName: string
    lastName: string
    gender?: number
    role?: number
    telp?: string
    buka_toko?: number
    nama_toko?: string
    klasifikasi_toko?: number
    rating_toko?: number
    time_pengajuan?: Date | string | null
    time_terima?: Date | string | null
    status_pengajuan?: number
    acc_by?: number | null
    path_file?: string
    tanggal_lahir?: Date | string | null
    ktp_path?: string | null
    alamat?: AlamatUncheckedCreateNestedManyWithoutUsersInput
    product?: ProductUncheckedCreateNestedManyWithoutUserInput
    transaksi?: TransaksiUncheckedCreateNestedManyWithoutUserInput
    cart?: CartUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersCreateOrConnectWithoutReviewInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutReviewInput, UsersUncheckedCreateWithoutReviewInput>
  }

  export type ProductCreateWithoutReviewInput = {
    nama: string
    desc: string
    path: string
    user: UsersCreateNestedOneWithoutProductInput
    transaksi?: TransaksiCreateNestedManyWithoutProductInput
    cart?: CartCreateNestedManyWithoutProductInput
    variasi?: VariasiCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutReviewInput = {
    id?: number
    userId: number
    nama: string
    desc: string
    path: string
    transaksi?: TransaksiUncheckedCreateNestedManyWithoutProductInput
    cart?: CartUncheckedCreateNestedManyWithoutProductInput
    variasi?: VariasiUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutReviewInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutReviewInput, ProductUncheckedCreateWithoutReviewInput>
  }

  export type UsersUpsertWithoutReviewInput = {
    update: XOR<UsersUpdateWithoutReviewInput, UsersUncheckedUpdateWithoutReviewInput>
    create: XOR<UsersCreateWithoutReviewInput, UsersUncheckedCreateWithoutReviewInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutReviewInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutReviewInput, UsersUncheckedUpdateWithoutReviewInput>
  }

  export type UsersUpdateWithoutReviewInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: AlamatUpdateManyWithoutUsersNestedInput
    product?: ProductUpdateManyWithoutUserNestedInput
    transaksi?: TransaksiUpdateManyWithoutUserNestedInput
    cart?: CartUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutReviewInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: AlamatUncheckedUpdateManyWithoutUsersNestedInput
    product?: ProductUncheckedUpdateManyWithoutUserNestedInput
    transaksi?: TransaksiUncheckedUpdateManyWithoutUserNestedInput
    cart?: CartUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProductUpsertWithoutReviewInput = {
    update: XOR<ProductUpdateWithoutReviewInput, ProductUncheckedUpdateWithoutReviewInput>
    create: XOR<ProductCreateWithoutReviewInput, ProductUncheckedCreateWithoutReviewInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutReviewInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutReviewInput, ProductUncheckedUpdateWithoutReviewInput>
  }

  export type ProductUpdateWithoutReviewInput = {
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    user?: UsersUpdateOneRequiredWithoutProductNestedInput
    transaksi?: TransaksiUpdateManyWithoutProductNestedInput
    cart?: CartUpdateManyWithoutProductNestedInput
    variasi?: VariasiUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutReviewInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    transaksi?: TransaksiUncheckedUpdateManyWithoutProductNestedInput
    cart?: CartUncheckedUpdateManyWithoutProductNestedInput
    variasi?: VariasiUncheckedUpdateManyWithoutProductNestedInput
  }

  export type UsersCreateWithoutCartInput = {
    email: string
    password: string
    firstName: string
    lastName: string
    gender?: number
    role?: number
    telp?: string
    buka_toko?: number
    nama_toko?: string
    klasifikasi_toko?: number
    rating_toko?: number
    time_pengajuan?: Date | string | null
    time_terima?: Date | string | null
    status_pengajuan?: number
    acc_by?: number | null
    path_file?: string
    tanggal_lahir?: Date | string | null
    ktp_path?: string | null
    alamat?: AlamatCreateNestedManyWithoutUsersInput
    product?: ProductCreateNestedManyWithoutUserInput
    transaksi?: TransaksiCreateNestedManyWithoutUserInput
    review?: ReviewCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateWithoutCartInput = {
    id?: number
    email: string
    password: string
    firstName: string
    lastName: string
    gender?: number
    role?: number
    telp?: string
    buka_toko?: number
    nama_toko?: string
    klasifikasi_toko?: number
    rating_toko?: number
    time_pengajuan?: Date | string | null
    time_terima?: Date | string | null
    status_pengajuan?: number
    acc_by?: number | null
    path_file?: string
    tanggal_lahir?: Date | string | null
    ktp_path?: string | null
    alamat?: AlamatUncheckedCreateNestedManyWithoutUsersInput
    product?: ProductUncheckedCreateNestedManyWithoutUserInput
    transaksi?: TransaksiUncheckedCreateNestedManyWithoutUserInput
    review?: ReviewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersCreateOrConnectWithoutCartInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutCartInput, UsersUncheckedCreateWithoutCartInput>
  }

  export type ProductCreateWithoutCartInput = {
    nama: string
    desc: string
    path: string
    user: UsersCreateNestedOneWithoutProductInput
    transaksi?: TransaksiCreateNestedManyWithoutProductInput
    review?: ReviewCreateNestedManyWithoutProductInput
    variasi?: VariasiCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutCartInput = {
    id?: number
    userId: number
    nama: string
    desc: string
    path: string
    transaksi?: TransaksiUncheckedCreateNestedManyWithoutProductInput
    review?: ReviewUncheckedCreateNestedManyWithoutProductInput
    variasi?: VariasiUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutCartInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCartInput, ProductUncheckedCreateWithoutCartInput>
  }

  export type VariasiCreateWithoutCartInput = {
    nama: string
    harga: number
    path: string
    stok?: number
    product: ProductCreateNestedOneWithoutVariasiInput
  }

  export type VariasiUncheckedCreateWithoutCartInput = {
    id?: number
    productId: number
    nama: string
    harga: number
    path: string
    stok?: number
  }

  export type VariasiCreateOrConnectWithoutCartInput = {
    where: VariasiWhereUniqueInput
    create: XOR<VariasiCreateWithoutCartInput, VariasiUncheckedCreateWithoutCartInput>
  }

  export type UsersUpsertWithoutCartInput = {
    update: XOR<UsersUpdateWithoutCartInput, UsersUncheckedUpdateWithoutCartInput>
    create: XOR<UsersCreateWithoutCartInput, UsersUncheckedCreateWithoutCartInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutCartInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutCartInput, UsersUncheckedUpdateWithoutCartInput>
  }

  export type UsersUpdateWithoutCartInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: AlamatUpdateManyWithoutUsersNestedInput
    product?: ProductUpdateManyWithoutUserNestedInput
    transaksi?: TransaksiUpdateManyWithoutUserNestedInput
    review?: ReviewUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutCartInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: AlamatUncheckedUpdateManyWithoutUsersNestedInput
    product?: ProductUncheckedUpdateManyWithoutUserNestedInput
    transaksi?: TransaksiUncheckedUpdateManyWithoutUserNestedInput
    review?: ReviewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProductUpsertWithoutCartInput = {
    update: XOR<ProductUpdateWithoutCartInput, ProductUncheckedUpdateWithoutCartInput>
    create: XOR<ProductCreateWithoutCartInput, ProductUncheckedCreateWithoutCartInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutCartInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutCartInput, ProductUncheckedUpdateWithoutCartInput>
  }

  export type ProductUpdateWithoutCartInput = {
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    user?: UsersUpdateOneRequiredWithoutProductNestedInput
    transaksi?: TransaksiUpdateManyWithoutProductNestedInput
    review?: ReviewUpdateManyWithoutProductNestedInput
    variasi?: VariasiUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutCartInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    transaksi?: TransaksiUncheckedUpdateManyWithoutProductNestedInput
    review?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    variasi?: VariasiUncheckedUpdateManyWithoutProductNestedInput
  }

  export type VariasiUpsertWithoutCartInput = {
    update: XOR<VariasiUpdateWithoutCartInput, VariasiUncheckedUpdateWithoutCartInput>
    create: XOR<VariasiCreateWithoutCartInput, VariasiUncheckedCreateWithoutCartInput>
    where?: VariasiWhereInput
  }

  export type VariasiUpdateToOneWithWhereWithoutCartInput = {
    where?: VariasiWhereInput
    data: XOR<VariasiUpdateWithoutCartInput, VariasiUncheckedUpdateWithoutCartInput>
  }

  export type VariasiUpdateWithoutCartInput = {
    nama?: StringFieldUpdateOperationsInput | string
    harga?: IntFieldUpdateOperationsInput | number
    path?: StringFieldUpdateOperationsInput | string
    stok?: IntFieldUpdateOperationsInput | number
    product?: ProductUpdateOneRequiredWithoutVariasiNestedInput
  }

  export type VariasiUncheckedUpdateWithoutCartInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    harga?: IntFieldUpdateOperationsInput | number
    path?: StringFieldUpdateOperationsInput | string
    stok?: IntFieldUpdateOperationsInput | number
  }

  export type UsersCreateWithoutAlamatInput = {
    email: string
    password: string
    firstName: string
    lastName: string
    gender?: number
    role?: number
    telp?: string
    buka_toko?: number
    nama_toko?: string
    klasifikasi_toko?: number
    rating_toko?: number
    time_pengajuan?: Date | string | null
    time_terima?: Date | string | null
    status_pengajuan?: number
    acc_by?: number | null
    path_file?: string
    tanggal_lahir?: Date | string | null
    ktp_path?: string | null
    product?: ProductCreateNestedManyWithoutUserInput
    transaksi?: TransaksiCreateNestedManyWithoutUserInput
    review?: ReviewCreateNestedManyWithoutUserInput
    cart?: CartCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateWithoutAlamatInput = {
    id?: number
    email: string
    password: string
    firstName: string
    lastName: string
    gender?: number
    role?: number
    telp?: string
    buka_toko?: number
    nama_toko?: string
    klasifikasi_toko?: number
    rating_toko?: number
    time_pengajuan?: Date | string | null
    time_terima?: Date | string | null
    status_pengajuan?: number
    acc_by?: number | null
    path_file?: string
    tanggal_lahir?: Date | string | null
    ktp_path?: string | null
    product?: ProductUncheckedCreateNestedManyWithoutUserInput
    transaksi?: TransaksiUncheckedCreateNestedManyWithoutUserInput
    review?: ReviewUncheckedCreateNestedManyWithoutUserInput
    cart?: CartUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersCreateOrConnectWithoutAlamatInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutAlamatInput, UsersUncheckedCreateWithoutAlamatInput>
  }

  export type ProvinsiCreateWithoutAlamatInput = {
    kode: string
    nama: string
    kabupaten?: KabupatenCreateNestedManyWithoutProvinsiInput
  }

  export type ProvinsiUncheckedCreateWithoutAlamatInput = {
    kode: string
    nama: string
    kabupaten?: KabupatenUncheckedCreateNestedManyWithoutProvinsiInput
  }

  export type ProvinsiCreateOrConnectWithoutAlamatInput = {
    where: ProvinsiWhereUniqueInput
    create: XOR<ProvinsiCreateWithoutAlamatInput, ProvinsiUncheckedCreateWithoutAlamatInput>
  }

  export type KabupatenCreateWithoutAlamatInput = {
    kode: string
    nama: string
    provinsi: ProvinsiCreateNestedOneWithoutKabupatenInput
    kecamatan?: KecamatanCreateNestedManyWithoutKabupatenInput
  }

  export type KabupatenUncheckedCreateWithoutAlamatInput = {
    kodeProv: string
    kode: string
    nama: string
    kecamatan?: KecamatanUncheckedCreateNestedManyWithoutKabupatenInput
  }

  export type KabupatenCreateOrConnectWithoutAlamatInput = {
    where: KabupatenWhereUniqueInput
    create: XOR<KabupatenCreateWithoutAlamatInput, KabupatenUncheckedCreateWithoutAlamatInput>
  }

  export type KecamatanCreateWithoutAlamatInput = {
    kode: string
    nama: string
    kabupaten: KabupatenCreateNestedOneWithoutKecamatanInput
    desa?: DesaCreateNestedManyWithoutKecamatanInput
  }

  export type KecamatanUncheckedCreateWithoutAlamatInput = {
    kodeProv: string
    kodeKab: string
    kode: string
    nama: string
    desa?: DesaUncheckedCreateNestedManyWithoutKecamatanInput
  }

  export type KecamatanCreateOrConnectWithoutAlamatInput = {
    where: KecamatanWhereUniqueInput
    create: XOR<KecamatanCreateWithoutAlamatInput, KecamatanUncheckedCreateWithoutAlamatInput>
  }

  export type DesaCreateWithoutAlamatInput = {
    kode: string
    nama: string
    kecamatan: KecamatanCreateNestedOneWithoutDesaInput
  }

  export type DesaUncheckedCreateWithoutAlamatInput = {
    kodeProv: string
    kodeKab: string
    kodeKec: string
    kode: string
    nama: string
  }

  export type DesaCreateOrConnectWithoutAlamatInput = {
    where: DesaWhereUniqueInput
    create: XOR<DesaCreateWithoutAlamatInput, DesaUncheckedCreateWithoutAlamatInput>
  }

  export type UsersUpsertWithoutAlamatInput = {
    update: XOR<UsersUpdateWithoutAlamatInput, UsersUncheckedUpdateWithoutAlamatInput>
    create: XOR<UsersCreateWithoutAlamatInput, UsersUncheckedCreateWithoutAlamatInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutAlamatInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutAlamatInput, UsersUncheckedUpdateWithoutAlamatInput>
  }

  export type UsersUpdateWithoutAlamatInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
    product?: ProductUpdateManyWithoutUserNestedInput
    transaksi?: TransaksiUpdateManyWithoutUserNestedInput
    review?: ReviewUpdateManyWithoutUserNestedInput
    cart?: CartUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutAlamatInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    gender?: IntFieldUpdateOperationsInput | number
    role?: IntFieldUpdateOperationsInput | number
    telp?: StringFieldUpdateOperationsInput | string
    buka_toko?: IntFieldUpdateOperationsInput | number
    nama_toko?: StringFieldUpdateOperationsInput | string
    klasifikasi_toko?: IntFieldUpdateOperationsInput | number
    rating_toko?: FloatFieldUpdateOperationsInput | number
    time_pengajuan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_terima?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_pengajuan?: IntFieldUpdateOperationsInput | number
    acc_by?: NullableIntFieldUpdateOperationsInput | number | null
    path_file?: StringFieldUpdateOperationsInput | string
    tanggal_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ktp_path?: NullableStringFieldUpdateOperationsInput | string | null
    product?: ProductUncheckedUpdateManyWithoutUserNestedInput
    transaksi?: TransaksiUncheckedUpdateManyWithoutUserNestedInput
    review?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    cart?: CartUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProvinsiUpsertWithoutAlamatInput = {
    update: XOR<ProvinsiUpdateWithoutAlamatInput, ProvinsiUncheckedUpdateWithoutAlamatInput>
    create: XOR<ProvinsiCreateWithoutAlamatInput, ProvinsiUncheckedCreateWithoutAlamatInput>
    where?: ProvinsiWhereInput
  }

  export type ProvinsiUpdateToOneWithWhereWithoutAlamatInput = {
    where?: ProvinsiWhereInput
    data: XOR<ProvinsiUpdateWithoutAlamatInput, ProvinsiUncheckedUpdateWithoutAlamatInput>
  }

  export type ProvinsiUpdateWithoutAlamatInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    kabupaten?: KabupatenUpdateManyWithoutProvinsiNestedInput
  }

  export type ProvinsiUncheckedUpdateWithoutAlamatInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    kabupaten?: KabupatenUncheckedUpdateManyWithoutProvinsiNestedInput
  }

  export type KabupatenUpsertWithoutAlamatInput = {
    update: XOR<KabupatenUpdateWithoutAlamatInput, KabupatenUncheckedUpdateWithoutAlamatInput>
    create: XOR<KabupatenCreateWithoutAlamatInput, KabupatenUncheckedCreateWithoutAlamatInput>
    where?: KabupatenWhereInput
  }

  export type KabupatenUpdateToOneWithWhereWithoutAlamatInput = {
    where?: KabupatenWhereInput
    data: XOR<KabupatenUpdateWithoutAlamatInput, KabupatenUncheckedUpdateWithoutAlamatInput>
  }

  export type KabupatenUpdateWithoutAlamatInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    provinsi?: ProvinsiUpdateOneRequiredWithoutKabupatenNestedInput
    kecamatan?: KecamatanUpdateManyWithoutKabupatenNestedInput
  }

  export type KabupatenUncheckedUpdateWithoutAlamatInput = {
    kodeProv?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    kecamatan?: KecamatanUncheckedUpdateManyWithoutKabupatenNestedInput
  }

  export type KecamatanUpsertWithoutAlamatInput = {
    update: XOR<KecamatanUpdateWithoutAlamatInput, KecamatanUncheckedUpdateWithoutAlamatInput>
    create: XOR<KecamatanCreateWithoutAlamatInput, KecamatanUncheckedCreateWithoutAlamatInput>
    where?: KecamatanWhereInput
  }

  export type KecamatanUpdateToOneWithWhereWithoutAlamatInput = {
    where?: KecamatanWhereInput
    data: XOR<KecamatanUpdateWithoutAlamatInput, KecamatanUncheckedUpdateWithoutAlamatInput>
  }

  export type KecamatanUpdateWithoutAlamatInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    kabupaten?: KabupatenUpdateOneRequiredWithoutKecamatanNestedInput
    desa?: DesaUpdateManyWithoutKecamatanNestedInput
  }

  export type KecamatanUncheckedUpdateWithoutAlamatInput = {
    kodeProv?: StringFieldUpdateOperationsInput | string
    kodeKab?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    desa?: DesaUncheckedUpdateManyWithoutKecamatanNestedInput
  }

  export type DesaUpsertWithoutAlamatInput = {
    update: XOR<DesaUpdateWithoutAlamatInput, DesaUncheckedUpdateWithoutAlamatInput>
    create: XOR<DesaCreateWithoutAlamatInput, DesaUncheckedCreateWithoutAlamatInput>
    where?: DesaWhereInput
  }

  export type DesaUpdateToOneWithWhereWithoutAlamatInput = {
    where?: DesaWhereInput
    data: XOR<DesaUpdateWithoutAlamatInput, DesaUncheckedUpdateWithoutAlamatInput>
  }

  export type DesaUpdateWithoutAlamatInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    kecamatan?: KecamatanUpdateOneRequiredWithoutDesaNestedInput
  }

  export type DesaUncheckedUpdateWithoutAlamatInput = {
    kodeProv?: StringFieldUpdateOperationsInput | string
    kodeKab?: StringFieldUpdateOperationsInput | string
    kodeKec?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type KabupatenCreateWithoutProvinsiInput = {
    kode: string
    nama: string
    kecamatan?: KecamatanCreateNestedManyWithoutKabupatenInput
    alamat?: AlamatCreateNestedManyWithoutKabupatenInput
  }

  export type KabupatenUncheckedCreateWithoutProvinsiInput = {
    kode: string
    nama: string
    kecamatan?: KecamatanUncheckedCreateNestedManyWithoutKabupatenInput
    alamat?: AlamatUncheckedCreateNestedManyWithoutKabupatenInput
  }

  export type KabupatenCreateOrConnectWithoutProvinsiInput = {
    where: KabupatenWhereUniqueInput
    create: XOR<KabupatenCreateWithoutProvinsiInput, KabupatenUncheckedCreateWithoutProvinsiInput>
  }

  export type KabupatenCreateManyProvinsiInputEnvelope = {
    data: KabupatenCreateManyProvinsiInput | KabupatenCreateManyProvinsiInput[]
    skipDuplicates?: boolean
  }

  export type AlamatCreateWithoutProvinsiInput = {
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
    users: UsersCreateNestedOneWithoutAlamatInput
    kabupaten: KabupatenCreateNestedOneWithoutAlamatInput
    kecamatan: KecamatanCreateNestedOneWithoutAlamatInput
    desa: DesaCreateNestedOneWithoutAlamatInput
  }

  export type AlamatUncheckedCreateWithoutProvinsiInput = {
    id?: number
    userId: number
    kodeKab: string
    kodeKec: string
    kodeDesa: string
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
  }

  export type AlamatCreateOrConnectWithoutProvinsiInput = {
    where: AlamatWhereUniqueInput
    create: XOR<AlamatCreateWithoutProvinsiInput, AlamatUncheckedCreateWithoutProvinsiInput>
  }

  export type AlamatCreateManyProvinsiInputEnvelope = {
    data: AlamatCreateManyProvinsiInput | AlamatCreateManyProvinsiInput[]
    skipDuplicates?: boolean
  }

  export type KabupatenUpsertWithWhereUniqueWithoutProvinsiInput = {
    where: KabupatenWhereUniqueInput
    update: XOR<KabupatenUpdateWithoutProvinsiInput, KabupatenUncheckedUpdateWithoutProvinsiInput>
    create: XOR<KabupatenCreateWithoutProvinsiInput, KabupatenUncheckedCreateWithoutProvinsiInput>
  }

  export type KabupatenUpdateWithWhereUniqueWithoutProvinsiInput = {
    where: KabupatenWhereUniqueInput
    data: XOR<KabupatenUpdateWithoutProvinsiInput, KabupatenUncheckedUpdateWithoutProvinsiInput>
  }

  export type KabupatenUpdateManyWithWhereWithoutProvinsiInput = {
    where: KabupatenScalarWhereInput
    data: XOR<KabupatenUpdateManyMutationInput, KabupatenUncheckedUpdateManyWithoutProvinsiInput>
  }

  export type KabupatenScalarWhereInput = {
    AND?: KabupatenScalarWhereInput | KabupatenScalarWhereInput[]
    OR?: KabupatenScalarWhereInput[]
    NOT?: KabupatenScalarWhereInput | KabupatenScalarWhereInput[]
    kodeProv?: StringFilter<"Kabupaten"> | string
    kode?: StringFilter<"Kabupaten"> | string
    nama?: StringFilter<"Kabupaten"> | string
  }

  export type AlamatUpsertWithWhereUniqueWithoutProvinsiInput = {
    where: AlamatWhereUniqueInput
    update: XOR<AlamatUpdateWithoutProvinsiInput, AlamatUncheckedUpdateWithoutProvinsiInput>
    create: XOR<AlamatCreateWithoutProvinsiInput, AlamatUncheckedCreateWithoutProvinsiInput>
  }

  export type AlamatUpdateWithWhereUniqueWithoutProvinsiInput = {
    where: AlamatWhereUniqueInput
    data: XOR<AlamatUpdateWithoutProvinsiInput, AlamatUncheckedUpdateWithoutProvinsiInput>
  }

  export type AlamatUpdateManyWithWhereWithoutProvinsiInput = {
    where: AlamatScalarWhereInput
    data: XOR<AlamatUpdateManyMutationInput, AlamatUncheckedUpdateManyWithoutProvinsiInput>
  }

  export type ProvinsiCreateWithoutKabupatenInput = {
    kode: string
    nama: string
    alamat?: AlamatCreateNestedManyWithoutProvinsiInput
  }

  export type ProvinsiUncheckedCreateWithoutKabupatenInput = {
    kode: string
    nama: string
    alamat?: AlamatUncheckedCreateNestedManyWithoutProvinsiInput
  }

  export type ProvinsiCreateOrConnectWithoutKabupatenInput = {
    where: ProvinsiWhereUniqueInput
    create: XOR<ProvinsiCreateWithoutKabupatenInput, ProvinsiUncheckedCreateWithoutKabupatenInput>
  }

  export type KecamatanCreateWithoutKabupatenInput = {
    kode: string
    nama: string
    desa?: DesaCreateNestedManyWithoutKecamatanInput
    alamat?: AlamatCreateNestedManyWithoutKecamatanInput
  }

  export type KecamatanUncheckedCreateWithoutKabupatenInput = {
    kode: string
    nama: string
    desa?: DesaUncheckedCreateNestedManyWithoutKecamatanInput
    alamat?: AlamatUncheckedCreateNestedManyWithoutKecamatanInput
  }

  export type KecamatanCreateOrConnectWithoutKabupatenInput = {
    where: KecamatanWhereUniqueInput
    create: XOR<KecamatanCreateWithoutKabupatenInput, KecamatanUncheckedCreateWithoutKabupatenInput>
  }

  export type KecamatanCreateManyKabupatenInputEnvelope = {
    data: KecamatanCreateManyKabupatenInput | KecamatanCreateManyKabupatenInput[]
    skipDuplicates?: boolean
  }

  export type AlamatCreateWithoutKabupatenInput = {
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
    users: UsersCreateNestedOneWithoutAlamatInput
    provinsi: ProvinsiCreateNestedOneWithoutAlamatInput
    kecamatan: KecamatanCreateNestedOneWithoutAlamatInput
    desa: DesaCreateNestedOneWithoutAlamatInput
  }

  export type AlamatUncheckedCreateWithoutKabupatenInput = {
    id?: number
    userId: number
    kodeKec: string
    kodeDesa: string
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
  }

  export type AlamatCreateOrConnectWithoutKabupatenInput = {
    where: AlamatWhereUniqueInput
    create: XOR<AlamatCreateWithoutKabupatenInput, AlamatUncheckedCreateWithoutKabupatenInput>
  }

  export type AlamatCreateManyKabupatenInputEnvelope = {
    data: AlamatCreateManyKabupatenInput | AlamatCreateManyKabupatenInput[]
    skipDuplicates?: boolean
  }

  export type ProvinsiUpsertWithoutKabupatenInput = {
    update: XOR<ProvinsiUpdateWithoutKabupatenInput, ProvinsiUncheckedUpdateWithoutKabupatenInput>
    create: XOR<ProvinsiCreateWithoutKabupatenInput, ProvinsiUncheckedCreateWithoutKabupatenInput>
    where?: ProvinsiWhereInput
  }

  export type ProvinsiUpdateToOneWithWhereWithoutKabupatenInput = {
    where?: ProvinsiWhereInput
    data: XOR<ProvinsiUpdateWithoutKabupatenInput, ProvinsiUncheckedUpdateWithoutKabupatenInput>
  }

  export type ProvinsiUpdateWithoutKabupatenInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    alamat?: AlamatUpdateManyWithoutProvinsiNestedInput
  }

  export type ProvinsiUncheckedUpdateWithoutKabupatenInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    alamat?: AlamatUncheckedUpdateManyWithoutProvinsiNestedInput
  }

  export type KecamatanUpsertWithWhereUniqueWithoutKabupatenInput = {
    where: KecamatanWhereUniqueInput
    update: XOR<KecamatanUpdateWithoutKabupatenInput, KecamatanUncheckedUpdateWithoutKabupatenInput>
    create: XOR<KecamatanCreateWithoutKabupatenInput, KecamatanUncheckedCreateWithoutKabupatenInput>
  }

  export type KecamatanUpdateWithWhereUniqueWithoutKabupatenInput = {
    where: KecamatanWhereUniqueInput
    data: XOR<KecamatanUpdateWithoutKabupatenInput, KecamatanUncheckedUpdateWithoutKabupatenInput>
  }

  export type KecamatanUpdateManyWithWhereWithoutKabupatenInput = {
    where: KecamatanScalarWhereInput
    data: XOR<KecamatanUpdateManyMutationInput, KecamatanUncheckedUpdateManyWithoutKabupatenInput>
  }

  export type KecamatanScalarWhereInput = {
    AND?: KecamatanScalarWhereInput | KecamatanScalarWhereInput[]
    OR?: KecamatanScalarWhereInput[]
    NOT?: KecamatanScalarWhereInput | KecamatanScalarWhereInput[]
    kodeProv?: StringFilter<"Kecamatan"> | string
    kodeKab?: StringFilter<"Kecamatan"> | string
    kode?: StringFilter<"Kecamatan"> | string
    nama?: StringFilter<"Kecamatan"> | string
  }

  export type AlamatUpsertWithWhereUniqueWithoutKabupatenInput = {
    where: AlamatWhereUniqueInput
    update: XOR<AlamatUpdateWithoutKabupatenInput, AlamatUncheckedUpdateWithoutKabupatenInput>
    create: XOR<AlamatCreateWithoutKabupatenInput, AlamatUncheckedCreateWithoutKabupatenInput>
  }

  export type AlamatUpdateWithWhereUniqueWithoutKabupatenInput = {
    where: AlamatWhereUniqueInput
    data: XOR<AlamatUpdateWithoutKabupatenInput, AlamatUncheckedUpdateWithoutKabupatenInput>
  }

  export type AlamatUpdateManyWithWhereWithoutKabupatenInput = {
    where: AlamatScalarWhereInput
    data: XOR<AlamatUpdateManyMutationInput, AlamatUncheckedUpdateManyWithoutKabupatenInput>
  }

  export type KabupatenCreateWithoutKecamatanInput = {
    kode: string
    nama: string
    provinsi: ProvinsiCreateNestedOneWithoutKabupatenInput
    alamat?: AlamatCreateNestedManyWithoutKabupatenInput
  }

  export type KabupatenUncheckedCreateWithoutKecamatanInput = {
    kodeProv: string
    kode: string
    nama: string
    alamat?: AlamatUncheckedCreateNestedManyWithoutKabupatenInput
  }

  export type KabupatenCreateOrConnectWithoutKecamatanInput = {
    where: KabupatenWhereUniqueInput
    create: XOR<KabupatenCreateWithoutKecamatanInput, KabupatenUncheckedCreateWithoutKecamatanInput>
  }

  export type DesaCreateWithoutKecamatanInput = {
    kode: string
    nama: string
    alamat?: AlamatCreateNestedManyWithoutDesaInput
  }

  export type DesaUncheckedCreateWithoutKecamatanInput = {
    kode: string
    nama: string
    alamat?: AlamatUncheckedCreateNestedManyWithoutDesaInput
  }

  export type DesaCreateOrConnectWithoutKecamatanInput = {
    where: DesaWhereUniqueInput
    create: XOR<DesaCreateWithoutKecamatanInput, DesaUncheckedCreateWithoutKecamatanInput>
  }

  export type DesaCreateManyKecamatanInputEnvelope = {
    data: DesaCreateManyKecamatanInput | DesaCreateManyKecamatanInput[]
    skipDuplicates?: boolean
  }

  export type AlamatCreateWithoutKecamatanInput = {
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
    users: UsersCreateNestedOneWithoutAlamatInput
    provinsi: ProvinsiCreateNestedOneWithoutAlamatInput
    kabupaten: KabupatenCreateNestedOneWithoutAlamatInput
    desa: DesaCreateNestedOneWithoutAlamatInput
  }

  export type AlamatUncheckedCreateWithoutKecamatanInput = {
    id?: number
    userId: number
    kodeDesa: string
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
  }

  export type AlamatCreateOrConnectWithoutKecamatanInput = {
    where: AlamatWhereUniqueInput
    create: XOR<AlamatCreateWithoutKecamatanInput, AlamatUncheckedCreateWithoutKecamatanInput>
  }

  export type AlamatCreateManyKecamatanInputEnvelope = {
    data: AlamatCreateManyKecamatanInput | AlamatCreateManyKecamatanInput[]
    skipDuplicates?: boolean
  }

  export type KabupatenUpsertWithoutKecamatanInput = {
    update: XOR<KabupatenUpdateWithoutKecamatanInput, KabupatenUncheckedUpdateWithoutKecamatanInput>
    create: XOR<KabupatenCreateWithoutKecamatanInput, KabupatenUncheckedCreateWithoutKecamatanInput>
    where?: KabupatenWhereInput
  }

  export type KabupatenUpdateToOneWithWhereWithoutKecamatanInput = {
    where?: KabupatenWhereInput
    data: XOR<KabupatenUpdateWithoutKecamatanInput, KabupatenUncheckedUpdateWithoutKecamatanInput>
  }

  export type KabupatenUpdateWithoutKecamatanInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    provinsi?: ProvinsiUpdateOneRequiredWithoutKabupatenNestedInput
    alamat?: AlamatUpdateManyWithoutKabupatenNestedInput
  }

  export type KabupatenUncheckedUpdateWithoutKecamatanInput = {
    kodeProv?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    alamat?: AlamatUncheckedUpdateManyWithoutKabupatenNestedInput
  }

  export type DesaUpsertWithWhereUniqueWithoutKecamatanInput = {
    where: DesaWhereUniqueInput
    update: XOR<DesaUpdateWithoutKecamatanInput, DesaUncheckedUpdateWithoutKecamatanInput>
    create: XOR<DesaCreateWithoutKecamatanInput, DesaUncheckedCreateWithoutKecamatanInput>
  }

  export type DesaUpdateWithWhereUniqueWithoutKecamatanInput = {
    where: DesaWhereUniqueInput
    data: XOR<DesaUpdateWithoutKecamatanInput, DesaUncheckedUpdateWithoutKecamatanInput>
  }

  export type DesaUpdateManyWithWhereWithoutKecamatanInput = {
    where: DesaScalarWhereInput
    data: XOR<DesaUpdateManyMutationInput, DesaUncheckedUpdateManyWithoutKecamatanInput>
  }

  export type DesaScalarWhereInput = {
    AND?: DesaScalarWhereInput | DesaScalarWhereInput[]
    OR?: DesaScalarWhereInput[]
    NOT?: DesaScalarWhereInput | DesaScalarWhereInput[]
    kodeProv?: StringFilter<"Desa"> | string
    kodeKab?: StringFilter<"Desa"> | string
    kodeKec?: StringFilter<"Desa"> | string
    kode?: StringFilter<"Desa"> | string
    nama?: StringFilter<"Desa"> | string
  }

  export type AlamatUpsertWithWhereUniqueWithoutKecamatanInput = {
    where: AlamatWhereUniqueInput
    update: XOR<AlamatUpdateWithoutKecamatanInput, AlamatUncheckedUpdateWithoutKecamatanInput>
    create: XOR<AlamatCreateWithoutKecamatanInput, AlamatUncheckedCreateWithoutKecamatanInput>
  }

  export type AlamatUpdateWithWhereUniqueWithoutKecamatanInput = {
    where: AlamatWhereUniqueInput
    data: XOR<AlamatUpdateWithoutKecamatanInput, AlamatUncheckedUpdateWithoutKecamatanInput>
  }

  export type AlamatUpdateManyWithWhereWithoutKecamatanInput = {
    where: AlamatScalarWhereInput
    data: XOR<AlamatUpdateManyMutationInput, AlamatUncheckedUpdateManyWithoutKecamatanInput>
  }

  export type KecamatanCreateWithoutDesaInput = {
    kode: string
    nama: string
    kabupaten: KabupatenCreateNestedOneWithoutKecamatanInput
    alamat?: AlamatCreateNestedManyWithoutKecamatanInput
  }

  export type KecamatanUncheckedCreateWithoutDesaInput = {
    kodeProv: string
    kodeKab: string
    kode: string
    nama: string
    alamat?: AlamatUncheckedCreateNestedManyWithoutKecamatanInput
  }

  export type KecamatanCreateOrConnectWithoutDesaInput = {
    where: KecamatanWhereUniqueInput
    create: XOR<KecamatanCreateWithoutDesaInput, KecamatanUncheckedCreateWithoutDesaInput>
  }

  export type AlamatCreateWithoutDesaInput = {
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
    users: UsersCreateNestedOneWithoutAlamatInput
    provinsi: ProvinsiCreateNestedOneWithoutAlamatInput
    kabupaten: KabupatenCreateNestedOneWithoutAlamatInput
    kecamatan: KecamatanCreateNestedOneWithoutAlamatInput
  }

  export type AlamatUncheckedCreateWithoutDesaInput = {
    id?: number
    userId: number
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
  }

  export type AlamatCreateOrConnectWithoutDesaInput = {
    where: AlamatWhereUniqueInput
    create: XOR<AlamatCreateWithoutDesaInput, AlamatUncheckedCreateWithoutDesaInput>
  }

  export type AlamatCreateManyDesaInputEnvelope = {
    data: AlamatCreateManyDesaInput | AlamatCreateManyDesaInput[]
    skipDuplicates?: boolean
  }

  export type KecamatanUpsertWithoutDesaInput = {
    update: XOR<KecamatanUpdateWithoutDesaInput, KecamatanUncheckedUpdateWithoutDesaInput>
    create: XOR<KecamatanCreateWithoutDesaInput, KecamatanUncheckedCreateWithoutDesaInput>
    where?: KecamatanWhereInput
  }

  export type KecamatanUpdateToOneWithWhereWithoutDesaInput = {
    where?: KecamatanWhereInput
    data: XOR<KecamatanUpdateWithoutDesaInput, KecamatanUncheckedUpdateWithoutDesaInput>
  }

  export type KecamatanUpdateWithoutDesaInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    kabupaten?: KabupatenUpdateOneRequiredWithoutKecamatanNestedInput
    alamat?: AlamatUpdateManyWithoutKecamatanNestedInput
  }

  export type KecamatanUncheckedUpdateWithoutDesaInput = {
    kodeProv?: StringFieldUpdateOperationsInput | string
    kodeKab?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    alamat?: AlamatUncheckedUpdateManyWithoutKecamatanNestedInput
  }

  export type AlamatUpsertWithWhereUniqueWithoutDesaInput = {
    where: AlamatWhereUniqueInput
    update: XOR<AlamatUpdateWithoutDesaInput, AlamatUncheckedUpdateWithoutDesaInput>
    create: XOR<AlamatCreateWithoutDesaInput, AlamatUncheckedCreateWithoutDesaInput>
  }

  export type AlamatUpdateWithWhereUniqueWithoutDesaInput = {
    where: AlamatWhereUniqueInput
    data: XOR<AlamatUpdateWithoutDesaInput, AlamatUncheckedUpdateWithoutDesaInput>
  }

  export type AlamatUpdateManyWithWhereWithoutDesaInput = {
    where: AlamatScalarWhereInput
    data: XOR<AlamatUpdateManyMutationInput, AlamatUncheckedUpdateManyWithoutDesaInput>
  }

  export type AlamatCreateManyUsersInput = {
    id?: number
    kodeProv: string
    kodeKab: string
    kodeKec: string
    kodeDesa: string
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
  }

  export type ProductCreateManyUserInput = {
    id?: number
    nama: string
    desc: string
    path: string
  }

  export type TransaksiCreateManyUserInput = {
    id?: number
    productId: number
    status: number
  }

  export type ReviewCreateManyUserInput = {
    id?: number
    productId: number
    review: string
    rating: number
    time?: Date | string | null
  }

  export type CartCreateManyUserInput = {
    id?: number
    productId: number
    variasiId: number
    quantity: number
    time: Date | string
  }

  export type AlamatUpdateWithoutUsersInput = {
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
    provinsi?: ProvinsiUpdateOneRequiredWithoutAlamatNestedInput
    kabupaten?: KabupatenUpdateOneRequiredWithoutAlamatNestedInput
    kecamatan?: KecamatanUpdateOneRequiredWithoutAlamatNestedInput
    desa?: DesaUpdateOneRequiredWithoutAlamatNestedInput
  }

  export type AlamatUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    kodeProv?: StringFieldUpdateOperationsInput | string
    kodeKab?: StringFieldUpdateOperationsInput | string
    kodeKec?: StringFieldUpdateOperationsInput | string
    kodeDesa?: StringFieldUpdateOperationsInput | string
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
  }

  export type AlamatUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    kodeProv?: StringFieldUpdateOperationsInput | string
    kodeKab?: StringFieldUpdateOperationsInput | string
    kodeKec?: StringFieldUpdateOperationsInput | string
    kodeDesa?: StringFieldUpdateOperationsInput | string
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
  }

  export type ProductUpdateWithoutUserInput = {
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    transaksi?: TransaksiUpdateManyWithoutProductNestedInput
    review?: ReviewUpdateManyWithoutProductNestedInput
    cart?: CartUpdateManyWithoutProductNestedInput
    variasi?: VariasiUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    transaksi?: TransaksiUncheckedUpdateManyWithoutProductNestedInput
    review?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    cart?: CartUncheckedUpdateManyWithoutProductNestedInput
    variasi?: VariasiUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
  }

  export type TransaksiUpdateWithoutUserInput = {
    status?: IntFieldUpdateOperationsInput | number
    product?: ProductUpdateOneRequiredWithoutTransaksiNestedInput
  }

  export type TransaksiUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
  }

  export type TransaksiUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
  }

  export type ReviewUpdateWithoutUserInput = {
    review?: StringFieldUpdateOperationsInput | string
    rating?: FloatFieldUpdateOperationsInput | number
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product?: ProductUpdateOneRequiredWithoutReviewNestedInput
  }

  export type ReviewUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    review?: StringFieldUpdateOperationsInput | string
    rating?: FloatFieldUpdateOperationsInput | number
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReviewUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    review?: StringFieldUpdateOperationsInput | string
    rating?: FloatFieldUpdateOperationsInput | number
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CartUpdateWithoutUserInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutCartNestedInput
    variasi?: VariasiUpdateOneRequiredWithoutCartNestedInput
  }

  export type CartUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    variasiId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    variasiId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransaksiCreateManyProductInput = {
    id?: number
    userId: number
    status: number
  }

  export type ReviewCreateManyProductInput = {
    id?: number
    userId: number
    review: string
    rating: number
    time?: Date | string | null
  }

  export type CartCreateManyProductInput = {
    id?: number
    userId: number
    variasiId: number
    quantity: number
    time: Date | string
  }

  export type VariasiCreateManyProductInput = {
    id?: number
    nama: string
    harga: number
    path: string
    stok?: number
  }

  export type TransaksiUpdateWithoutProductInput = {
    status?: IntFieldUpdateOperationsInput | number
    user?: UsersUpdateOneRequiredWithoutTransaksiNestedInput
  }

  export type TransaksiUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
  }

  export type TransaksiUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
  }

  export type ReviewUpdateWithoutProductInput = {
    review?: StringFieldUpdateOperationsInput | string
    rating?: FloatFieldUpdateOperationsInput | number
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UsersUpdateOneRequiredWithoutReviewNestedInput
  }

  export type ReviewUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    review?: StringFieldUpdateOperationsInput | string
    rating?: FloatFieldUpdateOperationsInput | number
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReviewUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    review?: StringFieldUpdateOperationsInput | string
    rating?: FloatFieldUpdateOperationsInput | number
    time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CartUpdateWithoutProductInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UsersUpdateOneRequiredWithoutCartNestedInput
    variasi?: VariasiUpdateOneRequiredWithoutCartNestedInput
  }

  export type CartUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    variasiId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    variasiId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariasiUpdateWithoutProductInput = {
    nama?: StringFieldUpdateOperationsInput | string
    harga?: IntFieldUpdateOperationsInput | number
    path?: StringFieldUpdateOperationsInput | string
    stok?: IntFieldUpdateOperationsInput | number
    cart?: CartUpdateManyWithoutVariasiNestedInput
  }

  export type VariasiUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    harga?: IntFieldUpdateOperationsInput | number
    path?: StringFieldUpdateOperationsInput | string
    stok?: IntFieldUpdateOperationsInput | number
    cart?: CartUncheckedUpdateManyWithoutVariasiNestedInput
  }

  export type VariasiUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    harga?: IntFieldUpdateOperationsInput | number
    path?: StringFieldUpdateOperationsInput | string
    stok?: IntFieldUpdateOperationsInput | number
  }

  export type CartCreateManyVariasiInput = {
    id?: number
    userId: number
    productId: number
    quantity: number
    time: Date | string
  }

  export type CartUpdateWithoutVariasiInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UsersUpdateOneRequiredWithoutCartNestedInput
    product?: ProductUpdateOneRequiredWithoutCartNestedInput
  }

  export type CartUncheckedUpdateWithoutVariasiInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartUncheckedUpdateManyWithoutVariasiInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type KabupatenCreateManyProvinsiInput = {
    kode: string
    nama: string
  }

  export type AlamatCreateManyProvinsiInput = {
    id?: number
    userId: number
    kodeKab: string
    kodeKec: string
    kodeDesa: string
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
  }

  export type KabupatenUpdateWithoutProvinsiInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    kecamatan?: KecamatanUpdateManyWithoutKabupatenNestedInput
    alamat?: AlamatUpdateManyWithoutKabupatenNestedInput
  }

  export type KabupatenUncheckedUpdateWithoutProvinsiInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    kecamatan?: KecamatanUncheckedUpdateManyWithoutKabupatenNestedInput
    alamat?: AlamatUncheckedUpdateManyWithoutKabupatenNestedInput
  }

  export type KabupatenUncheckedUpdateManyWithoutProvinsiInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type AlamatUpdateWithoutProvinsiInput = {
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
    users?: UsersUpdateOneRequiredWithoutAlamatNestedInput
    kabupaten?: KabupatenUpdateOneRequiredWithoutAlamatNestedInput
    kecamatan?: KecamatanUpdateOneRequiredWithoutAlamatNestedInput
    desa?: DesaUpdateOneRequiredWithoutAlamatNestedInput
  }

  export type AlamatUncheckedUpdateWithoutProvinsiInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    kodeKab?: StringFieldUpdateOperationsInput | string
    kodeKec?: StringFieldUpdateOperationsInput | string
    kodeDesa?: StringFieldUpdateOperationsInput | string
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
  }

  export type AlamatUncheckedUpdateManyWithoutProvinsiInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    kodeKab?: StringFieldUpdateOperationsInput | string
    kodeKec?: StringFieldUpdateOperationsInput | string
    kodeDesa?: StringFieldUpdateOperationsInput | string
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
  }

  export type KecamatanCreateManyKabupatenInput = {
    kode: string
    nama: string
  }

  export type AlamatCreateManyKabupatenInput = {
    id?: number
    userId: number
    kodeKec: string
    kodeDesa: string
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
  }

  export type KecamatanUpdateWithoutKabupatenInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    desa?: DesaUpdateManyWithoutKecamatanNestedInput
    alamat?: AlamatUpdateManyWithoutKecamatanNestedInput
  }

  export type KecamatanUncheckedUpdateWithoutKabupatenInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    desa?: DesaUncheckedUpdateManyWithoutKecamatanNestedInput
    alamat?: AlamatUncheckedUpdateManyWithoutKecamatanNestedInput
  }

  export type KecamatanUncheckedUpdateManyWithoutKabupatenInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type AlamatUpdateWithoutKabupatenInput = {
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
    users?: UsersUpdateOneRequiredWithoutAlamatNestedInput
    provinsi?: ProvinsiUpdateOneRequiredWithoutAlamatNestedInput
    kecamatan?: KecamatanUpdateOneRequiredWithoutAlamatNestedInput
    desa?: DesaUpdateOneRequiredWithoutAlamatNestedInput
  }

  export type AlamatUncheckedUpdateWithoutKabupatenInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    kodeKec?: StringFieldUpdateOperationsInput | string
    kodeDesa?: StringFieldUpdateOperationsInput | string
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
  }

  export type AlamatUncheckedUpdateManyWithoutKabupatenInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    kodeKec?: StringFieldUpdateOperationsInput | string
    kodeDesa?: StringFieldUpdateOperationsInput | string
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
  }

  export type DesaCreateManyKecamatanInput = {
    kode: string
    nama: string
  }

  export type AlamatCreateManyKecamatanInput = {
    id?: number
    userId: number
    kodeDesa: string
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
  }

  export type DesaUpdateWithoutKecamatanInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    alamat?: AlamatUpdateManyWithoutDesaNestedInput
  }

  export type DesaUncheckedUpdateWithoutKecamatanInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    alamat?: AlamatUncheckedUpdateManyWithoutDesaNestedInput
  }

  export type DesaUncheckedUpdateManyWithoutKecamatanInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
  }

  export type AlamatUpdateWithoutKecamatanInput = {
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
    users?: UsersUpdateOneRequiredWithoutAlamatNestedInput
    provinsi?: ProvinsiUpdateOneRequiredWithoutAlamatNestedInput
    kabupaten?: KabupatenUpdateOneRequiredWithoutAlamatNestedInput
    desa?: DesaUpdateOneRequiredWithoutAlamatNestedInput
  }

  export type AlamatUncheckedUpdateWithoutKecamatanInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    kodeDesa?: StringFieldUpdateOperationsInput | string
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
  }

  export type AlamatUncheckedUpdateManyWithoutKecamatanInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    kodeDesa?: StringFieldUpdateOperationsInput | string
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
  }

  export type AlamatCreateManyDesaInput = {
    id?: number
    userId: number
    kodePos: string
    detail?: string
    catatan?: string
    is_toko?: number
    is_default?: number
  }

  export type AlamatUpdateWithoutDesaInput = {
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
    users?: UsersUpdateOneRequiredWithoutAlamatNestedInput
    provinsi?: ProvinsiUpdateOneRequiredWithoutAlamatNestedInput
    kabupaten?: KabupatenUpdateOneRequiredWithoutAlamatNestedInput
    kecamatan?: KecamatanUpdateOneRequiredWithoutAlamatNestedInput
  }

  export type AlamatUncheckedUpdateWithoutDesaInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
  }

  export type AlamatUncheckedUpdateManyWithoutDesaInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    kodePos?: StringFieldUpdateOperationsInput | string
    detail?: StringFieldUpdateOperationsInput | string
    catatan?: StringFieldUpdateOperationsInput | string
    is_toko?: IntFieldUpdateOperationsInput | number
    is_default?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}